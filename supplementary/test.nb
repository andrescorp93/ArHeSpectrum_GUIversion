(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    162704,       3430]
NotebookOptionsPosition[    158394,       3349]
NotebookOutlinePosition[    158735,       3364]
CellTagsIndexPosition[    158692,       3361]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"PowerExpand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     FractionBox[
      SubscriptBox["c", "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Rho]", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}], 
       RowBox[{"6", 
        RowBox[{"n", "/", "2"}]}]]], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", "n", "]"}], ">", "1"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", 
          SuperscriptBox["\[Rho]", "2"], "]"}], ">", "0"}]}], "}"}]}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.794989048731216*^9, 3.7949891537584867`*^9}, {
  3.7949914714139233`*^9, 3.794991473768228*^9}, {3.7952828041892805`*^9, 
  3.795282804582158*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b79d5a24-d07c-42da-ba17-ce89da84202c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   SuperscriptBox["\[Rho]", 
    RowBox[{"1", "-", 
     RowBox[{"6", " ", "n"}]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     RowBox[{"3", " ", "n"}]}], "]"}], " ", 
   SubscriptBox["c", "n"]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"3", " ", "n"}], "]"}]]], "Output",
 CellChangeTimes->{{3.794989102266611*^9, 3.79498915473748*^9}, 
   3.794989804138756*^9, 3.794991476762826*^9, 3.795199725431363*^9, 
   3.7952643274666986`*^9, 3.7952828107529287`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2f39da0e-eed9-45ac-8277-7706cdcc9dd3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"k1", "[", "n_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
    SubscriptBox["c", "n"]}], 
   RowBox[{"Gamma", "[", 
    FractionBox["n", "2"], "]"}]]}]], "Input",
 CellChangeTimes->{{3.794989287182713*^9, 3.794989303763775*^9}, {
  3.7952828416481495`*^9, 3.7952828422405405`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"52210dff-f28b-4edf-9f07-434bc4647882"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[Rho]", "2"], "2"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"k1", "[", "n", "]"}]}], "v"]}], " ", 
          SuperscriptBox["\[Rho]", 
           RowBox[{"1", "-", "n"}]]}], "]"}]}], ")"}], ",", "\[Rho]"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], ">", "3"}], "&&", 
      RowBox[{
       RowBox[{"Im", "[", 
        SubscriptBox["c", "n"], "]"}], "\[Equal]", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.794989161385539*^9, 3.794989203273471*^9}, {
  3.794989312329103*^9, 3.7949893220791063`*^9}, {3.794989381264286*^9, 
  3.794989393484027*^9}, {3.794989424067313*^9, 3.794989424513925*^9}, {
  3.794989695293618*^9, 3.794989779859467*^9}, {3.794989875247171*^9, 
  3.794989875710574*^9}, {3.795199714134861*^9, 3.7951997168666763`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c1fa9de1-2c8c-4fa5-a96e-c5e92dd5f5d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["\[Pi]", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]], " ", 
  RowBox[{"Gamma", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "v", " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["n", "2"], "]"}]}], 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
       SubscriptBox["c", "n"]}]]}], ")"}], 
   RowBox[{"-", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.794989236787252*^9, 3.794989349428019*^9, {3.794989413323072*^9, 
   3.7949894412670403`*^9}, 3.7949894768448057`*^9, 3.7949897471838703`*^9, 
   3.794989794694132*^9, 3.794989840842235*^9, 3.794989883770282*^9, 
   3.7951997480807714`*^9, 3.795264356671177*^9, 3.7952828683290606`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0bbcb7fd-0205-4a25-a040-eefc6c748de4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"k2", "[", "n_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Pi]", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
        SubscriptBox["c", "n"]}]]}], ")"}], 
    RowBox[{"-", 
     FractionBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.794989908523587*^9, 3.794989915440321*^9}, {
   3.7951997600313196`*^9, 3.7951997627821455`*^9}, 3.795199802906227*^9, 
   3.795200806353961*^9, {3.795282877851536*^9, 3.795282908206781*^9}, 
   3.7952832793891325`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"c1281abd-87b1-487b-a585-f1ec9973679d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"k2", "[", "n", "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"2", "\[Pi]", " ", "R", " ", "T"}]], ")"}], 
     FractionBox["3", "2"]], 
    SuperscriptBox["v", 
     RowBox[{"-", 
      FractionBox["2", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]]}]], "4", "\[Pi]", " ", 
    SuperscriptBox["v", "3"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        SuperscriptBox["v", "2"]}], 
       RowBox[{"2", "R", " ", "T"}]]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], ">", "3"}], "&&", 
      RowBox[{
       RowBox[{"Im", "[", "n", "]"}], "\[Equal]", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        FractionBox["\[Mu]", 
         RowBox[{"R", " ", "T"}]], "]"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7949899259282923`*^9, 3.794989991543725*^9}, {
   3.79499004241262*^9, 3.794990058699293*^9}, {3.794990217023491*^9, 
   3.7949902278111143`*^9}, 3.7949902722095757`*^9, {3.794990317246934*^9, 
   3.794990352169074*^9}, {3.795199776556734*^9, 3.7951997779246407`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"69a9639f-2d2f-427d-ad14-fb1472eb19bf"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["2", "\[Pi]"], ")"}], 
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["\[Mu]", 
     RowBox[{"R", " ", "T"}]], ")"}], 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"2", "+", 
    FractionBox["1", 
     RowBox[{"1", "-", "n"}]]}], "]"}], " ", 
  RowBox[{"Gamma", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["n", "2"], "]"}]}], 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
       SubscriptBox["c", "n"]}]]}], ")"}], 
   RowBox[{"-", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.7949900700861273`*^9, 3.794990238531501*^9, {3.7949903019365683`*^9, 
   3.794990357283375*^9}, {3.7951997843669176`*^9, 3.795199807425226*^9}, 
   3.7952008144473357`*^9, {3.7952829015573683`*^9, 3.7952829153126*^9}, 
   3.7952832861336064`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"a2fbd693-5aeb-430e-8838-a7150b3d622a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "\[Pi]"], ")"}], 
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["\[Mu]", 
      RowBox[{"R", " ", "T"}]], ")"}], 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "+", 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
        SubscriptBox["c", "n"]}]]}], ")"}], 
    RowBox[{"-", 
     FractionBox["2", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      FractionBox["40", "11"], " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], ",", 
    RowBox[{"R", "\[Rule]", "8.31"}], ",", 
    RowBox[{
     SubscriptBox["c", "n"], "\[Rule]", 
     RowBox[{"9", " ", 
      SuperscriptBox["2", "n"], " ", 
      SuperscriptBox["10", 
       RowBox[{"14", "-", 
        RowBox[{"8", "n"}]}]]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7949912605477877`*^9, 3.794991260998293*^9}, 
   3.795282991965624*^9, 3.795283289482828*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"9547a1c7-88f0-422e-84b4-411c8274cd1f"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["0.0004375888852423148`", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
  SuperscriptBox["9", 
   FractionBox["2", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["2", "\[Pi]"], ")"}], 
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["1", "T"], ")"}], 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", 
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"2", "+", 
    FractionBox["1", 
     RowBox[{"1", "-", "n"}]]}], "]"}], " ", 
  RowBox[{"Gamma", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "14"}], "+", 
         RowBox[{"7", " ", "n"}]}]], " ", 
       SuperscriptBox["5", 
        RowBox[{
         RowBox[{"-", "14"}], "+", 
         RowBox[{"8", " ", "n"}]}]], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["n", "2"], "]"}]}], 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}]]}], ")"}], 
   RowBox[{"-", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]}]]}]], "Output",
 CellChangeTimes->{3.7949910918385487`*^9, 3.794991261741695*^9, 
  3.7952829928281946`*^9, 3.7952832906447535`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"57e16f54-e8bd-4507-ace5-b1237ac824b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         SuperscriptBox["0.0004375888852423148`", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
         SuperscriptBox["9", 
          FractionBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}]]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["2", "\[Pi]"], ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", "3"}], "+", "n"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "T"], ")"}], 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"2", "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "n"}]]}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "3"}], "+", "n"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"-", "14"}], "+", 
                RowBox[{"7", " ", "n"}]}]], " ", 
              SuperscriptBox["5", 
               RowBox[{
                RowBox[{"-", "14"}], "+", 
                RowBox[{"8", " ", "n"}]}]], " ", 
              RowBox[{"Gamma", "[", 
               FractionBox["n", "2"], "]"}]}], 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}]]}], ")"}], 
          RowBox[{"-", 
           FractionBox["2", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]]}], "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{
         SuperscriptBox["0.0004375888852423148`", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
         SuperscriptBox["9", 
          FractionBox["2", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}]]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["2", "\[Pi]"], ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", "3"}], "+", "n"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "T"], ")"}], 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"2", "+", 
           FractionBox["1", 
            RowBox[{"1", "-", "n"}]]}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "3"}], "+", "n"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["2", 
               RowBox[{
                RowBox[{"-", "14"}], "+", 
                RowBox[{"7", " ", "n"}]}]], " ", 
              SuperscriptBox["5", 
               RowBox[{
                RowBox[{"-", "14"}], "+", 
                RowBox[{"8", " ", "n"}]}]], " ", 
              RowBox[{"Gamma", "[", 
               FractionBox["n", "2"], "]"}]}], 
             RowBox[{"Gamma", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}]]}], ")"}], 
          RowBox[{"-", 
           FractionBox["2", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}]]}]]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "300", ",", "1000"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "4", ",", "7", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.794990870441905*^9, 3.794990932735176*^9}, {
  3.7949909693222313`*^9, 3.794990990190117*^9}, {3.794991025233756*^9, 
  3.794991060941135*^9}, {3.7949911033292837`*^9, 3.794991168816062*^9}, {
  3.79499120042485*^9, 3.794991203192998*^9}, {3.794991279660183*^9, 
  3.794991293467203*^9}, {3.7952830034540887`*^9, 3.7952830135261726`*^9}, {
  3.795283301871204*^9, 3.7952833065242896`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"fc208748-692c-45b4-8ce8-36429048e04d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 4, 7, 1}}, Typeset`size$$ = {360., {95., 101.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$18855$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$18855$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Re[(((((0.0004375888852423148^(-(1/2) + 1/(-1 + $CellContext`n$$)) 
               9^(2/(-1 + $CellContext`n$$))) (2/
                Pi)^((-3 + $CellContext`n$$)/(2 (-1 + $CellContext`n$$)))) (
               1/$CellContext`T)^(-(1/2) + 1/(-1 + $CellContext`n$$))) 
            Gamma[2 + 1/(1 - $CellContext`n$$)]) 
           Gamma[(-3 + $CellContext`n$$)/(-1 + $CellContext`n$$)]) (-(((I 
               2^(-14 + 7 $CellContext`n$$)) 5^(-14 + 8 $CellContext`n$$)) (
              Gamma[$CellContext`n$$/2]/
              Gamma[(1/2) (-1 + $CellContext`n$$)])))^(-(
             2/(-1 + $CellContext`n$$)))], 
         Im[(((((0.0004375888852423148^(-(1/2) + 1/(-1 + $CellContext`n$$)) 
               9^(2/(-1 + $CellContext`n$$))) (2/
                Pi)^((-3 + $CellContext`n$$)/(2 (-1 + $CellContext`n$$)))) (
               1/$CellContext`T)^(-(1/2) + 1/(-1 + $CellContext`n$$))) 
            Gamma[2 + 1/(1 - $CellContext`n$$)]) 
           Gamma[(-3 + $CellContext`n$$)/(-1 + $CellContext`n$$)]) (-(((I 
               2^(-14 + 7 $CellContext`n$$)) 5^(-14 + 8 $CellContext`n$$)) (
              Gamma[$CellContext`n$$/2]/
              Gamma[(1/2) (-1 + $CellContext`n$$)])))^(-(
             2/(-1 + $CellContext`n$$)))]}, {$CellContext`T, 300, 1000}], 
      "Specifications" :> {{$CellContext`n$$, 4, 7, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {141., 148.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.794990998600606*^9, 3.794991063233008*^9, {3.794991104467259*^9, 
   3.794991125324603*^9}, {3.794991158378572*^9, 3.794991170073257*^9}, 
   3.7949912043174953`*^9, 3.79499129425943*^9, 3.79528301828058*^9, 
   3.795283307537964*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"52d45dc7-330c-4a2c-8e3e-4e634631abee"]
}, Open  ]],

Cell["Add other components as a perturbation", "Text",
 CellChangeTimes->{{3.795198411054621*^9, 
  3.7951984394111195`*^9}},ExpressionUUID->"dadfb4b4-3f18-408a-be70-\
1cb701624321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[Rho]", "2"], "2"], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", "v"]}], 
       FractionBox[
        RowBox[{"k1", "[", 
         RowBox[{"i", " ", "n"}], "]"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{
          RowBox[{"i", " ", "n"}], "-", "1"}]]]}], ",", "\[Rho]"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"k1", "[", "n", "]"}]}], "v"]}], " ", 
      SuperscriptBox["\[Rho]", 
       RowBox[{"1", "-", "n"}]]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "n", "]"}], ">", "3"}], "&&", 
      RowBox[{
       RowBox[{"Im", "[", 
        SubscriptBox["c", "n"], "]"}], "\[Equal]", "0"}], "&&", 
      RowBox[{"v", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7951979155836725`*^9, 3.795198016593733*^9}, {
  3.7951980496506796`*^9, 3.795198064043235*^9}, {3.7951981792180414`*^9, 
  3.79519821373796*^9}, {3.795198315607571*^9, 3.795198319153927*^9}, {
  3.7951987574902496`*^9, 3.7951987806248665`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"21612b4a-bb1a-4edd-b7ed-a4a1a1d1d8e5"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"i", " ", "n"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]}]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"i", " ", "n"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"i", " ", "n"}]}], ")"}]}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "v", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox["n", "2"], "]"}]}], 
         RowBox[{
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
          SubscriptBox["c", "n"]}]]}], ")"}], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"i", " ", "n"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]]], " ", 
     SubscriptBox["c", 
      RowBox[{"i", " ", "n"}]]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "v", " ", 
     RowBox[{"Gamma", "[", 
      FractionBox[
       RowBox[{"i", " ", "n"}], "2"], "]"}]}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{"i", " ", "n"}], "]"}], ">", "3"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7951981304288425`*^9, 3.7951985710009527`*^9, 
  3.7951988277127323`*^9, 3.795200878119833*^9, 3.7952833800105753`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2c935322-d926-41f7-934a-a2c285664da6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"k2i", "[", 
   RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{"3", "-", 
        RowBox[{"i", " ", "n"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]}]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"i", " ", "n"}]}], ")"}]}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Gamma", "[", 
          FractionBox["n", "2"], "]"}]}], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
         SubscriptBox["c", "n"]}]]}], ")"}], 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]], " ", 
    SubscriptBox["c", 
     RowBox[{"i", " ", "n"}]]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{"i", " ", "n"}], "2"], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.7951989335268106`*^9, 3.7951989526224875`*^9}, 
   3.795200890924532*^9, {3.7952087674097853`*^9, 3.7952087680892353`*^9}, {
   3.79528343010524*^9, 3.7952834393203535`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"01e9a9d8-1cd8-41c9-bdd7-4a01ba5852ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["\[Mu]", 
     RowBox[{"2", "\[Pi]", " ", "R", " ", "T"}]], ")"}], 
   FractionBox["3", "2"]], 
  FractionBox[
   SuperscriptBox["v", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      RowBox[{"i", " ", "n"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]]], "v"], "4", "\[Pi]", " ", 
  SuperscriptBox["v", "3"], 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Mu]", " ", 
      SuperscriptBox["v", "2"]}], 
     RowBox[{"2", "R", " ", "T"}]]}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"k2i", "[", 
      RowBox[{"i", ",", "n"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Mu]", 
        RowBox[{"2", "\[Pi]", " ", "R", " ", "T"}]], ")"}], 
      FractionBox["3", "2"]], 
     FractionBox[
      SuperscriptBox["v", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"i", " ", "n"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]]], "v"], "4", "\[Pi]", " ", 
     SuperscriptBox["v", "3"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         SuperscriptBox["v", "2"]}], 
        RowBox[{"2", "R", " ", "T"}]]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", ">", "3"}], "&&", 
       RowBox[{"i", ">", "2"}], "&&", 
       RowBox[{
        RowBox[{"Re", "[", 
         FractionBox["\[Mu]", 
          RowBox[{"R", " ", "T"}]], "]"}], ">", "0"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.795198961261223*^9, 3.7951989693896203`*^9}, {
   3.79520090539194*^9, 3.795200915247484*^9}, {3.795201027205784*^9, 
   3.7952010280953755`*^9}, {3.795208772960471*^9, 3.7952087736619368`*^9}, {
   3.795283418499541*^9, 3.7952834201296234`*^9}, 
   3.7953243409070673`*^9},ExpressionUUID->"27b9a8bc-8929-4400-9575-\
096cee01a7b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["2", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "i"}], ")"}], " ", "n"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
    SuperscriptBox["\[Pi]", 
     FractionBox[
      RowBox[{"3", "-", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"R", " ", "T"}]], ")"}], 
     FractionBox[
      RowBox[{"3", "-", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"i", " ", "n"}]}], ")"}]}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", "i"}], ")"}], " ", "n"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}]], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Gamma", "[", 
          FractionBox["n", "2"], "]"}]}], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "]"}], " ", 
         SubscriptBox["c", "n"]}]]}], ")"}], 
     FractionBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"i", " ", "n"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]], " ", 
    SubscriptBox["c", 
     RowBox[{"i", " ", "n"}]]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{"i", " ", "n"}], "2"], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7951990037962313`*^9, 3.795200969013685*^9, 
  3.795201042547971*^9, 3.7952019271799507`*^9, 3.795208779431772*^9, 
  3.7952834607235117`*^9},
 FontSize->24,
 CellLabel->"Out[16]=",ExpressionUUID->"9bc3d546-5fe0-464e-8ab5-28c6fa6ee23d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["0.6", "3.4"]], "Input",
 CellChangeTimes->{{3.7953043933365555`*^9, 3.795304399003317*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2b3989e7-d60a-4bb1-8bed-95f06824532e"],

Cell[BoxData["0.17647058823529413`"], "Output",
 CellChangeTimes->{3.7953043995316677`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c26b0c04-ed29-43bc-8318-507856d2984d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["\[Omega]", "0"], 
     SuperscriptBox["r0", "n"]}], 
    RowBox[{
     SuperscriptBox["r0", "n"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], 
      RowBox[{"n", "/", "2"}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795269750002423*^9, 3.795269801106327*^9}, {
  3.7953092165295763`*^9, 3.7953092825003495`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"da426355-7c1b-42b9-a05b-8c9578b1bd92"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["r0", "n"], " ", 
     SubscriptBox["\[Omega]", "0"]}], 
    RowBox[{
     SuperscriptBox["r0", "n"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["z", "2"], "+", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}], 
      RowBox[{"n", "/", "2"}]]}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Output",
 CellChangeTimes->{3.795269802919531*^9, 3.795309350827759*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a38cd71a-d0ed-4ccd-aea4-542b15b220de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"2", "\[Pi]", " ", "R", " ", "T"}]], ")"}], 
     FractionBox["3", "2"]], "4", "\[Pi]", " ", 
    SuperscriptBox["v", "3"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        SuperscriptBox["v", "2"]}], 
       RowBox[{"2", "R", " ", "T"}]]}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        FractionBox["f", "v"]}]]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"31373703-768f-4d0f-ab5b-c3386bde521a"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"R", " ", "T"}]], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["T", "2"]}], 
       SuperscriptBox["\[Mu]", "2"]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["f", "4"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", 
               FractionBox["3", "2"]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["f", "2"], " ", "\[Mu]"}], 
            RowBox[{"8", " ", "R", " ", "T"}]]}]}], "]"}]}], 
       RowBox[{"32", " ", 
        SqrtBox["\[Pi]"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["\[Mu]", 
       RowBox[{"R", " ", "T"}]], "]"}], "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", "f", "]"}], "\[LessEqual]", "0"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.795324499859852*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"97ba2ba7-3ee2-4316-b8ea-452acf7a4aa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PowerExpand", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"R", " ", "T"}]], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["T", "2"]}], 
       SuperscriptBox["\[Mu]", "2"]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["f", "4"], " ", 
        RowBox[{"MeijerG", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", 
               FractionBox["3", "2"]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["f", "2"], " ", "\[Mu]"}], 
            RowBox[{"8", " ", "R", " ", "T"}]]}]}], "]"}]}], 
       RowBox[{"32", " ", 
        SqrtBox["\[Pi]"]}]]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.795324572655199*^9, 3.7953245828149405`*^9}, {
  3.795324825047757*^9, 3.7953248728887653`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fe232ecc-d77e-4970-9e04-e928586e1988"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SqrtBox["R"], " ", 
    SqrtBox["T"]}], 
   SqrtBox["\[Mu]"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "4"], " ", 
    SuperscriptBox["\[Mu]", 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["f", "2"], " ", "\[Mu]"}], 
        RowBox[{"8", " ", "R", " ", "T"}]]}]}], "]"}]}], 
   RowBox[{"16", " ", 
    SqrtBox["2"], " ", "\[Pi]", " ", 
    SuperscriptBox["R", 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["T", 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.7953245763346386`*^9, {3.795324831894805*^9, 3.7953248732670183`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"d4c0d056-1233-4b9f-b70c-b1c02c0efb75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", 
           FractionBox["3", "2"]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"-", "x"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ">", "0"}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.795324957265357*^9, 3.7953250070154085`*^9}, {
  3.795327338596899*^9, 3.7953273572581453`*^9}, {3.795336313924734*^9, 
  3.795336324460723*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f02233b2-3bd0-4d48-b9c0-e2d013cb5c69"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    SqrtBox["\[Pi]"], 
    SuperscriptBox["x", "2"]], "-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], 
    SuperscriptBox["x", 
     RowBox[{"3", "/", "2"}]]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}], "x"], "+", 
   FractionBox[
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
    RowBox[{"3", " ", 
     SqrtBox["x"]}]], "+", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"(", 
     RowBox[{"25", "-", 
      RowBox[{"18", " ", "EulerGamma"}], "-", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["2", "225"], " ", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "59"}], "+", 
        RowBox[{"30", " ", "EulerGamma"}], "+", 
        RowBox[{"10", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "+", 
        RowBox[{"10", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}], ")"}], " ", "x"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], 
     RowBox[{"3", "/", "2"}]],
    SeriesData[$CellContext`x, 0, {}, -4, 3, 2],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {
   Pi^Rational[1, 2], Complex[0, -1] Pi, (-2) Pi^Rational[1, 2], Complex[0, 
      Rational[4, 3]] Pi, Rational[1, 9] 
    Pi^Rational[1, 2] (25 - 18 EulerGamma + Complex[0, -6] Pi - 6 
     Log[4 $CellContext`x]), 0, Rational[-2, 225] 
    Pi^Rational[1, 2] (-59 + 30 EulerGamma + Complex[0, 10] Pi + 
     10 Log[4 $CellContext`x])}, -4, 3, 2],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7953250079100027`*^9, {3.795327340581212*^9, 3.7953273589962983`*^9}, 
   3.7953363267892666`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f81049e5-30bf-4528-af5c-d85242be27e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseSeries", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "j"], " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"6", "j"}], "-", "1"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7953467370101557`*^9, 3.795346778935973*^9}, {
  3.7953468467089434`*^9, 3.79534685240172*^9}, {3.79534691048526*^9, 
  3.795346911013611*^9}, {3.7953469833736224`*^9, 3.79534705484204*^9}, {
  3.795347353995038*^9, 3.7953473726615767`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0dac325e-8081-4077-b59c-2a7de99336d6"],

Cell[BoxData[
 RowBox[{"InverseSeries", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "5"], " ", 
    SubscriptBox["c", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["x", "11"], " ", 
    SubscriptBox["c", "2"]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7953473730948653`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"13f223bd-e49c-49ab-9c0f-4224093eee4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Rho]", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        FractionBox[
         SubscriptBox["c", 
          RowBox[{"6", "n"}]], 
         SuperscriptBox["\[Rho]", 
          RowBox[{
           RowBox[{"6", "n"}], "-", "1"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ")"}], "2"], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", 
     SubscriptBox["\[Rho]", "0"], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7953544394953685`*^9, 3.7953545766944075`*^9}, {
  3.795354676491629*^9, 3.7953547318067555`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0ef7cc5b-e388-4f7c-9a91-34fbea012ed4"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["c", "36"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "30"]}], 
        RowBox[{"61", " ", 
         SubsuperscriptBox["\[Rho]", "0", "61"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "24"]}], 
        RowBox[{"55", " ", 
         SubsuperscriptBox["\[Rho]", "0", "55"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "18"]}], 
        RowBox[{"49", " ", 
         SubsuperscriptBox["\[Rho]", "0", "49"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "12"]}], 
        RowBox[{"43", " ", 
         SubsuperscriptBox["\[Rho]", "0", "43"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "6"]}], 
        RowBox[{"37", " ", 
         SubsuperscriptBox["\[Rho]", "0", "37"]}]]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["c", "30"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "24"]}], 
        RowBox[{"49", " ", 
         SubsuperscriptBox["\[Rho]", "0", "49"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "18"]}], 
        RowBox[{"43", " ", 
         SubsuperscriptBox["\[Rho]", "0", "43"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "12"]}], 
        RowBox[{"37", " ", 
         SubsuperscriptBox["\[Rho]", "0", "37"]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SubscriptBox["c", "6"]}], 
        RowBox[{"31", " ", 
         SubsuperscriptBox["\[Rho]", "0", "31"]}]]}], ")"}]}], "+", 
    FractionBox[
     SubsuperscriptBox["c", "36", "2"], 
     RowBox[{"67", " ", 
      SubsuperscriptBox["\[Rho]", "0", "67"]}]], "+", 
    FractionBox[
     SubsuperscriptBox["c", "30", "2"], 
     RowBox[{"55", " ", 
      SubsuperscriptBox["\[Rho]", "0", "55"]}]], "+", 
    FractionBox[
     SubsuperscriptBox["c", "24", "2"], 
     RowBox[{"43", " ", 
      SubsuperscriptBox["\[Rho]", "0", "43"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "18"], " ", 
      SubscriptBox["c", "24"]}], 
     RowBox[{"37", " ", 
      SubsuperscriptBox["\[Rho]", "0", "37"]}]], "+", 
    FractionBox[
     SubsuperscriptBox["c", "18", "2"], 
     RowBox[{"31", " ", 
      SubsuperscriptBox["\[Rho]", "0", "31"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "12"], " ", 
      SubscriptBox["c", "24"]}], 
     RowBox[{"31", " ", 
      SubsuperscriptBox["\[Rho]", "0", "31"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "12"], " ", 
      SubscriptBox["c", "18"]}], 
     RowBox[{"25", " ", 
      SubsuperscriptBox["\[Rho]", "0", "25"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "6"], " ", 
      SubscriptBox["c", "24"]}], 
     RowBox[{"25", " ", 
      SubsuperscriptBox["\[Rho]", "0", "25"]}]], "+", 
    FractionBox[
     SubsuperscriptBox["c", "12", "2"], 
     RowBox[{"19", " ", 
      SubsuperscriptBox["\[Rho]", "0", "19"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "6"], " ", 
      SubscriptBox["c", "18"]}], 
     RowBox[{"19", " ", 
      SubsuperscriptBox["\[Rho]", "0", "19"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["c", "6"], " ", 
      SubscriptBox["c", "12"]}], 
     RowBox[{"13", " ", 
      SubsuperscriptBox["\[Rho]", "0", "13"]}]], "+", 
    FractionBox[
     SubsuperscriptBox["c", "6", "2"], 
     RowBox[{"7", " ", 
      SubsuperscriptBox["\[Rho]", "0", "7"]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", 
      SubscriptBox["\[Rho]", "0"], "]"}], "\[NotEqual]", "0"}], "||", 
    RowBox[{
     SubscriptBox["\[Rho]", "0"], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7953545847437477`*^9, 3.795354654538233*^9, {3.795354687675313*^9, 
   3.795354741607259*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"ce205d57-f186-4e71-9d83-f40fa84c00f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Mu]", 
       RowBox[{"2", "\[Pi]", " ", "R", " ", "T"}]], ")"}], 
     FractionBox["3", "2"]], 
    SuperscriptBox["v", "n"], "4", "\[Pi]", " ", 
    SuperscriptBox["v", "3"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Mu]", " ", 
        SuperscriptBox["v", "2"]}], 
       RowBox[{"2", "R", " ", "T"}]]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Im", "[", "n", "]"}], "\[Equal]", "0"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        FractionBox["\[Mu]", 
         RowBox[{"R", " ", "T"}]], "]"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7953592294862022`*^9, 3.7953592596482143`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b5e6ea7f-b30b-4c36-ba5c-f4643998b4ff"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{
       FractionBox["3", "2"], "+", 
       FractionBox["n", "2"]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Mu]", 
        RowBox[{"R", " ", "T"}]], ")"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "-", 
       FractionBox["n", "2"]}]], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", "+", 
       FractionBox["n", "2"]}], "]"}]}], 
    SqrtBox["\[Pi]"]], ",", 
   RowBox[{"n", ">", 
    RowBox[{"-", "4"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7953592746468353`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"8f64063f-14d1-4da9-a7ed-bb2db077182f"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     FractionBox["3", "2"], "+", 
     FractionBox["n", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["\[Mu]", 
      RowBox[{"R", " ", "T"}]], ")"}], 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "-", 
     FractionBox["n", "2"]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "+", 
     FractionBox["n", "2"]}], "]"}]}], 
  SqrtBox["\[Pi]"]]], "Input",ExpressionUUID->"74abff77-994b-43bd-a092-\
417aa3c880ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"m", " ", "k"}], " ", "-", "m"}], 
      RowBox[{"m", "-", "1"}]], ">", 
     RowBox[{"-", "4"}]}], " ", "&&", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", 
       RowBox[{"m", "-", "1"}]]}], ">", 
     RowBox[{"-", "4"}]}], "&&", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"m", "-", "1"}]], ">", 
     RowBox[{"-", "4"}]}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"2", "m", " ", "k"}], "-", "2"}], 
       RowBox[{"m", "-", "1"}]], "-", "2"}], ">", 
     RowBox[{"-", "4"}]}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", "j"}], ")"}]}], "-", "2"}], 
       RowBox[{"m", "-", "1"}]], "-", "2"}], ">", 
     RowBox[{"-", "4"}]}], "&&", 
    RowBox[{"k", "<", "j"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "3", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "3", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "3", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7953593705946913`*^9, 3.795359440263919*^9}, {
   3.7953594742464657`*^9, 3.7953595160692153`*^9}, {3.79535955654467*^9, 
   3.7953596909611464`*^9}, 3.795371285203624*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"2e31e65c-a9a0-48d0-a6e5-c5b72de32134"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJzlnbGvbNuRlx/GEiYbCZAsQ8vHly23Wta4b18WpNMBeObNaJJJbwBCIoCR
zdMITcgQEjHyk+UU/gGSkXgOCHCCxCWZI4SQxm8QR2gkEiRORIJss/fp/vWq
+upXt+8NES84W/29utWra9eqXWvttWp96+//49/5B1/55JNPvv8rn3zy5z/R
f187/+bny6f/6We/cv7J97/84vtfzmvH9e/+dP30t/7c126f7/FOD7muy6ef
L3/xT6scua4/2P73F3+lyIvzeymv66b/08+/Yb9349RDeV1f1H//m0WPOPVQ
XtcX9curokeceiif27k0v2tpftdS9Fyu+6JHnHoon3/vobHPobHPoeh5wV9+
p+gRpx7K6/ryaz/9btEjTj2UT/rfvvbtWbltT5DP9j8VPeL+fp2Knpd2vnvj
f9fK7e8K8vk6ih5xf99H0+9Hkjuv/dD1U8f1eYszv/+T2X/vcfZTcfY7cfaj
rGcp/PJ53+g/FE4/FKdfJfngJ7k9J68n3MfczlHsyfuy0X/9w2+UuNdxfd7+
/lmw8z1O+4vT/uK0f76v+0b/oXDaP7Yz2j/JB/vn9py8nmD/3M5R7Eb7b/fl
r6524fOi4/r8G6u63/nBtOc9TjuL0875Pu0Lp53FaWdx2jnJBzvn9py8nmDn
3M5R7EM7b//+b6+/n8/Tjkd7PQW73eO0Z7b7vnDaU5z2FKc9k3ywZ27PyesJ
9sztHNYO0Z7b//4/P1xKXtFxfd4+/bj0657TblG+9vel6e9L09+Xpr8vTX9f
mv6udrK/Tx7t/Ee//Pbtd0U7Ox4//3bJr3ru86h9kxftmzxn3+Qt+yYP2Td5
hdrH/GFyyW///B+u7WZ+2HF93r73qz9gXOq5j1eHJl4dmnh1aOLVoYlXagfj
1eSS/+X63zfX9jG/7bg+b5d/G37XPc7fK87fK87fm/SE35vtO0o7+Xs3+l9+
47slD++4Pm9/fy+0/x7n7xLn7xLn78r2GqU9/F0/W//v99bv0/dKvuP6vOn7
Ee3/Hm7vy1W+3Jfbvx/le9n+LZ94teqVfsl3PLbjsxI/e+7j6unWHqefeezP
/8ObMt7puD5vedZv8f6+h9v7Hnhs/5/88m/Y9keuvJzzMJy30HzLh85/bN+z
zZ9QXp/JlZ+SK58iV17g9SzNvMu+0X8oXHGCXP3Myq/+69tz8nqu97m2cxR7
km+f4riVV41Pvb2nnu1vHGdxHLv9/TPDqYfjBY57NS7w4+Gph/mwGyc/NTzq
YR7IcfX28ceGUw/zIo7Dlf/48flI+mP+wHG78gQ/np96+PzlOF/PWT/+H0l/
fK5xXkDPLz9fMPXwOcJ5BD0v/PzC1MN47uYdPms4/TnGW85TKK76+Yt8v2Kc
lN8zTub+MOMkeTe/qzhJ+W4+SZ/J1Z/I1T+8nqVw+a/Xfyhc/kWe8xrI3/IF
tufk9az3x7dzFHuSb59inGScU5z0z5+ph3GSV8VJf39G0h/jpDjjJDn1ME6K
M046HvUwTub2zzhJTj2Mk/n3zzhJTj2Mk9kOM06SUw/jZLyPMU6SUw/jZLR/
jJPk1MM4mb43xEly6mGczPdlxknH6c8xTqb2hzhJ7u5XjJPyV8bJ7MczTpJ3
76+Wa5ykfDe/7vsP5xEnV//wepbC5b9e/6Fw+Re5/MXKr/fft+fk9az3x7dz
FHuSb59inBRnnCSnHsZJxjnFSf+8Gkl/jJO8Kk76+zn1ME6KM046HvUwTub2
zzhJTj2Mk7ndM06SUw/jZLbDjJPk1MM4Ge9jjJPk1MM4Ge0f4yQ59TBOpu8N
cZKcehgn832ZcdJx+nOMk6n9IU6Su/sV46T8jHEy+9+Mk+Td+3nFScp37xt9
ftC/t9Fnr2dp1gXsG/2HwuVf5NGPivx6/317Tl7Pen98O0exJ/n2KcZJccZJ
cuphnBRnnCSnHsZJxjnFSf98m3oYJ919fmp41MM4mds/4yQ59TBO5u+bcZKc
ehgnsx1mnCSnHsbJeB9jnCSnHsbJaP8YJ8mph3EyfW+Ik+TUwziZ78uMk47T
n2OcTO0PcZLc3a867l6acfd8X5fH3ffXHylOUr5bf6H+R+6f9/37WH0ml/96
/YfC5V/k8hcrfxtfsD0nr+eW/7Odo9iTfPtUx91LM+7mfO3UwziZ7cdxN+cz
RtJfx91LiZPk1MM4yTi3ST81POphnORVcdL7y0j667h7vrfO426+zx5Jfx13
LyVOklOPH3cvzbib78tH0l/H3UuJk+TU48fdSzPu5vv4qcePu/N7+s8aTn+u
4+6lxElyd79inNR9ZZzM95vrZu+vr9y+Z66DrevOyHP/q+t3yHP/qOssyPNn
6j8Unv1r8uwvkL/df7bn5PXc7g/bOe+LX5d4kY9xUtyvM+R7hqmHcVKccZKc
ehgnxRknyamHcVKccdLxqIdxMref63YY50bSH+Mkr3kdC69TD+NktgPXe3Ad
zNTDOCnOOElOPYyT0f51HQLX2Uw9jJPpe8t7f67LmXoYJ6Pd6vt3ruPJ/hzj
ZGp/eT/OdT/5ftX5yUMzPznX6eT5yfvrxxUnKd+tz1X/I1d/Ilf/8HrqejT9
fq+f/sv5ycnlL1b+Ng/D9py8nts8Cds5ij3Jt091fvLQzE/yff7UwziZ8x3O
T/J910j66/zknG/L85OcD556GCfFGScdj3oYJ3P7OT/J8cRI+uv85IxneX6S
z9uR9Nf5yUP63XN+kv449fj5yUOJk+TUwzgZ21HnJ7kOb+rx85OHEifJqcfP
Tx5KnHSc/lznJw8lTpK7+xXjpOzIOJntO+Mkebc/RnGS8t1+BfU/cvUncvUP
r6euz5X/ev11naY+k8tfrLz8pbTn5PWs98e3cxR7km+fYpwUZ5wkpx7GSXHG
SXLqYZzM/XjGSXLqYZwUZ5x0POphnMztn3GSnHoYJ/P9mnGSnHoYJxnnFCfJ
qYdxklfFSe+/I+mPcTLaP8ZJcuphnEzfG+IkOfUwTub7MuOk4/TnGCdT+0Oc
JHf3K8ZJ/X7GyWyXGSfJu/1/ipOU7/ZvxX7p9ruQq394PXW/gvzX66/r1r1/
YF0z5bVeuLTn5PW8e9O0cxR7km+fYpwUZ5wkpx7GSXHGSXLqYZzMecqMk+TU
wzgZ+22Mk45HPYyTuf0zTpJTD+Nkvl8zTpJTD+NktsOMk+TUwzjJOKc4SU49
jJO8Kk56f596GCfT94Y4SU49jJP5vsw46Tj9OcbJ1P4QJ8nd/Sr55Npum0+G
/QQpn/yA/c2Kk5Tv9rOq/5Gn/MTsY/N66v4t+a/XX/fx+Odfv18kPU9Le05e
j55rpZ2j2JN8+1TyybCeN+WTZf37SO0t+WRY76Y4SU49Np8M60FSPlnWT009
jJPijJOORz02nwzvExQnyamHcTLfL+STZX56JP0lnwzjUcVJcuqx+WTI11I+
WcY3I+kv+WSIZ4qT/vk/9dh8EnHzR4ZTj80nsX/ps4bTn0s+GfY7pXyy7IPK
96u+7z4177vnvqX8vvt+/QbFScp3+/vV/8jVn8jVP7yeup9V/uv1132N8i9y
/zzr96Xps9Vze+/Gdo5iT/LtU33ffSpxkpx6GCdze/m+m+vlR9Jf33efSpwk
px7GSXHGScejHsbJ3H6+7+Z6hJH01/fd831Cft/N93Uj6a/vu08lTpJTj3/f
fSpxkpx6GCej/ev7bo6Hph7/vvtU4iQ59fj33bnffNZw+nN9330qcZLc3a8y
7l7l7Lg77JtM4+4PqE+zfBrG3aauCXnsl64+BLn6h9dT9/fLf73+us9b/kUu
f7Hy5fnU74vVZ9/OUexJvn0q4+6wHyuNu8v+yKmHcTL7F8bdZf/QSPrLuDus
503j7rK+fiR7lHE31pk+NTzqYZzM7ce4u6zPGkl/GXeH96Vp3F3WL4ykv4y7
8T7hNu4u7/emHjvuDvNtipPk1MM4mfyR4+4yPzT12HE38rUfGU49dtyNPOKz
htOfy7j7Xd7H+FuGu/tV1wWNZl3Q3C+e1wXdr7+lOEnu16f0daHYLyVPfq++
Dvm9+jHk9+qmkN+rI0J+r94G+b16FeT36kCQ36u7QH6v/gH5vfoE5N4vac/M
67qpUZ4j5PSre/vR6Sf39otfPu8b/XU/N+/jvf3WvC/39kPTzr5/jvI8Fefz
lNyPG/r9prRb/j7m6f3+Tp9H9/svfZ7b74+k3XycGs16uVHyB3LaJ4/T6r4x
2kec9hGnfVJ+Y/Zd0T65PXVfFO3j4/IoeZE48yJy2iH/+7rPg3YQpx1Sfmb2
VdAOuT113wPt4J83o1nHmNc7/9hw/t4o79Zf+37Rr4/2/aJfv+z7BZ+Xo1lv
mdfD/rbh/vnYr3/0z7t+faJ/fvXrB/m7NrG6/nOUfJjc98d+nZHvj/06IN8f
acfRrDsdJQ8nZzvF2U5xtpN5Pznb+eUXbl1rfq/4e4bbPP0977tsHl38aTTr
Y0cZL5BbO7xnPpjf69fT5nnHzwz3/ZR+P8q4I9mhrLMdTT8Zzbjjfr3ue3W8
yX29pA+vj61rjtN9/ep85fr+D68XrWv2r76ec27P/XrL+VrtL97VT/Z2Zd5T
6wmQe7vyOVH3R3j9dZ2wtyv7bX2/6dtT5/m9XT9sPOJ4N67p8vAuz+zyqy7f
6J7Ll2t9rnXPiy4+d3Gyi2Nd/Pm4eFK5/j25vo88xmW3jsvKm3Vf8Xns9mH5
9tR9WzG/dHVUvJ5ad6WrW9XV/btca51AcR//a53DqMfVV/TPr76epH/O9nU1
fZ7Q1x31+U9fr9Xne339W5/39nWG/bigr/Psx1N9/W0/Pu3rpft5gL7u/fa3
zsPU8z7E/fxhnWfk95L7OFnnAZ09q54633e51nk9HyfrfJy4j5N1fi23p86v
+TjZ1/nU/+/qdnZ16rq6TF0dkm7ffbfPtNtX1e0j6NbNduvEunUR3XvAbt6b
vJs/7+bDt78fMz/p+10///ax804+bvTzMB87X/Gx430fV/tx9MeOWz92/Pix
47uPHZd146lu/HW5fvh7GfH/3+Ll++Li7b6c6zlT4pJPdj43z6Vzc25UkE/2
DzzZP/Bk/8CT/YuepfDLdd/oPxSe7B94sj/lZf/SnpPXo/tS2jlu3PrxuZ7L
I27j57l573iu58iI27h6bt5Hnut5KOI23p6b95Tnet6HuI3D5+b95bmec5Hb
j/h8bt5rnuu5D/l+IW4HTj02np+b8xHOzXvQcz1fIN7HEufPzfvRc63bH+1f
4v+5eW96rnXy0/fyuXBu3qeea736fF/wvDg371nPtZ58aj+fL+fm/eu5GQ/+
s7/s4+TKL3KIk4FT3sbJIJ/6a+Cp/wWe+lPgqX8UPUvhl+u+0X8oPPlX4Mlf
KK/7X9pz8np0f0o7532xcfIqX+Lkym2cDJx6bJxcuY2TgVOPjZMrt3EycOqx
cXLlNk6CRz02Tt7ajzgZOPXYOHm7X4iTgVOPjZM3OyBOBk49Nk5e72OJk4FT
j42TV/uXOBk49dg4qe9lnAycemycvN0XxElw+nOJk2o/42Tg7n6VOPnTr/s4
ufKLHOJk4JS3cTLIp/4aeOp/gaf+FHjqH0XPUvjlum/0HwpP/hV48hfK6/6X
9py8Ht2f0s55X2ycvMqXOLlyGycDpx4bJ1du42Tg1GPj5MptnAycemycXLmN
k+BRj42Tt/YjTgZOPTZO3u4X4mTg1GPj5M0OiJOBU4+Nk9f7WOJk4NRj4+TV
/iVOBk49Nk7qexknA6ceGydv9wVxEpz+XOKk2s84Gbi7X/U9wq6ZN9tdr5zf
mJzyfp5tyuf+Onnuf5Pn/jR57h/UsxR+ue4Lz/44efavybO/QP52/9mek9dz
uz9s57wvfv7oIl/nLXfNvOWumW/aNfOZu2Y+c+fj5FV/nefcNfOcOx8nV27j
5MptnASPevy86M7HycCpx8bJ2/3ifOkOclOPjZM3O3Aedefj5Mr9/OqumV/d
+Th51V/nXXfNvOvOx8mV+/nYXTMfu/NxcuV+nnbn4yQ4/bnO0+6aed2dj5NX
/SVO/qsHHydXfpFDnAyc8jZOBvnUXwNP/S/w1J8CT/2j6FkKv1z3jf5D4cm/
Ak/+Qnnd/9Kek9ej+1PaOe+LjZNX+RInV27jZODUY+Pkym2cDJx6bJxcuY2T
gVOPjZMrt3ESPOqxcfLWfsTJwKnHxsnb/UKcDJx6bJy82QFxMnDqsXHyeh9L
nAycemycvNq/xMnAqcfGSX0v42Tg1GPj5O2+IE6C059LnFT7GScDd/erjrvr
eRniFzmOuyenvB93T/k8Tpw8j/smz+O4yfO4jHqWwi/XfeF5HDR5HtdMnscp
kL+NL9iek9dzy//Zznlf/Lj7Il/H3fW8DHLq8ePuel4GOfX4cXc9L4Ocevy4
u56X4XjU48fd9bwMcurx4+5Xt8953P0qywU9Nk7+tJ6XQU49ftxdz8sgpx4/
7q7nZZBTjx931/MyyKnHj7vreRmO05/ruLuel0Hu7leJk0/1vAzxixziZOCU
t3EyyKf+Gnjqf4Gn/hR46h9Fz1L45bpv9B8KT/4VePIXyuv+l/acvB7dn9LO
eV9snHyq52WI2zj5VM/LELdx8qmel0FOPTZOPtXzMsipx8bJp3pehuNRj42T
T/W8DHLqsXHydr8QJwOnHhsnn+p5GeTUY+PkUz0vg5x6bJx8qudlkFOPjZNP
9bwMcuqxcfKpnpfhOP25xMmnel4GubtfJU4+1Drw4hc5xMnAKW/jZJBP/TXw
1P8CT/0p8NQ/ip6l8Mt13+g/FJ78K/DkL5TX/S/tOXk9uj+lnfO+2Dj5UOvA
i9s4+VDrwIvbOPlQ68CTU4+Nkw+1Djw59dg4+VDrwDse9dg4+VDrwJNTj42T
t/uFOBk49dg4+VDrwJNTj42TD7UOPDn12Dj5UOvAk1OPjZMPtQ48OfXYOPlQ
68A7Tn8ucfKh1oEnd/erxMlzrQMvfpHj+slaB17cr5+sdeDJU/8LPPWnwFP/
KHqWwi/XfeHJHwNP/hV48hfK39aJ1TrwVs9tHVfd7ybu10/WOvDifv1krQMv
buPkudaBJ6cev36y1oEnpx4bJ8+1DrzjUY+Nk+daB56cemycvN0vrp+sdeCj
/rp+staBJ6cev36y1oEnpx4bJ8+1Djw59fj1k7UOPDn1+PWTtQ684/Tnun6y
1oEnd/erxMm/96s+Tq78Ioc4GTjlbZwM8qm/Bp76X+CpPwWe+kfRsxR+ue4b
/YfCk38FnvyF8rr/pT0nr0f3p7Rz3hcbJ6/yJU6u3MbJwKnHxsmV2zgZOPXY
OLlyGycDpx4bJ1du4yR41GPj5K39iJOBU4+Nk7f7hTgZOPXYOHmzA+Jk4NRj
4+T1PpY4GTj12Dh5tX+Jk4FTj42T+l7GycCpx8bJ231BnASnP5c4qfYzTgbu
7lddZ35s1pkfr3JcZz455f068ymf10VPnvpf4Kk/BZ76R9GzFH657gtP/hh4
8q/Ak79Q/raelu05eT239a5s57wvfp35Rb6uMz8268yPPk6u3MbJlds4GTj1
+HXmx2ad+dHHyZXbOLlyGyfBox4bJ2/t5zrzo4+TV/11nfnx9jmvMz9muaDH
xsmbHbjO/Ojj5Mr9OvNjs8786OPkVX9dZ35s1pkffZxcuV9nfmzWmR99nFy5
X2d+9HESnP5c15kfm3XmRx8nr/pLnHys52WIX+QQJwOnvI2TQT7118BT/ws8
9afAU/8oepbCL9d9o/9QePKvwJO/UF73v7Tn5PXo/pR2zvti4+RVvsTJx3pe
Bjn12Dj5WM/LIKceGycf63kZ5NRj4+RjPS/D8ajHxslb+xEnA6ceGydv9wtx
MnDqsXHysZ6XQU49Nk4+1vMyyKnHxsnHel4GOfXYOPlYz8sgpx4bJx9f+zj5
WOudRf0lTj6+9nHysdZHi/rr++56Xob4RY7vu+t5GeL+fXc9L4M89b/AU38K
PPWPomcp/HLdF578MfDkX4Enf6H87b1ePS/D6rm9d6t1tMT9++56Xoa4f99d
z8sQt3HyqZ6XQU49/n13PS+DnHpsnFy5jZPgUY+Nk0/1vAxy6rFx8na/+L67
npcR9df33fW8DHLq8e+763kZ5NRj4+RTPS+DnHr8++56XgY59fj33fW8DMfp
z/V9dz0vg9zdrxInn+t5GeIXOcTJwClv42SQT/018NT/Ak/9KfDUP4qepfDL
dd/oPxSe/Cvw5C+U1/0v7Tl5Pbo/pZ3zvtg4+VzPyxC3cfK5npchbuPkcz0v
g5x6bJx8rudlkFOPjZPP9bwMx6MeGyef63kZ5NRj4+TtfiFOBk49Nk4+1/My
yKnHxsnnel4GOfXYOPlcz8sgpx4bJ5/reRnk1GPj5HM9L8Nx+nOJk8/1vAxy
d7/q+271w74uUJLv6jZ0+5S7fXndPpRu3XW3zrBbV9O9R+7em3TzhN24uMsD
3xP3unze8i7/7+ZPuvnn7v1dt/6hWz/Wrb/t9i90+7+6/bNd/YH31G+5fO7r
D3T7bbv9Zd1+im79cLderlsf0r0P7eb/u/mubnzX5TPi8ZyY//1rl/o6P0Qd
rvdx1lsUZ71F8fxcnTw/JyfPzz3qWQq/fN43+g+F5+fG5Pk5APlQbzG35+T1
vHtT+OXzKPYn3/79//yDi1//c9TNeR+n/cVpf3HaX5z2z3qWwmn/rP9QOO0v
TvsnedTFne05eT3v3hT+PjtHvv397//uUtfhn6IOyPs47SxOO0c9rGc79SyF
085Z/6Fw2lmcdk7ywc65PSev592bwjt7kl/i+V970fNPsM//fZz2FKc9xWlP
cdoz6z8UTnvGdkZ7Jvlgz9yek9eD+tKzndVu5Nv3/Y9/edmH+jexT/h9nHYT
p93EaTdx2k2cdhOn3ZJ8sFtuz8nrQb3u2c5qH/Kfvfjnq/MPVz2vw/P+Hqd9
xGkfcdpHnPYRp32SPOqHz/acvJ5gn9zOagfyX6zjsv/635bzv1k/fyfkPfe4
7CA9r1789tvnP1k/fTvYp+PSQ7tJnlzytKfkySVPO0uePOkP9k/6A5c874vk
yVN7wv1K7Qk823kU+e4+knfy31u/8D9/83D++frvvhXy2nuc90Wc9hennZN8
sKc47Zb0BPuId7+L/B+tlz/+te+cv7Wq2YV8/R7n7xLn70ry4XeJ83clPeF3
iXftJ/8X67//j3/3V89/Z1X09TDeuMfZfnG2X5ztT3pC+8W7dpL/0Xr9939w
fPl9fymMi+5xtlOc7RRnO8W79pD/7np5+uPX519fFf2FME67x9kecbZHvPte
8p+/9PfTS1z9ahgf3uP8XvFOP/kfrv/+y//15qVdXwnjz3u80yMez6eM41Ny
ynPc5HiUZ55PTnnmq+SUZz5GTnnmIeSU53NZnM9ZylMPnwvijP/klGf8JKc8
4xI55RkHyCnP/khOefYXcsrTz8klr/Ei/Zmc8vRnx6M8/Zmc8vRncsrTn8kp
T38mpzz9WZz+THnqoT+L05/JKU9/Jqc8/Zmc8vRncsrTn8kpT38mpzz9mVzy
GpfTn8kpT392PMrTn8kpT38mpzz9mZzy9GdyytOfxenPlKce+rM4/Zmc8vRn
csrTn8kpT38mpzz9mZzy9GdyytOfySWveRH6Mznl6c+OR3n6Mznl6c/klKc/
k1Oe/kxOefqzOP2Z8tRDfxanP5NTnv5MTnn6Mznl6c/klKc/k1Oe/kxOefoz
ueQvcXtp8o2l+LO4zzeWJt9YmnxjKf4s7vONpfizuM83libfWJp8Y2nyjaXJ
N5Ym31iafGNp8o2lyTeWJt9YmnxjafKNpck3libfWJp8Y2nyjaXJN5Ym31ia
fGNp8o2lyTeW4s+X6755X7kv/ixOf3Y8ytOfySlPfyanPP2ZnPJ+Xnpf/Fnc
z9Pum3nXfTOvuC/+LO7nA/fFn8X9fNq++LO4n6faF38W9/NC++LP4n5+Zl/8
WdzPn+yLP4v7eY99kz8fmvz5UPxZ3OfPhyZ/PjT586H4szj9mZzyPn8+NPnz
ocmfD03+fGjy50OTPx+a/PnQ5M+HJn8+NPnzocmfD03+fGjy50OTPx+a/PnQ
5M+HJn8+NPnzocmfD03+fGjy50Px5xf85XeKP5NTnv7seJSnP5NTnv5MTnn6
Mznl6c/klKc/i9OfKU899Gdx+jM55enP5JSnP5NTnv5MTnn6Mznl6c/klKc/
k0v+JQu5rh+N/kxOefqz41Ge/kxOefozOeXpz+SUpz+TU57+LE5/pjz10J/F
6c/klKc/k1Oe/kxOefozOeXpz+SUpz+TU57+TJ78/+1rH58Dp7yNz+BR3sbn
wClv43PglLfxOXDK2/gcOOVtfF65jc9BnnpsfF65jc+BU97G58Apb+Nz4JS3
8Tlwytv4HDjlbXwOnPI2Pgcu+cs48dTMb5ya+Y1TM79xKv4sTn8mpzz9mZzy
9Gdyyvv5jVMzv3Fq5jdOzfzGqZnfODXzG6dmfuPUzG+cmvmNUzO/cWrmN07N
/Mapmd84NfMbp2Z+49TMb5ya+Y1TM79xauY3Tj7fePfG5xuBU97mG+BR3uYb
gVPe5huBU97mG4FT3uYbgVPe5hsrt/lGkKcem2+s3OYbgVPe5huBU97mG4FT
3uYbgVPe5huBU97mG4FT3uYbgUteV/ozOfcFinOfn/il/3yj8Mu49JuFv4iH
fXVZz1L45fO+0X8oXOMHcuVhVv7t68IVF6yed28Kp50ZB8hpT3HaU5z2FKc9
s56lcNoz6z8UTnuK055J/u3rwmnPpOfdm8JpT8ZJctpNnHaLeqLdsp6lcNot
6z8UTruJ025J/u3rwmm3pOfdm8JpNz4vyGkfcdpHnPbJz519o/9QOO0T2xnt
k+Tfvi6c9kl63r0pnPbh85GcdhCnHfLzdF847SBOO4jTDkn+7evCaYek592b
wmkH/15jYH37Ujh/r19vPzl/r19vD/nwe/16e+gJv9e/lxnNe5mB/GT+Lv++
Zsrz9/p18iOvYw928OvkR16XHuzj18lDf7CbXyc/5WlPv04e7Ql29uvkac9R
5Mn9+6zJaU+/vn3kdenBPn59++T8vX59+2jer43m/drkbKdfrw750E6/Xh16
Qjv9e73RvNcbzfrz0aw/H83689GsPx/Ne8PRvDcczXry0awnH8168tG8fxzN
+8fJqd+vDx/N+8rRvK+cnHr8e8zRvMccTZ5/fx8x9X9IHuvyMfJ7z1nye/GZ
/F7cIL/n/+T3/IT83v3q+Ieuz+/2C3T7Grp9Gd1+k25/TbfP6N5+Me5H6/bx
+byr33/q8//7+7Kz/es+WX4vuffbuo+PdiD3flv3SYl7v637d8S939Z9K+Le
b+t+EF27eYNunNuN17rxSJeHd3lpl791eVqXV3TP6+752D2nuueI7b/npv7D
udYlELd2Ptd99OLW/ue6H1zc3pdz3e8sbu/Xue7zFbf38Vz3vYrb+3tu9rGe
6/5KypNbfzjX/Yni1k/Odd+fuPWfc91nJ2796lz3u4lbfzvX/WjinR/aOHBu
9pGd676wl8t1nXXx58Apb/0ZPMpbfw6c8tafA6e89efAKW/9OXDKW39eufXn
IE891p9Xbv05cMpbfw6c8tafA6e89efAKW/9OXDKW38OnPLWnwNP8td9AMWf
A6e89WfwKG/9OXDKW38OnPLWnwOnvPXnwClv/Xnl1p+DPPVYf1659efAKW/9
OXDKW38OnPLWnwOnvPXnwClv/Tlwylt/DjzJX/ep1Pxt14z7dk1et2vy6l2T
7+2afHvX5IG7Jg/fNfnhrsnPd03euGvy9l2TT+6afHLX5Pm7Js/fNfnnrsn/
d01eumvGBbsmX90144Vdk8fumnHErslvd834YteMW3fNuGPXjH933p+v+6iK
PwdOeevP4FHe+nPglLf+HDjlrT8HTnnrz4FT3vrzyq0/B3nqsf68cuvPgVPe
+nPglLf+HDjlrT8HTnnrz4FT3vpz4JS3/hx4kv9p3edITnmfb9R9juI+36j7
HMV9vlH3OYr7fKPucxT3+Ubd5yju8426z5Hy1OPzjbrPkZzyPt+o+xzFfb5R
9zmK+3yj7nMU9/lG3eco7vONus9R3OcbdZ/jy+Wp7nMkp7z156e6z1Hc+vNT
3ecobv35qe5zFLf+/FT3OYpbf36q+xzFrT8/1X2OlKce689PdZ8jOeWtPz/V
fY7i1p+f6j5HcevPT3Wfo7j156e6z1Hc+vNT3ecobv35qdnn+FD3hZFT3vrz
Q90XJm79+aHuCxO3/vxQ94WJW39+qPvCxK0/P9R9YeLWnx/qvjDKU4/154e6
L4yc8tafH+q+MHHrzw91X5i49eeHui9M3PrzQ90XJm79+aHuCxO3/vxQ94W9
XM51Xxg55f38c90XJu7nn+u+MHE//1z3hYn7+ee6L0zczz/XfWHifv657guj
PPX4+ee6L4yc8n7+ue4LE/fzz3VfmLiff677wsT9/HPdFybu55/rvjBxP/9c
94W9XK51I4o/B05568/gUd76c+CUt/4cOOWtPwdOeevPgVPe+vPKrT8Heeqx
/rxy68+BU976c+CUt/4cOOWtPwdOeevPgVPe+nPglLf+HHiSv9Y1qe9Tjs37
lGPzPuXYvE85Nu9Tjs37lGPzPuXYvE85Nu9Tjs37lGPzPuXYvE85Nu9Tjs37
lGPzPuXYvE85Nu9Tjs37lGPzPuXYvE85Nu9Tjs37lGPzPuXYvE85Nu9Tjs37
lGPzPuXYvE85Nu9Tjt6fH+s+R3LKW39+rPscxa0/P9Z9juLWnx/rPkdx68+P
dZ+juPXnx7rPUdz682Pd50h56rH+/Fj3OZJT3vrzY93nKG79+bHucxS3/vxY
9zmKW39+rPscxa0/P9Z9juLWnx/rPseXy1Pd50hOeT+/Ufc5ivv5jbrPUdzP
b9R9juJ+fqPucxT38xt1n6O4n9+o+xwpTz1+fqPucySnvJ/fqPscxf38Rt3n
KO7nN+o+R3E/v1H3OYr7+Y26z1Hcz2/UfY4vl+e6z5Gc8tafn+s+R3Hrz891
n6O49efnus9R3Przc93nKG79+bnucxS3/vxc9zlSnnqsPz/XfY7klLf+/Fz3
OYpbf36u+xzFrT8/132O4tafn+s+R3Hrz891n6O49efnus9R+xd/8/O5nzGu
f+64ruI8Z6mT3/7Gdafx322ceiivK9e1xnOKNu7OfYryuub36VOPOPVQXtcf
fJnX5erfiVMP5aP+uO43tmfjrj1RXtcvsK44niuyceqhvK4/+yKvW9b1F1jn
HM/liPLxPIdNnt8reXLq1/UV1l3HcyE2Tj2U1/V7n+d13fG8hY1TD+V15brx
eL7BxqmH8rpyXbr+nTj1UF5XrnvXvxOnHsrrynX1sX7/V8p5qFU+1rmP/S7W
s4/9SJz9IspHP4916KPfxnrz0Q9j/fjoV7F+fPSTWCc+3vdYDz7eR3HeF3Ha
OdZxj3bbnteqj87zpDZO+0T5aB9x2kec9hGnfcRpH3HaR5z2Ead9xGkfcdrn
xWzf/2axgzjtIE47iNMO4rSDOO0gTjuI0w7itIM47SDOfveTa57mnjuOv5jz
Wtc52kec9hGnfcRpH3HaR5z2Ead9xGkfcdpHnPb58ou5v5X+4PjF35amvyxN
f1ma/rI0/WVp+svS9Jel6S9L01+WYodfhv2t8XeRS/6vX/Nt/t6OX6775nm9
b56/++Z5um+ej/vmebdvnl/7Yodfv44L2M6OX/rdoenvh6a/H5r+fmj6+6Hp
74fS/t+9jlPYno6/qLnWTYztFGc7xdlOcbZTnO38w+v4iN/b8Revvda3i+0R
Z3vE2R5xPi9e2vm27vsTt7/rWg+sPpfrvkJxyr+05109V4XjKZ6D2vHtbzwP
SFz5lTtPNZ7vI67ngpOP5/VEe8RzecQVB8jVj8jln+TyB3KejyPOc3DEed6N
OO3P52M+L+lVsQPjpDjjYcz/YjyJeV7sp/GcndgvlPfQT8TpJ+TyE3L5Cbn8
hFz2cfLxHBz6CbnsQy77kMs+5LQP/YSc58vQT8h5Xgz9RJx+Ik4/EaefxDw4
+knMd6OfiNNPlBfST8TpJ+TyE3L5Cbn8hFz2cfLxfBn6CbnsQy77kMs+5LQP
/YSc57bQT8h5Dgv9RJx+Ik4/EaefiNNPxOkn4vQT5cf0E3H6Cbn8hFx+Qi4/
IZd9nHw8t4V+Qi77kMs+5LIPOe1DPyHneSj0E3Keb0I/EaefiNNPxOkncbwU
/SSOi6KfiPvnztI8d/I8ouPyE/L83MnnscfzU+gnTj6eh0I/Ic/xNp/3G88x
oZ+Q0z70E3KeM0I/Iee5If65szTPnaV57izNc2dpnjtL89xZmrx937wXyPO+
jstPyOUn5PIT8jy/keXjOSP0E/I8ns31OeL5IOJ5nDU57SPOcz3EeX6HOM/p
EOd5HH6eZ1/8RNzPA+ybcf2+GRfvm/HmvslPDk1+kt8bOL79jeeDiOf8ZPKc
n+T53XiuR5SP53eI5+dyPv88ntMhnp/Lue5LPF9DnPYR53kZ9BNynn9BPxH3
+cmhyU8OTX5yaPKTQ5OfHJr85FD8RPMI9BNx+gm5/IRcfkIuPyGXfZx8PBeD
fkIu+5DLPuSyDzntQz8h53kT9BNynh9BPxGnn4jTT8TpJ+L0E3H6iTj95OVp
9Ol3i5+I00/I5Sfk8hNy+Qm57OPk43kT9BNy2Ydc9iGXfchpH/oJOc9xoJ+Q
81wG+ok4/UScfiJOPxGnn4jTT8RtPHn72seTt/n9quPyE/IUT97m+ch47gP9
xMnHcxzoJ+SpHwWe+lHgqR8FTvvQT8h5PgL9hJznHdh4cjtH41Wxg40nK7fx
5DqfW+LJdd62xJPr+Qt1vHNqxjv5/bnj8hPyPN7J89PxPAX6iZOP5yPQT8hz
nj95zvMnz3n+5LQP/YSc5w7QT8h5joAf75ya8c6pGe+cmvHOqRnvnJrxzsk/
d9698c+dd3l9hOPyE/L03HmX3xvEcwroJ04+njtAPyFP8TbwFG8DT/E2cNqH
fkLOev70E3LW57fPndu5D6+KHexzZ+X2ubNy+9y5vr8pz53reQF1XDyKP4hz
nRvlybmejfLkXLdGeXKuT6M8OdehOf2Rc70Z5cn9+rHJ8zh06qG8OOW5Tozy
5FwPRnlyrvuiPDnXd1GenOu4KE/O9VqUJ/frtSan//j1Wlk++oNfrzU576Nf
rzU575dfrzU57e/Xa01Oe/r1Wjonh+u1Jqd9ony0jzjtI077iNM+4rSPOO0j
TvuI0z7itI847XMZ93O91uS0gzjtIE47iNMO4rSDOO0gTjuI0w7itIM47XCZ
TuW8XD73Pv5ecf5ecf5ecf5ecf5ecf5ecf5ecf5ecd8vON+Yzzmv/sz1VPl8
8urPXE+VzyGv/sz1VJN7f16a+Mn1TpP75wvXO03unxdc7zS5j//7pt9x/VI+
N7j6P9cvjTTPV/2f65fyub6xPZrX4feK83vjvFH8XnF+b5xPit/7chfL+qLJ
qV+c+sXt7yrriya37Szri+Z5a94Pub4on5cV1x3p+qH7L3TNz/1+f4SuH7p/
QdccBz5+f4GuH7qeX9cPXW+v64eth+/zKP9ebDTva0YZv4j79zWjeV8zmvc1
o3lfMz56/BLt4cYv3TilG490445ufNGNIz40/xfv8v/ODl0+3+XtrBctnuyJ
fhnrk4snewae7Bl4sifkY/1w8WTPwJM9A0/2DDzZM/Bkz8BZr1ucdbnFO3uy
zrbtF9hnFutsi29/Yz1t8WR/nJMQ62OLJ/tDPta7Fk/2D7xrf7J/4Mn+gSf7
B8760uKsIy3OetHirAtt7Y/9ebEutPj2N9Z/Fk/2x/kVsZ6zeLI/5GN9ZvFk
/8C79if7B57sH3iyf+CshyzOusfirG8szjrG/rmQ9zXGOsbi299Yr1g8x/PJ
czzP+7dineEoH+sJi+d4PnnX/hzPJ8/xfPIczydn/V5x1ukVZz1ecdbdtfbH
vpxYd1d8+xvr64on+wee7I99crEubpSP9W/Fk/0D79qf7B94sn/gyf6Bs96s
OOvKirN+rDjrxPr48+omn+PP5NvfWA9WPMefyXP8mTzHnywf67WK5/gzedf+
HH8mz/Fn8hx/Jmd9VHHWQRVnvVNx1jW19sf+41jXVHz7G+uXiif7P+V1gLEe
qXiyP+RjfVHxZH+cv+Tan+wfeLJ/4Mn+gbOepzjrdoqzPqc463Ba+2N/dqzD
Kb79jfU2xZP9H/K6qVg/UzzZH/KxHqZ4sn/gXfuT/XG+VqxXKZ7sHzjrT4qz
zqQ460mKs26ktT/2qce6keLb31gfUjzn/3X9EnnO/+v6JfKc/9f1S+Q5/6/r
l8hz/l/XL5GzLqI46x+Ks86htT/298c6h+Lb31jPUDzZH/vVYn1C8WR/yMd6
g+LJ/oF37U/2DzzZP/Bkf5xfF+v7ibOOnzjr9YmzLp8ff+W6CLEun/j2N9bf
E8/jr7wvMNbTE8/jrywf6+OJ5/HX5F378/hr8jz+mjyPvyZnPTpx1p0TZ305
cdaRs/ZHPYlYR058+xvrxYkn+2P/Zaz/Jp7sD/lYz0082T/wrv3J/oEn+wee
7B8466eJs06aOOuhibPumc9/6joi8u1vrG8mnvOfuo6IPOc/dR0Rec5/6joi
8pz/1HVE5Dn/qeuIyFnXS5z1u8RZp8vaH/VLYp0u8e1vrMclnuyPfb2xvpZ4
sj/kY70s8WT/wLv2J/sHnuwfeLJ/4KxPJc46VOKsNyXOulLdvPT/2/Phff2r
Tr7bj9/VGejqKnR1G7x9mrof56au17mpH3Ju6macmzoS56auwrmpV3Bu6gOs
/c+281oPrLTzdo7hqzK/atu5ctvO63l5pZ3Xc+5KO9d4YNt5rTdW2nk7n+5V
mYe07Vy5bef1HLTSzuv5ZdUPd43f7pp+t2v8atf44a7x513j/zvfzvX7bTuv
9dJKO2/nSb0q81q2nSu37byeW1TaeT1vqN73un9W3N/3uq9T3N/3un9T3N/3
un/zhT/V/Zvitp1PdV+huG3nU90/KG7b+dTsH3yo+8LEbTsf6n4lcdvOh7ov
Sdy286HuS3rh57ovSdzHz7pfRtzHz7ovRtzHz7ov5oWvV9vOax270s5bHf5X
ZXxq27ly285rvffSzmud9hrnj02cPzZx/tjE+WMT549NnD82cf7o2/lY94+I
23Y+1n0N4radj3X/grht52Pdv/DCn+r+BXHf3+u6enHf3+v6eXHf3+v6+Rf+
XNfPi9t2Ptd13eK2nc91/ba4bedzt377a7f6vcz3xLdPcf2MONfPiOf3ZZO7
+mySZ3021RlmfbaNu/psG3f12Tbu6rNtvLODq8+2cVefbeOuPtvGXX2kre4x
7SZOu4nTblE+2k2cdhOn3cRpN3HaTdzVs9q4q2e1cVfPauOuntXGXf3Drf4z
7SPu6iJKvtbB+3ozvvi6rYu4cVcnbeOuTtrGXZ20jbs6aRt3ddI27uqkbdzV
6drqXbs6maqPzbp/G6cdxF3dv427un8bd3X/Nu7q/m3c1f3buKv7t3FXf2zj
ru6ZqwMpTjuI0w7itIM47SDu6tFt3NWj27irR7dxV7dt465u28ZpB9Un5+8V
5+8V5+8V5+8V5+8V5+8V5+8V5+8V5+8V5+/9hXs+Bs7fJc7fpbrrlBenvPTQ
DpInlzztI3lyydNukieXPO0peXLJ086xXv1XMR+6ydP+kidXXXraTZz2Eacd
xPl7xfm7xNl+cbZT9fDZHnG2R5ztEWd7xNkecbZH9fb5veL8XnF+rzi/V5zf
q7r91CNOPeLUo3r+lBenvOr5u/0jbh7V56WjyUtHk5eOJi8dTV46mrx0NHnp
aPLS0eSlo8lLR5OXjiYvHU1eOpq8dDR56Wjy0tHkpaPJS0eTl44mLx1NXjqa
vHQ0eelo8tLR5KWjyUtHk5eOJi8dTV46mrx0NHnpaPLS0eSlo8lLR5OXjiYv
HU1eOpq8dDR56Wjy0tHkpaPJS0eTl44mLx1NXjqavHQ0eelo8tLR5KWjyUtH
k5eOJi8dTV46mrx0NHnpaPLS0eSlo8lLR5OXjiYvHU1eOpq8dDR56Wjy0tHk
paPJS0eTl44mLx1NXjqavHQ0eelo8tLR5KWjyUtHk5eOJi8dTV46mrx0NHnp
aPLS0eSlo8lLR5OXjiYvHU1eOpq8dDR56Wjy0tHkpaPJS0eTl44mLx1NXjqa
vHQ0eelo8tLR5KWjyUtHk5eOJi8dTV46mrx0NHnpaPLS0eSlo8lLR5OXjiYv
HU1eOpq8dDR56Sh56f8F8XqsZw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxF3AnYpmP9PvBnZp7nXWdRigjZs1djzTK2YeyGGfswGpS1aWxNRIkwtoiI
7KL8iBLZMlFTkxAREf6KiIRUopT+52eur6PjeO/jvb/Pde/3dX2X8zyve5kZ
M3f+9MhOpzO71+l08/+S/k5ng6wckf97D3U6s8Z1Ojf1dTrzs9HMMZ3O4bFv
if2L2J+JfdVw1mM/E3vGYKfzldg3xp4Xe4fYZ8a+PvY9sbeLfXXsL+fY/TnH
/rFPj31t2uemfZvYn83xfxn7udhH5/jbpv3UbD+U7YfSflfst9O+0KhO5/Ox
r439u9hvZPsDY98c+7XYD8TeJfbnc7w3Yg9l+9NzvHvSPiLHWyT2F9N+bNr/
mvb+2Kel/YjYt9X+s2IfF/ut2GPSfkbsH2X/d2IvHPv47H9k2u+M/VC2PyLt
V6R9fuynYu+b9vOH2/HOj71u7JfzTI/Js/7KiE7n/wY6nTdjXxj7htg/iL1D
jndZ7Jtj/3t0p7NT7G/Hvit2J8f/Z7a/OPb3Yt+W7V+L/cXYX4t9Q+wds/2V
sW+N/Z/s38n5r459Yuwr0v6d2C/ket7O9Rya63kl+x+X9q+m/fq0vxH7/NjX
xb459mXZfl62fyLb75Ptj8rx58Z+JPaRuZ6jY98T+7HYR8XeOtuvEHv92APZ
flLsZWOvG7sv9us5/ul5/mPyPr+b42+f/U/K+S7M+f6c690i238o26+V7bvZ
/rrYz8V+K/bBsWdn+5divxP75JzvmHHtfXfzPk6NfXDsY2OfnfbdYx8S+/jY
58beI/ahsU+o97Fn7NnDzZ4ee7Ec/4TYZ8a+MvYmsQ+LfXjsU2KvFntm9j8t
9mWeR/Y/KPa+sY+KvVXsw9xP7AtjT4s9M/sfFfu02Gtk/y3Svknud5fc769z
v/em/QN5Hv+o+9O//p3tf1v9Z37sgbS/UP37J7FHxv7dyDZ+fhr7G7G3zPP8
ZOxZsWdn/zPT/tHYE3O+jXK+nXO+R3K+zWOvH3vH2A/Hnjyu9Y87Yr8T+9Ox
T8n+F2f/vXP9n8rxpsWeFXvFHO/AtE+JfWDsSWn/ZOztY8+IvYXtY0+OfUDs
LWN/OfufG/vbsSdm/1Nin5zrHcj1bhn7gGy/TT3/zbP952L/OfaIvM9TYn8m
9gWxr0/7dM87+5+S/Qez/0rZf7/Yu6b9kLQvG3v/bD8p9rTYm2X7A9K+R2xO
bvm0T4m9aexdY7/X/tl+Yuw9Ym+a7XdK+4TYU2IvlPYZaV859oTYH0v7nsPt
eleK/Xb674mxz459tfNl+x1jbxB7cuyxsXfO/tfl+d6d5zsi+28X+7Oxz4j9
cp73NrFnxT459kuj25hZL/su19fGEp/5o9j/19d86YSc86EM6ztz/18Yaj7z
xrRf1Nd86fXV107P8p2+5lv13VPrGD/JfjOy/35Z5mV9dPbfPP8vyDPdPvtv
pY/GvjD2nNh3ZX3zbDsxy9xuG9ujjE39IetLZZunqv/8KNf24dzP0tnuq1lW
z/piWf6Sbc7JcS/P/X89vy+R5YPOkWWT7PNIHfuEoebjN6hj8/2bpf2xtN+T
9hPTfnf+T4k9tX7bbVw7/+s5//tz/N2z/Ub5/Zxc/4XZfof8Xy19afUsO2Z9
7f7mu9+XZZ2s75V9Lsj5bs/5Xhqbfp/zb5W2NdP2dM5/aexta9tnYu8e+5e1
/YXDzUeNj71kX/Nde8b+Vewfxv5G7PH9LVa9p46pz1+b9vP62ljgGzuxR9Q7
FzN/XO9OLNX3+mMP8T/6lXee+9s4x3o+7YemzxyfQ/wiv+2R65+Y+3+i3u2X
s+3P8v8zsWdlmd9tsZlvOCvLd/va2OK7Zlcf2jL7P1XbnjLU4uV/8/vTFd93
z/N+Js/773nei+bZ7RH72dhvxv5A7EmxD4x9XOznc21bxT4k9hdjv+BaY/dy
7YvneZyZ7afEviHtP0n7yNjDOd/Nse+N/Ytcy9Zp/3TFrz9m/7XTPpTr+VCu
5+9pXzN2f+wlYv819se8k9iLxf6LZ5F7mJH9P5v9vx77ydgHxD4m9kX6Xuwz
cj1j9dnYW/JnaZ+R9kdzvl+lfevY+8Q+O+0PxN489u6xz4j9YOwtY+8V+6zY
zw61690u9omxfxN7euwjY58fe9sc/8jYc2L/KcffJfZjsV+OvXDuf/Vc/5xc
z3Cu58/ZftXYr/bamPtT7PfHfij28+JH7Knyj9gPxR6V/cek/dbY98e+P+3j
Yp+W443O8X5pfMZ+Me3/8T5iLxz7gdjPigexd83xnoj9auz35XiLpv2R2C/G
fizte8mXeq1PLs4fxn4+9r/SvljswWz/vdg/i/3zbD8t7WPyPpbN9qukfZ/Y
C5f/XC32J2IvEftj4lXsvWMvFHuF2KvG3pcPib1G7I/EXjnHf7nXxsyLOf70
tC+S9lXF17RvONyOzx88nfaP9LfcbWyWj/a3/PGfaf9N5TP/zJj5S+xe2ueM
afF20fIZJ1e8PSl2X57fl2K/mfXjOs2/HZx3e0SWS7P+rfy2vPONaz7uvNjH
5f0elfYrjLvYq6b9o2n/RuxLY580uvW3R7PN0WmbO7rlB/fFPjT2XaPbeHo6
9vGxfxl7I/Ek9naxr449IfZ3+LnY11Q8eT72yQMtvm8W+yex9499++iWD9wb
++DYP4z92ax/M9fzg1zPxwZafjA/vx2Y9Ttr/D4jx9TXY38u61/JM3hP9lnH
eJOfZv2u7H922sePazHm8diXx34jz+8T2X7jPM/z8/zWHNd80pNpvyLt/0n7
Yf3Nx/K1q4iH3QWvtzMi7avGPqNi1pTYf8v2+2T7DbP9eeJ3rmdOxYQH8vt/
0/6Z/N8h7ZenfePsf+tQiwvfyv5vpn3/tG+W9q97/7E/FXuL2BfFXiPbfy3H
m5PjHTW6xSQx59FOi1XHxb4j9oOxNxxoMViMfLjTYrM+oW+Igetn/e0c/+D+
FlPEltVy/K+UT54+usVI2+tTB8feVD7NZ+VYt8XeJPaPYu8b+9bRzR/+PvaX
5AGxL0ufPVvMkcem7ZLYZ8R+IPYXYl8a+6zYD8b+4rj2fNV1y2RZNutXjWnP
4Qn9XO0wpr2n38Q+0fYZH7sPtfd4WuwVYk+J/bI8LvbysXeM/Zy6LvYVY9p7
eTT2l8a193dA2jfKsnLW1xrX4srf+9v9rjeuxen1B1r/0T/ErRf72/NZ1/OK
vcRAGy9rxz499uBAez+r5vx7DLX3enraPu4ahlreoP+tE/vM2AsPtPE4Pesn
5nmPz/O+IedYOfvvNtT61Zxs++HYu8R+Td05rsW7ZbL+44FWf4lX/bG/PdDy
N/nHkrHnDrT8mT9fLPYdA61+408/GPuHA60e46/fE/umgVbviAd/zPlOHWj5
+Qby8aEWh6+MvWKuZ2rsV+S941o+2cv6NQMtfqgX31YTDrR4q55YPPf1EfVQ
3sP63vFQywuMtw1jXyuHiP3Nyv//G/vygRZf1ZujcoxvDrR8VL76UtpPG2j1
inrtb7HPG2jxUb35Hz5woMX3T/A9lTPO7W/v+97Y/6/T7ufUoWbr73yp/Pms
+N9DKz+Xw8pDZle9pR47PfZBld/LSeWmE3OMVQZbfXFO2mdWffIF7y32J2Mv
Pdjq3T/0tZxqh6o/5F6Hj2z1w42x/xj7p7EnV735+76Wc8u9j4r9+dh7xl6k
8Iv7+loOJ5c7Z7jlUfKp8YV/yN1Or/pLzi7vPrXqv2ONi9j7xl4C3mGcxt47
9geMw7GtXU4qNz3OuIq9X+ylBhve8vPY11Q99b3Yf4r989g7x35yuMW5sYWP
6De7x15n1P/8wDL8JPwm9n2xPxj7n4UH3B77b30th5XL3hn7H7F/rZ4dbDmn
3HPJio/fj/1K2u9L+9TYtw63eCpH3r38yurymWx/zGDzExfHnpT3d9Jgy6nl
1u8rPIbfWUV9GHt27EFjsvy9+oFfYYvXR5ffWz72yNiHD7acXZ79nsJn/jjc
8v7Vazy8FHvn2B+F98T+feyPx150VIvv/OZSsf+d6/907G/pj/2tJtqq8KZf
9bWaS+3FX6+VfGTrES0+3pX+vUbszWN/fqD574/F3nJEi9/qIfFrV/Xr2DYe
R6X9AyNavL09+68Ue6PYs7P/ubEfz7avZLzsPND8Qyft7x/R4vnX0v5k2v+i
Jhpo8X7dyj/FB/Fvkdirjmj5Bf95f7b/faeN/+9n//em/cNpPzz73xL7zFzf
uGxzZOzvxR6X9uXT/pmBlm8Mxl5qRMtP7kz7qrE3iX3MQMtP+mJ/cETLL25M
++jYy8T+tPvJ8/t+nt85eX5rGT9pfzTn+lOuZ/JA8/cPx/5jp+Uzaqzbazys
P9hqtNurfx2e/vC1tP8g9nmx1xlsNZfa66LYG8a+JPaPYl8Se8Jgi1u75P7W
HNXiJLzup2m/qup3eNePY19e+I/48WCu5w+dlm+JC3tl/4+PanH3MrFHHZ37
20cONtTeD383KfYFsc9SA2abXWN/I/brWe/L9nsONP/8n9jvHdHivXj4TOy/
d1q+Mm+ovU/v+4Bsf4nYmfbB2NMGWrz7V+xxI1p+IP9SJz/Z3/IlOc0Wlfvy
DesV9qm/6/f7FraxaZb9+lqf3TTHWq3X+rI4tYl8tr/5fbF/crc9Q8/Su3ct
Q7WPPjAh6yv3Wt+A8Z0f+4Rew/70bffeX9vo42uoHXrV9webb967r2E9YoLY
sFtfw3J2LWxw7frNO/au+Ui+ct9c14RRLd+Ud8IwL87xT+k1bFMus3u3tclp
phVWuUGdU4wRa6b2NWxJjBFrvp7tD4m9X/5vOqrlj/LIk6pWPKDOsXWNpZWy
bJP1k7Lvmp2Wb8g7xM2N8//c/pb3b+yeuy1mip2ndBvWIn76Tc05Lcea1Gu1
6OzCrnbL8rm+hnXCrsQnceqkwuL2q2dyeGFRO2U5oq9hobAx8UbcOb9q06Oy
XNBrcf+krM/stTpimtyz23J0ufpRhY1NzXJ01jdJ+yrddm9yKzHu1DoX7FNN
Pb2ehVp7wZivaxVbxWyxe8++hjXC6mDF69Vvcrs9u+1Zv1m1Jez87Cw3ZX2n
ynX4c35drbB8luWynNlt2Lba3DM8PusHiT2jWj4uL3+isPLbsvy213y1sbRQ
lvG9hok717G9hpXv6Zl0W82gdvitPC7tv+m1PE9McS1iqtj6WGH5t9Q2cjNY
tnhrGzWoWpTPuaxqT1wGPBguLMaKtTBgteki8Xl/VZtn+9vHNowYVsyH8WXz
Cru+qn5bKf5g2W6rOdQe6siJ2f8jvVZX8Kl8q5xDbnJHfMYiaV8v7Z8b27BK
WPWuIxpHJO89TX/ptbxQHbJN7LV7rc48srDmKbWNPPUUsaXX8txPyt1GNZ/k
GapTt6/zzS8uA9YyvXyGWMq3jqlrnlXY9eQ6Js7j3Hq3r1WdOqne3T3FtcBq
9qh3iHM5s+4FFyN2870L1z3sld/26ba+oXY7NP+3GdXqU2NAjH01Y/OJbou9
+hgsVX2q721ZsXKFGrNqHv1Rm1pInaCvXdVrebccmX84qcb/9oVlrCZf7Wtc
DuzshNpHHaEvXd5reTfcYALsqr/VuWL0sp5Xr8VuOeN+dazpw41bgs0dX8c4
pbB6+bK8+duFRXtn1/Zabb0i3DfLad2GZcOu9IHre61WmtptMVFsvLCwttnw
tV6ryfkzfk2trubKX+fI8hdydOfeKef+xHCrdXbutpxV7ro6zCft26b93vTH
F0c3/3QNzmhsy1k864V6LZeZVNjRilm26mvYIqzdO78RLpXt76lrV8c9XtjM
d+udylE+JJ71Wu4ijsKa3bs6dkphVeMrRpzdbdiqet4YUyfeWdenjtoN5jyq
5d/uSY6/d13bHsPNx/P/H+62Z6Qm2Lfud+/hlpvJ7V7PsnCv1ZU35fiX9Frd
x+/yvyt3Wx+Cuc2re4XFyeHEIvvK7XCM15evxz3KieXGfI3aEad4Y707XOOe
+X29US3f8Y7H57dHRjWMBdYycUy7Xv5D7aKONTY36DWc6Vej2/gWT+akfSae
YVTDZxwDBjGi0zAf2IQ6Ut88qNdwJ3Wpvn9or+Ee+k1/g/8W7HNI5d7b1DYw
WGN9Yq9hs96b9wcf0pfVZKdX7MKVTRhq/XtO9c/tK1eWk0zutXO4vtW67dwb
VW67RJYJvYbpHlDbwnrXr1x+sXoG8+B6NZbU7eroKbUvnG9G5c5yrv16LZeH
xd2a5alu47Zx4+pRdSnuF3Z9bPUBNZHaSE2xWOX6csc3Oy2ngm2oNbTDOCa/
i6XWmJPbqy34NGPowKpVJtU7gJHPfvfahhp3Kfc3RjbtNUxd7rBvr2HtavbZ
lUviTjev3H/ZeifTq7aZUPvA0HetY8HWYfNqJzHqk72Gaxxb63BQOf55lbuo
nXHvuNaLinN5Ktu/VrEcLvPf0W08Ph372rEtp5fbwxRgC38v7A4H9Ua3cb+4
RDknXGInWGu31ZBqSVg7rlpOObfXapYX7d9ttQzOUK61YV/jEu8vLPE0+GS3
1RhX1bFhH3DcZ6vtzML95B5vdxtug0PctLgf3OLrhT3iAP/abVwjrmPxOqea
wrt/tttqjUcLm/52lse6rZaBTX/NMbqthpCLO5ba4l+F3eKQXMPDhVVfVvcI
hxSL3+o2nI0WgtYBP4Qnos2gFZCT4LFh9Qu4nCx/7jXOZsm0DfQ1LgengfvS
hutQs6vd7YsLp72gLZAjwe1hCLAEmARsQk38ct2bWhk3hKt4KctwX9Mq4LLV
f+pAOPnzde9wRTWb2sW7v6xwsWeKT4MzTihuyTVv3Ne4f9z3QdWHYMB3Z/vr
uv/DhuX6axZH+2ZhxzhMz0ytB/vGsb3TbTin/EEe8amhxt3QcqiZbuu1WhC2
fne9U9obWgZjQN0Le92q2zAV2AosV20Cc4G9wIhgRTCyd7l4XL4aCw62YnzG
hzy7LFuPbVw2rnxm7fO+wVZrbJb1XYYbpr5D1Y6wE5gT7ElNr7an3cAtvZNl
6b6GCd1X16pWpwFRu2mjDaEtotU4p44Bg4PFwdRga7D4pbIsmeX8bsN98Z2u
97Dc+4bFJcqR4VK4MtzXA1le6zWcWXwWpw8aaljL7zttzHV7jWOcX7UE7hHG
p5baIuffbbhxZg/Uu8Cl4dT05Vt6jWsT8+XXy3TbOXCXtDTn1jawENiBPtff
a7yL2ODceBw8i3x7RK/hsngfscW2eB2YxSWVm8E2H1Kfyz37G45My4ALXbre
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
sQ==
          "]]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwlkM8rw3EYx9/tq5n13b60HfzYsAMnYiiFk1o5Oazlpvw4ijm52Y3DmvwH
kqJcMKXcNuVi8V1JcXCTgyKllAt5refw9H5/3s/7+fF5Ukv57FpA0gDhEFuu
lAxJX560Cv9plh7hbVGpjiERlmLwxSapB+5HpAL6bYu9HfQ0eIieQy+jD9Lv
pDEDHG6VntC6PMvl8ZyDc+h/jR7ov8QBvNOzmmNqi+xyxi5p+Ck4g/8TTzee
BXJvaDW4D2bwTKGNUnsBHwH7iSN4Hxggt4evhD/KX2rs0M7OOfRn9Ipn/ymi
34F1tKysd4X3JnoVnGeHIHW9+CfhL2gJz250jycJrtDzm7oH9AyeDzxJeIzc
DZ44OEtMcLfxkMUls3Zd27sM33Ft7334NrxAxHm/0+eKO687ttcGehj9Fb3K
zGn8FXCZuRFmpDy7HRYFXcuNwYdc+79Pnw4wzE2uHdvxH7EwQgI=
           "]], Polygon3DBox[CompressedData["
1:eJwt3WWYJdXVBeCanmGse3oGJ7i7BocQLLgFCC4BgmuABA8aCPlwJ3hwd5fg
7k6QAYK7u33r7bN/3Gd6zT5Vt27JOVvW2jXNZjutsWNP13V/H9F1Q/LvkL6u
G5p/dw1YpL/r5h7edZcFPx98/Miu+zT2MwZ13R3jdN3psQ+Lfe/YH4j9n7Hf
P6rrdhvcdTdmf+ON6bovhnXdjrHfG/shsY+T7V8Y3Pa/aLYfL59B+Xuu2LbP
+Kuyv5Oy/5uy/zG92W/2t3vG35T9jR/7Kdn+/uzvvWzzp2x7WvCDwR8EbxF8
cvB9we8Gbxp8XvZ3cPZ3QfY3JPs7MfZ7Yn879j/GfmbwI8EfB28dfEbww8Ef
BW8VfFLwvcHvBG8SfHrwQ8EfBm8ZfEH2f2j2f3H2PzT7Hzf/90SOd9L8nu1y
vO/k92+S8Xdl/N/zf6dm+weC3w/ePGMfy+/bL+PvzO/7Vcb3xv5i8G6xLxb7
t8HnZf/3Z//nBQ8P/m/sf439N8FDsv1Tsd8W+ynBU+Y7nol953zvzzmeLzP+
7Njvif3fsX+e8efF/k6+b/F83yexnx777bGfFvtf83tmCV4p+Jns67OMPzfj
387432b8vcF/Db4heEzwZBl/bH7PYzmeIzP+i+zv39n+7mx/lu8LPiv4ruAz
gz8LPjP4zuAzgr8PviD4weALgufP/q7N/l7M/k7M/qYLPi34yeCjg8cL/kfw
w8GHB3+c7U+t339qtp86//dsjm+X/P4utu/yOT/2B2I/P/Yfgi8Mfij4wuCv
g88Jvjf4nOBrsv+Lgh8OHi/n75vYzw2+L/jc2MfPpyffPXe+Z4f8/lkz/rx8
1TP5v2Pzf5Pl82S+f8d8/4/Z/p6cr78EX5/zNTrjX8z/r57xt2f8gRm7a7af
MftfPvt/Knjh4JtjfyX2k4N/yfbXZ/suf6+T7ReL/bHAT2M/Lf/3beyXxv5z
9r927H+MvTf7myP7+0/sP+X/r4n9j/nez3M8G8U+PPZZY7819jH93cCDP2f+
3jbbT5x/H8347TL++4xfNOMfzZBPMuaU2MbP+Zgg+Irg1bLtRMETB18Z/Pvg
TTO+P/ufO/u/I+Onin2K2K+Ofc3Ypw2eOvia4D8EzxA8XfC1wWsFzxw8Y/B1
wWsHTxY8afBVwasHf5Pfe1GO7/v8rj/keDfI942T75sp33dzvu+r2C+I/evY
fz+m4QuD3w9eKninjJ8645fK+Mcy/uva3wexLx37zrFPF/sysT8R+5+Cxw2e
N/iuGm9/32b8Ghm/XuxDYp8x9htjvz7HOzh4huA9zG353JjxPbGtl/HXxj4o
9uli3825z+eG2AfFvm7sV8f+S/57mtj/Ett1wT0ZP33w7u69fG7K+MEZv37G
XxN7F/u0sf81tjHB4+a/Ls/5WjV4tuBZgq8PXif4slzXuYJvDN4n+5g99jez
v/2Dl499ofyehfP3+fnsFfsssb8R+37By8V+TPDt2f7i4BWDZwz+X+z7Bi8b
PEHwK8F7Bi8RfGm+763gA4I3zv7my/4Xyt/n5LNH8BM5nwfEfnfO52T5PcfW
/l+PfYNsf0Lw3cFv2T54rmy/YP4+K5/dsv1xsd8Z+xvBG8beH/xS9rd78G+D
xw1+OXiP4MWDjw++K+PfDN4o+NYc3xyeRfO735v9L5C/T8/nL8HjBs9r7ctn
R/NRtn89+/tb8DLmm+DXgvcJ/l3wbdnf3Nn/TcH7ZvwUsb8a+97BS8c+cfDY
4L2Clwx+JOOXzPhbg/fP+Dljnz34huB1Y78w+Os6H+sHj+obuGW6y4JXsf7W
eu16rBT8tu/P34dZn6y3Of5f5+9j8tkueGTG57HuLg1eOeP/637I34daj2Kf
NOPny98n5fPn4IdjnzN/H5zPZsHTxj6/uSCfXaxx2cekufe+zT4vsnbmeu6V
33drrudEuZ6PB+8ffFfwpMFvZMyfc78em21OyravB+8YfHTwCcH/C94p+Jjg
E4PfDN45+Ljgk63H+f5dg08I/jrf/1rsOwQfFXx87A/ne/6Z71szx/1ufuh/
8/3fBs+QsdPn+58NPjj4/oybOvj54H8EPxg8bfALwYcGPxQ8XfAJ+b5dsv/j
s/8vrd/BewafGvx98L+Cdws+2TkIPj14n+Azgn8Mfi77OyT7eyD7myb7ezXH
u33sR8Z+nN8b+3GxPxv7HLGfme33i/3fsf+c7e/N+HmD1wreP+PvCJ4jeLXg
vYOfC9688F7Bn2R/52R/b2V/v8n+7ox9rthXj32f2O8Lni947eADgh8Inj94
neCDgt/K9idl+zey/aLZfvccz6KxbxT7czmehzJ+weD1gg/O+AeDFwheN/jv
wYdl/B+Cdwt+P+PfzP6+y/5mzN9zZX+PZPzCsW8Q+z8y/tHgRYI3DD7U9Qte
KHj94EOCXwneLviI4GOCXw7eNvjw4KODx2b/R2X/T+Z4Z8n+RwS/UP4Hf+Pt
4JNjf7POx/vBp5b/swT/LPhfdb4WC34v+JTyd/hHH+YeWi/30oL5vyPyf5OP
zrWp/Tk/ft/xwa8HLxL8QfBpwe8GLxn8cbbfMNsvkv87Kv83Rba/JH9/nL+X
iX3R/J4l8uwslfNzTWwfZvvTY3+v1qtP63oav2zwR8Fn1HpmvRoW/Fz5U/zx
RbK/xbO/h/KdV2d/Cwf/NvjB4KuCX8z4w7P9Y9l+hmz/WvAxwU8HzxZ8RK7f
Otnfntnfhzmml2M/MvYnYp8p9teDjw1+Jnj24GMyfqOM3y/jP834V2M/Ovan
Yp819qNiXz/2fWL/OPZ7cjy/Dv5D8H453uNi3yT4wODPY38p9m2CDws+KvaP
yr87JPj/gt+o8/1c9j9n9v9S8BHBjwfP6Hmu58H4w8xvwVsF/zP4iOAXg7cO
/r/gI4NfCN4y+NDgw4PPzvEcGHxu8KBcu7tinzt4jeC/xb5n7L8J3jj4hRzv
4/yx4E+D58z4R4MfDv4oePbg63N8m+f4lsv5Hz/n/9rgzYKXDR4v+LrgPwVf
kuMfWtfz2Wz/Tba/LN83NPiZ4K+DLw2+PHjjjP9dth+d7ccp///L2C/hawRv
GfvysU8Q+w3BWwRfmv0Py/4fzPHdm/HvZPzMOb77g+8KfjN4xuDLMn6jjL8w
43v498Ejetr+L7aeB28Y+9LZf3/2f0fwl9b34EmCrw7eNPjibD9Otn84+38g
+38/28+a/T8Y+x6x3xz7BLFfEfvxsV8fe7/zF/s3sU+fcztJ7P/JuH2Cf5/9
vx37RRl/WMZflvHDgx/K+D1jvyXjJsz4y2I/JvZrYu+L/cP8/8WD2zPoWbw7
43cNvi7/35/xVwZvErxM7GNy/HcG7xx8Tex9ji/4j8EXBQ8Ovi77vzj7fyT7
nyD7eyT2vWO/LfaJY78k9iNjvzL2kbE/GfuBsd9j7oj9ltivif3Z2CeN/fbY
v459uvzeXseTcTsEr5LjeTP2AzJ++YzfNuNfE+9k/PexzzSyzTcf1nzwWrZb
qOaHM2s+Wjj4b9l+qWy/ebZ/eWSbD813L8X+a89L/j0heO183/v5vn9m/OoZ
v2vGv5vx79Z8+HLGzZfx/8u/Zw1uc6K5ce+MXzzjN834F0e2+c/89WrGLZjx
/4h91dj/HPvbI9v6Yj5+MfZ5xrT56LDgF4LnDv57xq+U8Ttk/Bsj23xsvn4l
9vlj3y/2ZWLfKvaxI9t8br4dG/sC4tPYb4/99dinz/HdFvt2sV8R+8jYbwre
Kviy4OHur+Cd+E75PRPn+t+U7a/M9k9l+0my/Q3yH8GPB09kf8HXB78QPLn7
KfPDPMFrBu+b5+Pm7G/r7H+F7G/C7O+W4G2CL8/3jcj3PRP89+D7gqcKfjr4
oOB7g6cMvjv7vzX7G5v9Tdvb1rPng78LvsL6H/tNwS8FT2V+in2XbH9tth+V
7W8N3jZ4xXz/RPn+Lyseeq/WI/HiZcGfBa8wpsVTPwTPnHP5uzFtjZuv7gfX
d7PYr8rzf1qczJfz/ceOaGuZ5+mz3ramLVj3g+dr04y/MuNPzfiXMn7z4GuC
zwgeG/yn4KuDTw9+JXiL4GuDzwx+NXgF+aPgk4NfDF7G8xt8QvAh2f/SwRcE
Hxv89962f/t7Jvhj8YJ1vOLdL2M/3e+seFY8vlzwJRl/YsYfGnyqdTX2rSve
PYlfELxZ8Ne97Xj9/qcz/qPs/4uc/8mCFwteI/bpYx83eN7gu2OfJnh08DzB
d4h3g8cE/zr4TvFu8HjB8wXfI94NnjB4weD7g2cJnih4oeAH+HP5vomDFw5e
tbf9Psc3W47vueDvYp8+9mVjXzf4s+BJghcJ/n3wVNnfqOC5gv/T366n6/NU
8IfW3zpfM2d/z9T1dH1nCH5C/iP7mybjl874tYO/Cp4yeIngPwT/ix+S8Vtk
/LfBh3muy/82n2yZ77su48/K+NfyfXPkeZkz/siSud8uyP05U/DMwTdn/HnB
swbPFnxL8PnBi2d//872h2f7/bO/M4NXrvyK/Nb0GT+DeCv43IyfMngq8VPw
2cGTBk8u/g3+d/A0wdOKf4PPCZ6f/yk/GXxZ8ALBiwbfF3x58DE5/qnyfUsG
jwpeMPbfxH5/8BWjW8woNhIjiSUnjP1X8hf5+8zY5+YfB98ZfGHw9tnfzfk9
5+X3vJ3zcTA/Kftfueb7JYPPjf2o2A8MPi7jp6n11np/QvB0tV6NG3xs8NTB
S9V6/K/gGWv9N/+cHDxD+R/8ga3lk7L/f2f//xNPBU9f/gj/ZMbg8WOfP/Z7
xcvB05a/YX08NXjmml/Ml9sF35Tx52b8Wxn/D35krV/W61Nin6nmQ/PRtsE3
Zvw5Gf9mxv+TH1fru3jttNhnGdzmY/7ENsE3ZPzZGf9Gxs8UPEHwAsH39bf5
yvwzbcY/lu1/zP05U+wrxL5B8HvBv2S+nCZ4+XrezQfzZfzLwS/F/lHso2Nf
pO6v1WJfJPbXgv8tjxS8aPD/gicvf2i2jL8l3//r4CUK3xz8Tvb3Y/Y3ZfCy
NZ94PubM9i+IR2N/P/a+2BcKPjLbTxb7YrGPzO8dG/unsY8X+2Kxz27OzL11
dvbz0+j2vJmv5sn4F2P/ION78v3TZ/yKwR/JhwXPFLxy8OvBX2R/EwYvEfxW
8HfBkwX/LviN4K+DJwleKviv/FDrQ/D1wfMEH579XR58dPBc4uvgS4KPDF7b
+lX38zs51j/I59T1dT+sGrxPzf/m97X4Q3W/uP/HC3413z8o+Mbg3a2T+f4v
4ex/odiXzfitg5/ob/O553/B/P6xsc8f+9KxbxH7o+aX2A8JvjD48NgXiP13
wVsGPyYfFvvBwRcE/1/s61iPg88Pfjf2BYOXCd4q+HHXVzya5/fufN/FOf/j
xj42xyvpcoN8W/Arwb9kPb4++Jecz1mz/cqxb5z9D+bXBK8RvFnwIHF+8GrB
m/S2+998OXn2/1Bve348D78KfqCehy+C9w8eXs+f52OC4GHB8wUvlf1tnv09
ku+ft+7HzYIf7m/zsfV8qox/pLetr7uX/aGafzyvE8V+X+y94uTYN4592942
n3h+x4t9nHzfCH5l7BvEvnU93+aD8WMfKh6Jfd7Y14p989iH8cuC1w3eMnjq
jO8Pnjv49nz/0zlfr+f8DQ7+dewXx75+zWfm2/OC1wo+N/v5WewcvEHwBcGD
4q+MCn4x2/+Y83+N/F/wS8E/BV8bPDr45eCfg68LfjLf91pwT75v7nzf88Hv
BI8IXiD4goxfJ/s/L/v/xXoS3JfjnTP22/qbf3N58BPBHwSfH7x2xi+R4+3N
+AuD1631oi94iuDejJ8j42/N+GfzfW/m+4YGzyeeiX29jD8/39fl98wjv6Je
lO0vyvbzypcE3xN8SfB4wRPJlwefETxyVMt3fJ/fd6X8beyLqcfFfmXsB8f+
eU+7X9w/fw/+rKddL/eP+WfyfP8w/k+2Hz6q5RO+zf4u72/1h+tiH5p1bqMc
35o5/g+lrWO/Ov+3VvAnweM63/KN+dxS/hP/a7XY3459uP3FtlV+5xf5/gnr
fls99vdi73X8sQ/Nd96e7Ufk7z/m+8YJ/k/w8OCNxcd84OCRwZvI/2d/z2Z/
d+R8npb9bRP8ZU+7nz0/6wU/FXxb7KcE75vf82Fwf+yD8vt3iP37nvb8eT7+
FvsHwaPUj2JfJ/bHg2/O9id7foJvq/nF/LFf8Hi1npiPdjJP97TnzXo0JMf7
E38tx7thjnf/7P+j2EfHPjj73yv43eCRwT9l7HbZ/pue9vybDw6K/dOe9vx5
vvYJfj+4L/iXjD8w+JPgcev53Dv4veBe/pF8RfA7wSP4v8EHBH8cPCZ4SMYf
IG6u+dR6d2nun+/z0yfP9dgx49fJ9fk8eALzW37DFbH/FDxV8M7yEcE/Bk8Z
/Ofg5TP+leBfsmZdIKaVc8z+x+TvLfL7RwbfGzw6eHP13mz/c8ZPne139fuz
/aS5/34T/FDFu+JZ9Rnxifzm2cEfVf5sh4yfIuMXz/hHRrZ453zrR+yr1v1z
W/AotZwxrf6pnvlp7CuqT49q9dDPrSvB2/C3s7+Fs78Hss2WwRMELxB8b3Bf
9nd/xo/LlvErmU9y/D3yI+z53FX+sPhheMbfGdyb/99UfiK/94eMnyLjd4pt
lWz/RvA48jsjWw5dvn+ScVpufbCYMtsPiW2DbH9xX8u1y7lv71mpfLDx2wZf
ouYZ+2TBO1hfs90DFd/wz5fO9z0f+3d8itiWCX4x+Mfgc4NHeeYzfg7Par5v
ydifif1rNZf834jYf4599vy9Weyj1TCsH8HbBPfL4QZPGLx18OLZ/sls/0W2
P2NkO9+uz7uVfz0o/05S/hb/akfzU/C+w9p6vEXs/8v9+miet/Nj30T8Gvx4
8Puxrx37I8EfB18X+w6x31LrOX/k6OApa342H6+Z8Q/G/kHsV/e25+Pdiu/E
Q6vHfl/wu8FXxr5HPT9P1Xz/p9hfD34k+FzxbvBLwT+J96yfGf/fXI8fcv6v
qvFjESzy/XfVfGQ++az8m73qeX2m4ssNar7i/9xsveTzqu9k+5Nz/FMFT6/W
EnzS6Oaf8ld3rnr3xP0D01Z3dvBR4p/gSYLPCz42eMJgS81ZwUcET+IeCT4n
+Ojgvr6BZai7Ovi04NHB46vXBp8e/KuMnzD43OBjgv9Yv/++HO9ZOd4JYs9P
786M/fDYJw+eLPj84OPFX8GzBl8S/K/gaflswdPm3jgleKL+gZ/R/Tv2I0e3
mqHanBqdWuKUYuzYL8zfJ1pfg6cMviD4BP5JNh6lXhx8avDfcnyjy19+ua6X
6/Fgjvfs3nb8LwR/Lz52P5T/OVv5667/Wz1tffyh7kfXf3DwPeLlWj9/W+v/
ATUfv5j9fZnxq9X9dFX5z3vLK1Y8wH/fvfztmSue/4s8Y8XfTwefm/2tWfsX
H6wU+x3lf/NvD6z14aXgr8wnsd9d/jr/fPW6368NPjZ4Zxe/4iXx/Zr1/NwQ
+/HBG9X5uDv4jN72fda7V4Mv7m3rl/Xjv8Ff9Ld49qb6/q/7W3x3Q9n9/m0q
3nyhxm9X8d+Ldbyr1fG+FXx5b1u/rG/PVj5nn1qPnwv+pL8dn/X+G/5U5Reu
LfunsW9V+Ybngz8L3q/WW9//eZ0f5+9/wZf2tvzTNfV99v+38g+er/3tWPPJ
K8Hf9rf5Rfz+cvA3/c0fuDV4bPCFvc1/er74Lvgt6nvHVj50oaqfHFP5SvnR
P+V+/Yv52PXP9V0u+PfBS+e+/8/oVpNVy1XTVatdPva18UPy9+2xrxC8TvDY
4DuClwleFV8r+NbgZYNXC34h+LbRraatdq6GrtbtO3339+73/L1Hxh+R8ROJ
i/knwUdZj/h5wSsGrxv8asbfObrViNWC1YTVjveJ/ZjYV8Adiv2/+fzA93C/
809iPzr2X4lzg3cPPjx4Qn5l8O+CVwl+LuNvCV4qeCX8muCbgjdUD8R/CX4y
eCP11ODPgp+S3xjZat1q3p/n/9ZXT8Lvyt+Px75ozvupuV6H5Hrtk+u1sfpx
7Mtku6djXzV4g+D/Zfy9wasEr6/+7nkPXjl4veDXgu8e3Wriaudq6Grli2X/
Z2T//8z+97XeZvzKGf9sbDdn/GLBywU/EXxt8G+Dl8dvCr5Ovit4heCngq8P
XjJ4xeCng28M3jP4yOCJc74+Vt/L952c7zso37cXfzT2k/hj/LbYdwzen38d
/FbwTsEHWCr45a5f8IHBo8RBwTsHH8S/D343eJfgv3OF+enux+C/du2aurbb
j2zcCByJocPbB+cA14Dtv1VvW7PqZ59UfnJwxV9/Ngfm77X4sPktb7hns91y
aseO35wo18pnjn2yfDat+HrD3laDU3tQg1Cbkz/9OM/X3sNaPmGbfP9eXdun
fb+ez2CcnXz+l7+3jH13/mrGvxJ8YPAp+DexfxV8kPpj8Iq4P6Mb5wE3BEcE
F2L/2E/mD8uzxH5o8DnBMwd/az0I/hf/NvjL4H8Enx08U/A3wZsG78q/yvc/
M7pxTHAvcDBwT3aN/WChobxR7FsE7xb8U8a/NLp9/P2z9c3zHfshsS+vFjO6
/Sa/rcv2Y/P3VrHvETgo+NXR7ePvHn6s5yf2Pbt2jpyrDdTbgz+xXgSv53oG
fyS+CV4teEP8G/Fc8Oo5//vl+myb6/NUf+O04LrhvOG64MTguuC84MrwKfmi
fFK+pnzTUdl+r2y/i/gx+9s3eJvK/2w1vPnkfPH76sNX57Oz8dnFDmIIvvw0
2d+2lY+Qf5kh+M+Vv5CPwMHDzdyka9w8HC++Pp8f9wuHDfcLBwy3bbpsv0Pl
M+Q3cOxw3XDecO9wPHFdd+wa9xPnFTcWRxYXdq7Kp7nn3fs4jLiTOJS4jTh9
fGU+M67f8OGNY4tb+38jGwcP9++xrnHz1qx82/bZ3zP9jTM4Vi66a1zCP1S+
bYfYn+1vMRLuGw6c2Mk+cSn/0bXvOjLX85r8vUr+/8fRjSOGy4TThDs2b47/
2Ozvb9nfX3obhwtXDGcMtwtn7IL8fUvXuGSHZX+X5O858/f32d/hwZcGr5xx
P4xuHC5cMJww3C45pz/Kffa0XNQU+Wxe+TL5NDGhWE/MJ1aUM5CLkJOQS5Bj
kEuQU5B7EOOIbcQ4Yh/52sWzv00r/yWHIXchhyG3geOitq/Gj/syf77/hIzf
P+N3k6/L8Z+bsSu5b3P8a+MPBH+Qc/Nw8BrBfwz+XewPBv8+eKPgN2O/f3TL
kYilxdRyJ6vHvnH+fku+IvZ18RWCPwx+NHit4C2C35cPGN04XUfm98wzpHG9
Zsnx/aWnnTPnTow+Yfb/Rddi9xXze/es/KB8II4k7icOKO4kDiiuKM4obuhM
2d+ulf+T38OBxE3FUcWNnCr2rSqfKX+Js4orjDOMy4pTiTuJQ4lriUO8str/
oMYtXjnHs3flY+VrxcxiXzGwWFoMLFckZyQ2Xinj96r8rvzmCsNbjkFu4cJ8
Vqn88laV35Vv/lvli+VvjRGbi9FtK8aVm5CjEPv6jX6rnKfc5vZ85ODV5IBG
tHqaet/Qyk+qieM24TiplU+YMRv0tPqb+pgavdq1GrbavZq7WrWatVq8mrVa
vpq+WjaOFK4Nzg3uFI4ZbtsAx214WxOtjept6o04MgfFvumgxp2Rw1drUHOQ
2x8/49ftafU69bmJgzfuafUQ9UGcHlwcnBxcH5wc3B0cHlwdHB5cHJwc3J5F
cj6X72n1zbv6Ww0fNwBHQG3/zZGttq/Gf/Dw9lHDV7tnw4nH1cDZwJXHwceV
x5nHzcfRwP3AAcHdwKnDncOhw7XDocOFw4nDrcOJw83B0cGVc41cK/VO9VEc
EtoBGgLckkVz/Cv0tHqr+ixOBm4IjgiuBg4h7h4OH24hDh9uH44fbt9vs/3K
Pa0+q97EB+GLqP+qry4W+0o9rR6lXoaTgvuBA4Kr8pvYV+xp9TT13iXEh/FP
9hnW6rs0Djdn/MmDmvZhnMqXq1ctW/WLZSpf/p+qT6iHzFP5cxx1XBScFNx1
nBRcBZwFXJX5qj4yZ+WfcRpwT3BQcB3mrfqB/LR6Fk4KbgOOA64KDgVuEI4Q
bgXOA+4BDgIuhPrMcj2tvq3ePX/VW+aqfPnUvY3LgNNw5/A2p5vbZx7a6lM4
DrgaOBu4D8bgOOA22BbnAhcDJwMXY0TVJ9S31LtwlnCZcJpwmXCMcK9wsHCP
cLI+C358UONqyfGrvanByf0Pq3qG+pn6IJ+Ub6omoVYgR682oEYgd4/TheuF
84XrZU4wN8jpq2Wo6aklqimq9am5qa2psanF4VzhQuFE4WL9trfV5tToXh3e
anBqc2p0anNqkmqBaoJqlcaoEaoN2nZw1VvMAeaCQVVvsg/7knOTu5PDk4tb
PNdnlZ7GL8A3OGd447zhuvX0tjXWWqtGpZZljjfX26d94z+o/4+o+oU5z9yH
g4Ar4ONv58C5+Gl4q8mqxW5YH767Ghkbf37SfPbsbfGLOcpcpYaL2yAHIReB
A4ALoL76S/HJnEtznLkORwE3Af8C3+KHqoe4pq6tGqla8MCYnnYPuBemG9X4
G+pHV/e3e9K9ObSn1VIdo2N1jZxv95x7T41V7XWGqpf/XPUmPivf1RxsLp6x
6tW/VP0JXwT/46eqV6ln43+oJ6of4oPgf6iHqi86J2I7MY9zJccm14YjgCvA
B+OLWYOsRXxavq172r1tTjQ3irnEXtYQa4lr6Fryafg21ghrhXPu3Lvn3Ht8
Zr6ze8y9xufl+5qjzFUDc+DQtkZaK91DtFY0V+4tNRm1GTGx2Fi8ulA+J/W2
eoqcmNwYn5/vP3nVy74uPiPOD+4Pn4RvMkXV4/Aj8SFxQnBD+Ph8fdfMtfPM
e/blwOTC+NwDvndvy52pYasV0089mWP9oviN7nn3vmfWs2sONhe759x7Ynqx
PR+IL4TzhluHY4cLh1OEW8Qn45vJMcg18GH5smpGakdq1GrR6qH4Qt8Xv2uq
qo9+V/U3HCdcJzGL2EXOSq5MzkwuS85MrlqOUS5NTlpuGmcKd4pP8GPxPWes
cz5Qy+pp10JNTG1MTkRuRE5UbhTHCtfKM+PZMaeaW81J3xVf1NogJy83j1OF
W4WzgrsiRhIrqZ/iH6kn4rPKkcklyinKnclJDuQme1psIQcpF8nn5nvLOcrV
ydnJRXrmPHvmYHPxGtn//sHbZczT/Y1fgI+wY/Bz/Y2foL6/U/Dz/U2Phf9J
j0Bvgj+H73nHiKa/ww/Fp6PHo1f4tRzCkMaHxf+cWww6pNVr1Z9xXHBX1OzV
7vE58Q3xQSep+rR6NP0YfRk+Ij4gfQS+KP4ovQT9Ab3BfaOavg5fdIoxrd50
X9VT1FfwY/FN6RPoGegjdyv+4FSlz6M3o6fBN8WpwcXCMcA1UHNVG1UjVYuV
wx4yrNVY5LbnyvdtOaTVvxUCrDdfFB/ReqwmIfcqB6tWoT6qBqP2gi8ih64W
oiYwUBsYXmtX8SWtoe8Uv9LaLocr9y7nLLeLz4sfTJ9BL6FGohaiJqJ2ooYi
9y4Hr7aixqtWqmaq9mtNf7/4tXwdNRm1Fzl/uX81VbVeNV+1VjVauXA5cbVb
a/ZHxe/kC6kJq+Wq6aoVy5nLzcvRy6XjM+9efE56EnxP/FJ8ZPoXPi/fV8wg
dni7/OWDy/99o+IF/uzZ5U/7P3+bP3EScRdxlnCXxlY8sU/5w3xMvqYYQizx
WsUX+5V//HLNT3uWP/1p+fvHl3/sGA4tvu/bVf+7v+p59ICfVzxwUvmn71f8
c1j5t+9WPHBo+ffiF1qZi8ofvaj4FPjU+KkXFJ/j6hGNXz1Pvm/rIY3PgW++
oBz7kMZXx8+dTo1hcOPv4kfPr4YwpPHL8eUXkqMf0vi8+LX47vj09MITFN8X
/x3fHD984Yz/85DGx8UHplfCH6fPof+ZVw1jSON7DxnTOHm4bDgyuDKXFF8D
3xZ//LLio+CT03cu4HiHND7/sOKP49PTf9LL4vvjx9NH0zP3Fz+Fvpe+9KpR
jW9OXzvumBaf7VPxivgIR1OtSM0IVwv/CB+Jfpa+lTiMXnTYyMaXoBe8sfgU
+BJq0mrTOGm4aerLNxWfQn16SNWbe6u+O/XoPKO1P/wPesYbio8xwM8Y1fQJ
9MP0t9Nk/N2x949s9Xb17zuq/q9ePqLq4eNWffn7bH9F8Fc5llXGNL3HKdnf
reM0PXNv8QUmqHoy/sftxR/AJ8AX+U99Hz6Bmr7aPn7zSvn7u+z/8ti/KEzP
Qi+Cf47/jp9Pf0g/Qt/y1KjG16d3mbn42vjZ9EX0LPRj+Nv0LfQy9F30ZPQz
9DD0ZPRe9DH0XPRk9GX0XfQqavBq8Th8uHwrV34DvxofemTVj+m16acny/k8
MWP/O6Lx4+ldDi+MP0/fRq9GD0Nf9cqoptfB7593TNPj0Efh7+PP0/vQ5+DT
48vj6OJ644jhiuFL4bPRS9Ob4/Dg8uAc4x7/FPtVg5v+FB9BzVKtVM1ULVNN
U61VzVWtE7/vo/y917CmtxZTia3ErGJXNVncGRwatVoxlFhKDCuWVYNVK1Uz
VZt1z6uRqo16FnBucFdwWHBxcAhwNX81uHELJpWTzt/njGj8yb5RjS9G7312
f+Pz4R/Sg9Ofz6nGO6TxzfC/cGJwE3AUcGXmiH3zIW1/+Gj0jfT7j45oeip6
Hfod/RHo6fGrceZx5emvcUxwTb6o+/2HjL8y238TvNqYxlnBXfmq8I91vr8L
Xn1M0zTTNn9T2PW4OvYfgtcc0zTJtMnfFf657PgjGxb+MXjW4LXGtGPClccB
d6z0uPSa9GH0VFPJWQb/MqLpy2muaa9931r1fF1W9nXq93ie6ZnXq+P3++if
16/n3fNIz07vTM9F/0i/Qq/yYeXDjqz8zItV39mt8jGHV776tcoX/rPy6/J5
y1c+c9aqB/HH8bMPrPy1egM+AS3yXJXPvrLyxVNXvpLeX78FelR6Uv0B6P/p
S+k1L6/85BSVP7+28sczVv7z6spHT1f5UjkSuRI5K7mriysfOXHVJ/Qn0P+A
Hpbe9dLKh05a+W39H/QvoIelj1VvPLjqJ+opchxyHXJocmnqxYdWvUU9Q45B
rkHOS+5LXe6YqkeoK+i/oV/FFCNbPwM1O2PY1AP2rfz/Y1WP2L/qN09WPkG+
Rm5HzCf2k1+eqfLn6nE4+rgpOCq41foN4Avpj6Hfh3z2YVV/US/ZuvLbO1a9
RM5G7kaOTK5MzkXuRY5Pro+mgxYAJxg3GB8J/+hXI1v/DWQSvSBwuHFl1Htu
r3yIepN+FPpT0BvSA9Lw0/IvWvl/HCHcIhwJXAk5Nbk1OUO5w9OqHjNO5dPV
U9yT7kX55rMq/9Jb9SE5oIFc0Dgt94VjhIuEo4GrgY/8qblQPb6/9VzRC0NP
DL1YxKxiVzVRtVE9J/RmuaxrvSjUO9TT+qtepSeH3hl6aOjVIeYUe8pxy3Xr
saHXhJ4Tem/osaGXxXld671xbtVPxq16GJ9OrlGOmq+nn8aH5uZhTZ99QeXX
1c/U6eTf/Z+/1eeOr+P9sOot+n/ox0HfTQ+uf4h+JfS+9L3XV71klqof6Cei
vwj9L33oV32tfwc99bH9LacptymHLJd8bP2e96o+pH6ml4WeDXo3yCnKLcr5
yv2eWOf7k6rPnFzn5/Oqp8iJyo3KSctNO7/qd29UveLoOt9vV/2JD8/X5/Pz
7eU45TrlwOXC1QfvrfqUeoQYSezxUeX76Nvp4+mt6au/r/z0lZW//brqBRdX
vvc/Vc+Rj1BvoDenj6fPpu+mt6evp6+m36a3p8enxz6k8sNis3cqPypnINYX
88slvFj6XPpdejf1HvVE9Qv1hLF9Td9OT35gf9P70+/Td/+j8stis/crPyrP
KzYUI8prqk+q76mvqIeIYcRGYiSxjXqU+pL6hXoF/fuf8vfB4zR9sBhFLl2N
ROyifqs+q/6i3qJurL6rPqNOYY3hW/OxrT34BOp/6i/qAerLtjFWbUMM7Jgd
q9hY/xn9c+iH6Y3Vn9Wj1UPUR/jsYi0xF19evUw9Tb1FfUW9WX1ZPUi9SL1M
PU39RX1HjCb2EoOJ3dQ/1bfVX9Sf1Ctp8/UoUC9Sf76r6unqnfTU9PL6B9Bb
m3PE8l9UPlo/J/146KHpo/UD0t+JXpoeWkyPq4izKNa3xlxT+WtrjzVFvePe
ymer555V85H5Ss1A7UANSC1Ivficms/MN/hIp9d8Y/5Sb9ab5NGqb6snn1/z
k3r2t1WvMQd7dvEljq/6tfq5GoBjcUxqMfhJJ1V93fyHv3FKzYfmN9eYb8HH
cO2tKdZSa6q1xppjrbHmWIvkya3l1nR1Cmue/7uj1sIhlf+0JnrWBzTC4zSf
l28r58G35ePKhcihWQusCXJr+l18kPl0j2GtH4J+B/of6Neg/4MYXuwvByC2
lwMQ64v55Qb41HoX0Tjwtd0T7mX3tHvFnGVuNEeay5wj18Y1cu5cI3OTOcq1
47OY68x5fBk+mFyCnALfbJWq59Jz0nfKGcpNy1HLJa5Z+Tn6LXovPWMuyvn/
T9d6yegZpLePHj96Ca3R33oF6Rk0eV/raaJXyUAaBxctn5vy96r57gWHtx5E
eg/pQaQ3kZ4oet/ogaNXih4neqUIjfU+0RNH7yI9jPTKwUHFrcWxxU3FscWt
xbHFvdWzSK+iqbvWy0iPG71w9MTR+0bNXm1fjV8tX88wvcQe6VovMZwYXDKc
MlwZPWP0ytEzRy+Z/8vn4tjmyG+ZfXjjFOAO4RDhGuhxplfYA13rfaYHjt5l
93StN44eYnqfPdi13mJ6oOlN9lDXeqPpcaZ32b1d6322WX/rnXZ/8L/6Wk8z
vdLu61qvM/+nh5reacYeYr2NbcYc0wzDG4fDsTpm3A4ckXn5SV3jjuA84Tad
3TUuFI4H7sclXeN+uKZ6Ounl5FrrAaX303Rd6w11RF/bl33+enjrqaPXjp47
eu3g/OL64vziAuNA4wJP0zVu9HGjG9cZ53my/sY59n/+xkXWE0gvID2B9ArS
Y02vID2D9F6bpK/16NGbZ6n+xonGpcapxpXW00jvHj189DrSU0ivIz2P9BrC
icalxqnGlcb5w11cqWtcQJxGXECcQFxHHGxc6TxOA9xsmlTaVRpWWlWcEdwq
HCtcEhxu3GscbNxumtaz8LL7mtYV5/oMXNLBjYuth98uQwbSmwO9/fTc0ztO
Dzm9+HCucbFn7RoXm6YI1xvnm9YI5xsXnCuNC07TSntEg0TrqieU3lF6SOkV
pceRXkh6Iul9pKfUXzL+7cGt15SeS3o53d21Xkw42lcOGwgHB7jbOOe426O6
xkXHYccFz58D3HaccNx16Wlc8aF9bVv7uGJY64mnd54eenrl4YTjnuOg44o7
V7S5NLrOmWusN5MeTa49zizuKQ4qLq2eZHqRzdi1XmV6kumlNUvXepWJMfla
fC6x525Vjzu26hfqd2qbal7qLeqDu1c9Sr1LjCRWFbOKnfasepz6h21+rvhG
Tzm9/eht6G88s55dJ0Z8peef3nc4niOtCV3jfuJ44n7u3zXup3rUQVX/Ue/B
8cT9PLBr3E8cT9xPHFDcT5xD3E8cUFxEnEJcxIO7xjXEGcUlPaBrXFL1yL2q
nqees3/Vy86o+u39fa3fEL3PLv2t/5D+Qfqd0f8cWfW5O6q+dXTV7+6u+pZ+
Q/oP6XemPxqfiS/Hp+NLidnEnmJQsdy+VX87teqPYqadq/4mluIT8r34YHxF
9dN1q341wBXsbbHWP6t+iC+0QdXj1CP52HxLPibfW0z156FNYyrWwsnauOqX
6oFvFP8UxxI3Fed5guDDusaFxunFvcbBxvWlF6KvMoeby/G1n8U77mvccZxn
XOjtusaFxsnF58Ypx9V9qfjXOLu4ozimXwXv0jXuqX3hnuKg2ifOGi4aThou
G84rLixOLC6sHnJ6k83etd5y9GL0TNYkaxMONS729l3jVuvJptfaXV3r1aan
m15td3at1xsOrLXFGoMbq8fZa7F/1bXeZzjeuKfbdo37/WrxWXF2cVkfGd24
d1uKz/oaRx03+siucddxzHHXj+oa9xwnHfccBx1XHUd6iuATu8adxuHFncah
xu3F2cXtxfHF5cWJx1U/vGtceT3a/prvf2dw692GM4zri/OLS/xK8XNxdnGN
cfjeC968a9w+nEHcvi26xiV8vfi4OLq4uDiAfqPfhhuIc4sbiCOIi4vTjou7
dde47ji6uO7bdI27izOPO75i17j0N4xu3PIVgpfoaxxz3PPlu8Y9d4yO9ePi
+zoGx+Iec6+5Bq7FG8Vn5K/gQl5a6/u35b9cUv6Be8C94J5yb8nxyO3I8cj9
uOfce67hI8VPdm1dc9f+pPLHZuharwf3/GZ13Z0bz5BnyT3n3nuszsdf6/73
8Sx8WHxlzwCbMc7d43W+dqvn48TyJ6at9ff78l/4JEeUv4Mbywfli9IL0AdY
428uvqe12hpiLXFNXBv6gXvrOrpX6SfuKj61a0lPQF8gpyd3J4cn10ffQe9B
L0AfQH9B7+GauXZ8Sr4ln4JvIWcmtyfHJ5dmTjA3vFn8Uv4Y7u015a+5R9wr
fFS+6kp9Td/hHnGv0D/QO7iH3EtP1PO4e93PJ5Q/xl+ZsnwQ6yqf6/j6WH/1
4GDTo4K2m8ZbLykab1ppmmnabz0q9KrQM0svKz0v9L7Qc0rvKz0o9KLQA0vv
piPLPxhV/oOeF3pf6IGlF48eFXpV6Imj18/h5W/NlvPT09f0Nqt1rV+a/mur
FX9UPxr9SvTY0GtDj6hrRrWeFHpT6Bmk95UcqdhTDCp3ak20NtIX0C/oeaH3
hZ5AevPo+WWf9qUXmJ4bem/oCaZX2BHl3/BphpZ/xB+aP3iuvhav8Ndm61qv
lLPLX9SzRO+So8v/HL/8tWPKX5yo/DnxjXhn5q71XuFPnlf+EH9ODCOWoR+i
F9IfZb6+5jfxNc8s/4kmfd7yz84u/5C/xn/VW0WPFL1SbKP3ih4r9nV6+Zc0
7rTu/E/avzm71hvmjPIv9VzQe+G08j/1UNFLxRxprqR3oj+S496kazlkuW9r
lrWL3ol+Sg88ve/0wNMb79LRTUvv+P0uPR3uquPxfb/JZ9n8/bj5YljrQXNz
nS/nWw892noae731aPLvruN1Pmju76/fT4uvh8y99fsXKH9qTK0/1iM1a7Vo
NWm17HPr/E1b852ardqsGq1arp4z99X1dn71rPGb/BbnV81cLVxNXC1dT52b
av50vfXcuaXuH+dbj4E76/y6HuYgc5Fn3rNvzjJ3mePMdc6pc+uZ8ezQoL0c
vFbXtGnmKHPVcl3TNtEsmUesNbRM7in31qpd06bxN0fX+my9pqm6q+YhWiua
Nlo3c6C50DPgWbgj/3f7sNZT5456Ptwf7gn3hjnSXOmZ9mzribhoPS/X13xk
vvJd5mJznu+kyXLt3QO0Wvpv6pdJ707fzv+lrTmm/Af+dV/5A/w3miJaGmu4
tZzmjfaNf7xT+RNTV3zM37GmWrv2rPXemmet3aP8m9dqf/zvXQrT8vCB+EJj
C/PX+e8wLRCfg+/Bv5qp4nW5Bv4cLRMNg/wCzR/t3/5dixf4L9NU/kH8/nId
Px/ypfo9xvMx+Zov1/eJH/j/1mBaOpora7NjYjPGsfE/+Zv75P+262v+1lTl
/8k18K8mKv+LP8Y/44+dHnxwX/OX+V/HBe/b1+KPUeUv88fEP+KdQ4N362vn
3G9zzI5dvNNf/iH/mj9Iq0jjxb/1G1wrv9lvc36eH938ZL636zuk4h/xEP/y
V+Uf8/feLDsfn6/PH52k/EH+I/9+4vIn96/xtG6HdG3twIe7qvh86kGHF1/w
tuK/4Q/qXXNr8efU1NXW1WDUYnBecV9xCHAJ5Njk2vjUfGscVVxVnBPcE5p3
2nc9zvQGw4HEhRze03o/4mDiYuJ44HrgXOJeqnGrdeMs4i7qQaJXHc7AQK/1
QVW77K/e7oNarZPGndZdz7aBXnD9jXurJq82T/NP+68GphaGM4g7qCeJ3phq
9AO92we12hEOLS4tjh2uHc4s7qyavto+DSAtIA4CLgKOCq6KnL3cPc4t7i0O
DS4NzTEtME2w3nJ6yOolq+ak9kQjTGtMc0w7jNOL24szgTuhvxYNMu0xvTEO
Cy4LjimuqRqZWpkcr1wvTTStNM00rbSeSHop4TDiMtJQ00rTTNNW00zTWtNc
01LTINMm0ygPaJODZx3aNE60TjTZtMo0y7TaeibonfBm8O6jWk8DvQ30hNPb
BucE90QNTi3OOxF2y/G+O7i9K4FminZKjz69hPQk0UtGTxm9SnDKcctxmHGZ
9STRu4RGnVZdzzG9x2gEaQUl1vRiobmmvdb/Qn8LMaJYUQ8HvRxwOHE5aSho
KXCuca/5aHrL0Qjy3Wg0aDVwqnGr9bzRO+nzwa0Xjp43euHoiaMXDg0GLQbN
KO2oGpJaEg4SLlLP6NarhYacllxNRG1ET1m9Y9VM1E5oXGld1QzVCtUM1RJx
PgfeHTCocQlwTgbeNTCo1S5xvgbe7TCocQ88A3pI6B3h2dBDS68sGj5aPtt4
p4N3OdgXjTmtuRq2WjaN+n7DWg8N2nU1VbVVNTi1OBoVWhWcdNx0v0lPHL1w
/FYaEFoQHGxcbNfo9/m83t+unZ4xes3ocaDXgR42esnoCaA3gBqYWpieunrx
6kmsN7Eak1oTTgxujBqTWpNnhDZfjwDPDk4tLiBOIK6tmoLeYTReag16LOjl
oaeH3gt6nkyc/c0+qPVCUcNUy9RjWi9pmjHaMRoYWhg1VLVUOSS5JDVQtVA9
p/W2nqDiBz309M7TwxbXEOdwvv7Wf0V/FTkNuQ01TbVNPaz1ttZzRe8cPXT0
YlFzU3vTw1vvY5xk3GSaItoiHEFcR5xH3EEcZVxlGg1aDRwjXCScJNwjGj5a
Ppod2h2cMbUXNRhcMpo62joaHFocHAJcApoj2iM9NfXW1ENFLxU1YbVhOTi5
OI48bjOOMy6wniniMz0Q9VKRc5N7884B7yqQz9NTXC/xA+uj9ivHx6bnm1hK
TEWb55w4N3LAcsHiP/GgHoZ6LeJc4R7jIONiqXmpffHB+GJ63uht4xq4FjSt
tK00WLRYNF60XjQWtBZ6oq86TqsRqxWPqXhOD0W9DXG6cT1xPnG95STlJvUk
urKvcVJxv3HAcVX1XNdLXU91vdj18NH7SI5Ork6Pdb2i9YzWe53PyHeUs5W7
Fc+KX/VUPK7iP/GuHo16Meo5ofeEHhZ6W6gBqgW+P7j1SteTSe8gOTe5N5wE
Wk+aX1wFx6xH0871W2juae/1qNXLmiaSNpKGjJaMZpJ2ksaM1kyPV1xEnETa
SzV+tX49u/W6pQdcOJ8n+5u++8RRrSelmFZs6xnBocWd9eyMV/GtHpPG2oY2
nKbQvnD2cfdp9Gj1vDNj94x/b3B7l4acsNywd2LoFeWdGd6F4Z0Y3qXhnRfe
peGdGt6FQQNNC01zR3unB61etDSwtLDeoeHdHN7R4d0aeqrovbjG4NZrRX5C
vkHPTb01cYxxeXF6cY9p0GnRad5o386t+GqxivdwuHC5cCpwK/SM0XtLDyG9
ZI4vvcODxSdyTp1b19S1fa34jCsXXwpnCJcHpweXaGzxJVcovpM5xdziHnQv
0uPQ+9BE0irS/wz0ju1pWkmcAdwKHAtcAnqggV62PU1rSu8yZel9xik+Jf7j
asWfwsnA9cD5wNWgh5q+9Ea0efRT9FE0erR+9FfTlF6IHolejF6LPmrC4ovi
dy5dfFh8a71QdxzcemG/XfxrPbH1Asexol2mkce9ck+7t8255l5zkrlJTVRt
1D3h3lATVRt9rvjTixWfFYcUlxRHE/8RZwrXCecJl+rp4vvriWvMy8Vvxd/F
x3+h+K/4sfjUNNS4XjhftHf0F/Qheph7N8VjpSfAt9W79InSH+hhqvcujhXu
FA4V7hU9Hr0c/Rf9EA4KbgmOCW4K/Rs9F40wvZnn39ylxqt+SydIy0XTRYeH
c4JbgmOCi0LjRatHs0f7ReNmG2Np3+i/1ii9E30V/ddapbei76F3OqH0RvQ/
1lxrr2fUs0oPRJ9Fv0evZo20VnoGPYs0eLSE9Gi0eeY4c505wFxA/3Vs6ZHo
mazR1mrPvGefPoreCOcA9wAnCLcGxwZXiIaLdo+Gj7aLJpH2jwaQVhFnCZcI
pwiXid5xtdJr0XfRUNKC0YTRP9Ix0ifSy9Et0ivSP9Lf0c/RNxrDRq+HA4Sr
g7ODG4T/jX+vR5zebPSj9Kb0efRzNJX0pPR09Hk4QLTeNPS4QTSetJ30mPR4
fB6+jzXOWkfzRhtFI0ULxwfji1mzrF30rXpf6ilND0hDRdtF40VbRW+Cn65n
nHdBmWPNtd6H5n1n5mBzMU4CbsKNxQ8aWvxvY4x9uGvvStODR6+CIysfTdNG
26ZHkl5JehTqZajnk95P+Ea0RH8prvd1xb+kt/F/OLq4tTi2uLtXF39SgZse
B6cWdxaHFteW3kmvST2W6TdwBHEFcdRw1eiV6I9GF/+cvoneaETxzXF8cYNx
hHF/6ZXon/qK324f3lHi3ST2jSOMK4xzh3uHw4jLiMODy0MTTRtNE0cbhxOj
V64eHrgyNN203TSBtIE027TbNI+0j3p0Dh3Wegbr3aknMm4Njg0tHI04rTgN
IS0hfil9IP0SfZMekHpN6nmn9x2OM64zjiGuIQ03LTcNLS2tHpN6YerBpReX
HpV6S+pZp3cdDiYuJo4ZrhkOLS4tjiCuoJ4BegfQ2NLa+uiJrhc6G04zbjNO
Im4iPRp91yTF38eBxrXGucaNxlfHpf9xRHu3GX0WPdc8pV/AMcWtxrHGPaX3
og+jz6N/o1ekj6Qf26J4+XrZe0eEffIJ+AY4PLg8fBC+iBhYLKzHvV733oHg
3RL4x/RZ3pnm3W/0NfQSeqDqBYmzqveFnhy4rPQU+PbeyaZXKg4q7jAOMW6q
nvv0GN7J4F0L9Bn0e95p5F0N9J30mfRs9G8457ixOLK46PTB9NL0dPR3fFS+
qn6R+knS49J70tPR79FX0+fS89Hf0ZfSW9LT0cfRl9Kb0svRv901QMRqegt6
CBx33HcceNx3ejv6v/FKj0FfSm+KP0i/R/dL34lPTTdID6p3mp6w9Ij0nvSh
9In0fPSqtjEW/xCnDLeMvpCej/6PnpE+i/6Sz833FiOIFdSQ1ZLFiGLF8yv/
vXjVA+QM5W7lcOUS76x8sBqdWoN4S6/k3ct/fKTirz3LP3604su9Kv5SA1X7
nLm4XHK8cptynHK/D9X+lqj8DM7jZV3jTOJCPlbx294V76qhyt3K4aqtPlv+
7QGVD3iu4p8DK1/0Vs0nN1Z+6PmKNw+q/MmT5b/Kl4jrHy//f5+Kz16o+FO+
Rf7tmfLP96/56c2ab26ofJR81bmVj9q+4odTK5+0WcWnp1V+Ub5vbMWrV1d+
TXx4RuXbtqh4dJ2an82f/Pd/DW09lzetfM+ZlX8TH+Fwntc1Dilu54s1fvfK
T8kfnVf5rx0qv3h+5ct2rHyU3MZWlbuTE5f7lgOXKze//rvyE9tUHuSsis9s
I0d+dtdy+nLnT1R89bfKR4l3nPPfVy7l6Yp/9qv5Wj5RvvH9ml/Ff/KLH1Q+
7LOKB+XH5GnkjOXG5cjlkq0HelPqUSmfJ38pv/perafyrfK779Z8Ld9in/tW
7kf+Ty/rtyo+kQOXy5bTlhuX05a7lsOW6x5e+TM9yPUml9OWy5bTluuWz5TP
+ajyQfLL8ovv1HojfymfKX90YOXj5A/1ED+18oXjVv5F73GcXtxdHF5c31/K
X5im4mf5w1EVTx9f/kRv5ROOrbxWf8X74tT36/deXvkPNXC1fTX+HyoHZhtj
xavyGXIb1nhr/eDKB05f8fpPtZ5OVfkLNSG1PTU+tSI1PrUtNS61vx8rHpyy
8ilqXkd2rSahFjak8mkzVP7ph7q+k1e+a2jlU/Vk13vdsa1d/oVj9M4y7zbz
zhzvzvH+Hu84824z729Vj16xzrftaVhpV2lYaVvVy1eq6+t60Nx6N9FXg5sW
V/3bu56+qOtPQ0ubS6NLW0szT1tPY09LTxNL+0oDSyvrncC0rzSw3hVFE0vr
SvNKK0uzS6tLs0vLSyNMO0xDTDtMw0tbTWNN20tDT2s/oLkf1TT33h3lnUq0
+DTYtPY097TZNMi0uzS8tMk0/7T+NP96AegJQDtPQ69XAE0fLRxNHK0fTT1t
Po0+rT3NKK0ozSgtqfcf0/DT7nufD42+dw96pxXt/t1VX92qa3weY2j3afht
65zQANP+Olc0o7SdNJ60pDSmtKU0prSnNJ/erecdh7Sg3idEw0q76n14NKi0
pzSotKn+j5aVptVYmlZaVppWWleaVlpWmlZaVxpA2lgaWdpAHHrceRx63Hoa
ZlprmmvaZppa2lMaVFpb76jyrirvAPSuPBpU2lMaVNpUGlS9UPVEpU3VE1Wv
VD1T9UrVM5U2kEZQL1XvoKJlpWn17j8fmldaVzaaok+6puGhNXLPe5efd1h5
FrwD0Lv+vAPLu7D0oNaL2jukvEuKBtG7s7xjjjbRO5O8O8k7rbzbyjv39CLX
k9y7tvQk9+4k7+TSq9w7+7ybzzu5vJtrudIj6znuXcoD77wa0TTItLw0mXrD
02TSZtIo04bSiNIy01Qig9BM0lrSjNKG0ojSktKI0oLShNKO0nzSZtJo0oLS
aNJ6zjKyaTdpRmlDaURpSeVX1yr/XXziGL1z0LsGHTvNJq0vDSotJ80vLSlN
Ke0pjSdtJ40n7SdNJ+0nDSitJw06rTjNOBK+monaiRypXCnNOa05zTktOk05
rTrNOq25ngp6QegJodeC+oZ6l/qNeo76lnqY+pL6E5+Tb8pH5YviaOJqyiHI
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
           "]], Polygon3DBox[CompressedData["
1:eJwl0D9I1WEYxfEH/2t6VaxBMMEhF4mQHJuExMYkcROuOAiiV1xaTLcQL9Ig
2CBiGolRhIaCg8IVXSxUEMQ/0GYNQTkIKSHqRxwO7+983/M85723piPV0psV
EVWUS91lEZVFEdvZETtUnoh4VBzR4K6e5vMjJkojerEhvse5zx/QkO9xbIzu
FUT8wZrs+1sY8cmuE2cz30P3dexiyZyICh1PsGP309jMTbYEs++pXY2U0Ttn
30sszQ/THR2/sFask0/SD7lM6e2bzn0PYP+ce3y9jkMd4/a/pZ86OrGEt6zz
G1TkLaP2LZj7Qg91/DfbLpcvtyKzSrlyz8puf0+1+8/YuX1Js/3mUvRb73d3
xTJf9aZk+mhN7hJ/jz3nX9AHbMTsR3OzVKv3TKbL7F29mzLfKKG3Wa5VpoV2
dCzKvcGW+SV6bPYCy8N8Rp3/eEpuFHuNvcMmqdrlKfZAx5a3jNifpiNvqcQy
2Ct+kLaxNuwKW+SX6Aq7BnqGUKk=
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0tdSE2EABeDfMRgFJSgoFhQSIAnglWKDFJpSLJiEJAawDA+gF76BvWEB
xQZP5Qvx/TNenPnO2c1uJptNbzyrPj0QQtiT58kQJhMhfGWB31jkFkvcZpnf
OcUfnOYOZ/iTs/zFOf7mTf7hLf7lPHe5wOX2EIY6Q1jUl+S+fZt3pKLf5T2p
6svxvNT0YddU4nFZsbN2LXap2zm7rjf0vN7Qm/qI3tQfxNijdktflZY9Zq/p
6/GY/ZCPZE1/zCfxnL7BfwdDuKQn9Bd+Txtf8hBfMcnXPMw3PMK3bOc7dvA9
j/IDj/EjO/mJKW6yi595nF94gpd9bzd7ZFw/yVNyRe/labmqn+FZGUyFcM0+
p/fJkH3dPq9fkGH7ht2vZ/UJfUDP6ZN6Ws9I3i7Yg/EeMmIX4/8Rr5NSfPbx
c1KOz5ujMqVfZHzPMq5Jx+f2/33bB7jjMV8=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0dsqJQAUBuDFxqgZakrtKamRmiKvIG8wF5QmSU5JLuxyPs3gwjvItSaE
FEnayRtorjBmnHM+H+59ysXft9bVavUXN6WqOjIioks6syK2EhGJTxHbzOYO
c/mXH7nLfP7jZ/5nAfeY5BfZNxfxgF95yBIe8RuPWcoTlvOU3R8iztjDc/by
gn28ZD+vOMBrDvKGQ7zlMO/4k/f8xQeO8JGjfOIYn7mRF5Hy7zrb7Wm2cY2t
XGULV9jEZS5Jg3mR9VxgHedYy1n+4DRr+JvVnGIVK9wuZA5PMiM2cyLmOcFe
NrKSZczlU3bEH+WkOclxNvM7y5nki94O3v7gDBPvPb4CXgJD5A==
        "]], Line3DBox[CompressedData["
1:eJwl0UsrRGEABuDPrWESJcO4DSNSbkVKWTHu1zSxdslOY8rCQmJFykrKRmQh
pUSSYuUfWFr5A36AsvScLN6e912czvm+k17PZ7cKQgg5KSwPoas4hFL9MRZC
HwfkXc9wXD70LJflS1/yzJq+Id/2qp3Xt+XH3rT39F89px/ocS/Y0Y/1E6m2
9+0z/Vya7EP7Ur+WdvuWd9KtP/BJ+vUXvsqgPuTbF+IhvNnzfOYc7znLG87w
gtM85RSPOMkJ2Y3OGf+/jzGucJSLzHCYI+xlK3siK0LoZJodbGEbm5lmiqno
XGxgY6Qk9XomWMcqJlnJWrqCUMMyJlgS3RU/i0K4iv3/rz9j/yl7
        "]], Line3DBox[CompressedData["
1:eJwl0b8rBAAUB/CHu/MjCyWhhEEovw93yX8gyS6x+xFGi2SwI6NNfgzKIi6D
SV2XFMkiKSYlrJSPDK/P2973vdc8Mz8xVxQRS+qoNKIzEZFjF/Ps5gN7+Mpe
frKPybKIlOrXVzHNeg6whYNs5xC7mWGaWWZ4bube3zw+8os1yYgOgUY5zTXu
8IzX/GCqOKItFTHCKS5zm4cs8JkJGetKIoY5zkXesaki4paNvGEDC6zlFat5
yUqeM8kT/pRHfKsD/Rt3+cwt3nODea7wgrM85hxHze5gDb9ke5Qxxz2uc4Fj
zLKWxXyya96u+9zkIic5zFYm+O5mBTc7/bsvV/lS8v/HXyNbOi4=
        "]], Line3DBox[CompressedData["
1:eJwl0bsug3Ecx+F/VSQkdLCIU4kzbZ1Pl0HcgPOxhxvgAtiZdWWRsBEDCxES
k90sJmfK88bwzfP5pU365m3rXH46FwshZK1YGcJ8eQipmhAWmOYiM1xiP5c5
wBUOcpVDXOMwR2xdj3KDY8xynDlOsMDJ6PN4CG18iawK4ZXtfGMH39nJD3bx
k938Yg977Vv38YcplpjmLzMM0XMzFj03y6LnZpxJzvLedxv1HW+tTl/zymr1
JS+sNRFCtftMn1qLu8J9oo8t6S55h4e6WT/rA92kn3RR70e/5X507+lda3A/
uHf0tt3oLW7auS4wb0d6hlNWn/j/v/4A+HU00Q==
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1138, 3642, 1139, 3643, 1141, 3644, 1142, 3645, 1143, 3646, 
        1144, 3647, 1145, 3648, 1146, 3649, 3650, 1147, 3651, 1148, 3652, 
        1149, 3653, 1150, 3654, 1151, 3655, 1152, 3656, 1908}], 
       Line3DBox[{1153, 2654, 1154, 2656, 1157, 2658, 1160, 2660, 1163, 2662, 
        1166, 2664, 1169, 2667, 2668, 1172, 2670, 1175, 2672, 1178, 2674, 
        1181, 2676, 1184, 2678, 1187, 2680, 1190, 2682, 1191}], 
       Line3DBox[{1193, 3658, 1194, 3659, 1196, 3660, 1197, 3661, 1198, 3662, 
        1199, 3663, 1200, 3664, 1201, 3665, 3666, 1202, 3667, 1203, 3668, 
        1204, 3669, 1205, 3670, 1206, 3671, 1207, 3672, 1909}], 
       Line3DBox[{1208, 2684, 1209, 2686, 1212, 2688, 1215, 2690, 1218, 2692, 
        1221, 2694, 1224, 2697, 2698, 1227, 2700, 1230, 2702, 1233, 2704, 
        1236, 2706, 1239, 2708, 1242, 2710, 1245, 2712, 1246}], 
       Line3DBox[{1248, 3674, 1249, 3675, 1251, 3676, 1252, 3677, 1253, 3678, 
        1254, 3679, 1255, 3680, 1256, 3681, 3682, 1257, 3683, 1258, 3684, 
        1259, 3685, 1260, 3686, 1261, 3687, 1262, 3688, 1910}], 
       Line3DBox[{1263, 2714, 1264, 2716, 1267, 2718, 1270, 2720, 1273, 2722, 
        1276, 2724, 1279, 2727, 2728, 1282, 2730, 1285, 2732, 1288, 2734, 
        1291, 2736, 1294, 2738, 1297, 2740, 1300, 2742, 1301}], 
       Line3DBox[{1303, 3690, 1304, 3691, 1306, 3692, 1307, 3693, 1308, 3694, 
        1309, 3695, 1310, 3696, 1311, 3697, 3698, 1312, 3699, 1313, 3700, 
        1314, 3701, 1315, 3702, 1316, 3703, 1317, 3704, 1911}], 
       Line3DBox[{1318, 2744, 1319, 2746, 1322, 2748, 1325, 2750, 1328, 2752, 
        1331, 2754, 1334, 2757, 2758, 1337, 2760, 1340, 2762, 1343, 2764, 
        1346, 2766, 1349, 2768, 1352, 2770, 1355, 2772, 1356}], 
       Line3DBox[{1358, 3706, 1359, 3707, 1361, 3708, 1362, 3709, 1363, 3710, 
        1364, 3711, 1365, 3712, 1366, 3713, 3714, 1367, 3715, 1368, 3716, 
        1369, 3717, 1370, 3718, 1371, 3719, 1372, 3720, 1912}], 
       Line3DBox[{1373, 2774, 1374, 2776, 1377, 2778, 1380, 2780, 1383, 2782, 
        1386, 2784, 1389, 2787, 2788, 1392, 2790, 1395, 2792, 1398, 2794, 
        1401, 2796, 1404, 2798, 1407, 2800, 1410, 2802, 1411}], 
       Line3DBox[{1413, 3722, 1414, 3723, 1416, 3724, 1417, 3725, 1418, 3726, 
        1419, 3727, 1420, 3728, 1421, 3729, 3730, 1422, 3731, 1423, 3732, 
        1424, 3733, 1425, 3734, 1426, 3735, 1427, 3736, 1913}], 
       Line3DBox[{1428, 2804, 1429, 2806, 1432, 2808, 1435, 2810, 1438, 2812, 
        1441, 2814, 1444, 2817, 2818, 1447, 2820, 1450, 2822, 1453, 2824, 
        1456, 2826, 1459, 2828, 1462, 2830, 1465, 2832, 1466}], 
       Line3DBox[{1468, 3738, 1469, 3739, 1471, 3740, 1472, 3741, 1473, 3742, 
        1474, 3743, 1475, 3744, 1476, 3745, 3746, 1477, 3747, 1478, 3748, 
        1479, 3749, 1480, 3750, 1481, 3751, 1482, 3752, 1914}], 
       Line3DBox[{1483, 2834, 1484, 2836, 1487, 2838, 1490, 2840, 1493, 2842, 
        1496, 2844, 1499, 2847, 2848, 1502, 2850, 1505, 2852, 1508, 2854, 
        1511, 2856, 1514, 2858, 1517, 2860, 1520, 2862, 1521}], 
       Line3DBox[{518, 2285, 517, 2283, 514, 2281, 511, 2279, 508, 2277, 505, 
        2275, 502, 2273, 499, 2271, 2270, 496, 2267, 493, 2265, 490, 2263, 
        487, 2261, 484, 2259, 481, 2257, 480}], 
       Line3DBox[{465, 3332, 466, 3333, 468, 3334, 469, 3335, 470, 3336, 471, 
        3337, 472, 3338, 473, 3339, 3340, 474, 3341, 475, 3342, 476, 3343, 
        477, 3344, 478, 3345, 479, 3346, 1005}], 
       Line3DBox[{1523, 3754, 1524, 3755, 1526, 3756, 1527, 3757, 1528, 3758, 
        1529, 3759, 1530, 3760, 1531, 3761, 3762, 1532, 3763, 1533, 3764, 
        1534, 3765, 1535, 3766, 1536, 3767, 1537, 3768, 1915}], 
       Line3DBox[{1538, 2864, 1539, 2866, 1542, 2868, 1545, 2870, 1548, 2872, 
        1551, 2874, 1554, 2877, 2878, 1557, 2880, 1560, 2882, 1563, 2884, 
        1566, 2886, 1569, 2888, 1572, 2890, 1575, 2892, 1576}], 
       Line3DBox[{1578, 3770, 1579, 3771, 1581, 3772, 1582, 3773, 1583, 3774, 
        1584, 3775, 1585, 3776, 1586, 3777, 3778, 1587, 3779, 1588, 3780, 
        1589, 3781, 1590, 3782, 1591, 3783, 1592, 3784, 1916}], 
       Line3DBox[{1593, 2894, 1594, 2896, 1597, 2898, 1600, 2900, 1603, 2902, 
        1606, 2904, 1609, 2907, 2908, 1612, 2910, 1615, 2912, 1618, 2914, 
        1621, 2916, 1624, 2918, 1627, 2920, 1630, 2922, 1631}], 
       Line3DBox[{1633, 3786, 1634, 3787, 1636, 3788, 1637, 3789, 1638, 3790, 
        1639, 3791, 1640, 3792, 1641, 3793, 3794, 1642, 3795, 1643, 3796, 
        1644, 3797, 1645, 3798, 1646, 3799, 1647, 3800, 1917}], 
       Line3DBox[{1648, 2924, 1649, 2926, 1652, 2928, 1655, 2930, 1658, 2932, 
        1661, 2934, 1664, 2937, 2938, 1667, 2940, 1670, 2942, 1673, 2944, 
        1676, 2946, 1679, 2948, 1682, 2950, 1685, 2952, 1686}], 
       Line3DBox[{1688, 3802, 1689, 3803, 1691, 3804, 1692, 3805, 1693, 3806, 
        1694, 3807, 1695, 3808, 1696, 3809, 3810, 1697, 3811, 1698, 3812, 
        1699, 3813, 1700, 3814, 1701, 3815, 1702, 3816, 1918}], 
       Line3DBox[{1703, 2954, 1704, 2956, 1707, 2958, 1710, 2960, 1713, 2962, 
        1716, 2964, 1719, 2967, 2968, 1722, 2970, 1725, 2972, 1728, 2974, 
        1731, 2976, 1734, 2978, 1737, 2980, 1740, 2982, 1741}], 
       Line3DBox[{1743, 3818, 1744, 3819, 1746, 3820, 1747, 3821, 1748, 3822, 
        1749, 3823, 1750, 3824, 1751, 3825, 3826, 1752, 3827, 1753, 3828, 
        1754, 3829, 1755, 3830, 1756, 3831, 1757, 3832, 1919}], 
       Line3DBox[{1758, 2984, 1759, 2986, 1762, 2988, 1765, 2990, 1768, 2992, 
        1771, 2994, 1774, 2997, 2998, 1777, 3000, 1780, 3002, 1783, 3004, 
        1786, 3006, 1789, 3008, 1792, 3010, 1795, 3012, 1796}], 
       Line3DBox[{1798, 3834, 1799, 3835, 1801, 3836, 1802, 3837, 1803, 3838, 
        1804, 3839, 1805, 3840, 1806, 3841, 3842, 1807, 3843, 1808, 3844, 
        1809, 3845, 1810, 3846, 1811, 3847, 1812, 3848, 1920}], 
       Line3DBox[{1813, 3014, 1814, 3016, 1817, 3018, 1820, 3020, 1823, 3022, 
        1826, 3024, 1829, 3027, 3028, 1832, 3030, 1835, 3032, 1838, 3034, 
        1841, 3036, 1844, 3038, 1847, 3040, 1850, 3042, 1851}], 
       Line3DBox[{1853, 3850, 1854, 3851, 1856, 3852, 1857, 3853, 1858, 3854, 
        1859, 3855, 1860, 3856, 1861, 3857, 3858, 1862, 3859, 1863, 3860, 
        1864, 3861, 1865, 3862, 1866, 3863, 1867, 3864, 1921}], 
       Line3DBox[{1868, 3044, 1869, 3046, 1872, 3048, 1875, 3050, 1878, 3052, 
        1881, 3054, 1884, 3057, 3058, 1887, 3060, 1890, 3062, 1893, 3064, 
        1896, 3066, 1899, 3068, 1902, 3070, 1905, 3072, 1906}], 
       Line3DBox[{1907, 2653, 3882, 1137, 1140, 2655, 1155, 1156, 2657, 1158, 
        1159, 2659, 1161, 1162, 2661, 3883, 1164, 1165, 2663, 3884, 1167, 
        1168, 2665, 3885, 1170, 2666, 3657, 1171, 2669, 3886, 1173, 1174, 
        2671, 3887, 1176, 1177, 2673, 3888, 1179, 1180, 2675, 1182, 1183, 
        2677, 1185, 1186, 2679, 1188, 1189, 2681, 1935}], 
       Line3DBox[{1922, 3071, 1904, 1903, 3069, 1901, 1900, 3067, 1898, 1897, 
        3065, 1895, 1894, 3979, 3063, 1892, 1891, 3978, 3061, 1889, 1888, 
        3977, 3059, 1886, 3865, 3056, 1885, 3976, 3055, 1883, 1882, 3975, 
        3053, 1880, 1879, 3974, 3051, 1877, 1876, 3049, 1874, 1873, 3047, 
        1871, 1870, 3045, 1855, 1852, 3973, 3043, 1948}], 
       Line3DBox[{1923, 3041, 1849, 1848, 3039, 1846, 1845, 3037, 1843, 1842, 
        3035, 1840, 1839, 3972, 3033, 1837, 1836, 3971, 3031, 1834, 1833, 
        3970, 3029, 1831, 3849, 3026, 1830, 3969, 3025, 1828, 1827, 3968, 
        3023, 1825, 1824, 3967, 3021, 1822, 1821, 3019, 1819, 1818, 3017, 
        1816, 1815, 3015, 1800, 1797, 3966, 3013, 1947}], 
       Line3DBox[{1924, 3011, 1794, 1793, 3009, 1791, 1790, 3007, 1788, 1787, 
        3005, 1785, 1784, 3965, 3003, 1782, 1781, 3964, 3001, 1779, 1778, 
        3963, 2999, 1776, 3833, 2996, 1775, 3962, 2995, 1773, 1772, 3961, 
        2993, 1770, 1769, 3960, 2991, 1767, 1766, 2989, 1764, 1763, 2987, 
        1761, 1760, 2985, 1745, 1742, 3959, 2983, 1946}], 
       Line3DBox[{1925, 2981, 1739, 1738, 2979, 1736, 1735, 2977, 1733, 1732, 
        2975, 1730, 1729, 3958, 2973, 1727, 1726, 3957, 2971, 1724, 1723, 
        3956, 2969, 1721, 3817, 2966, 1720, 3955, 2965, 1718, 1717, 3954, 
        2963, 1715, 1714, 3953, 2961, 1712, 1711, 2959, 1709, 1708, 2957, 
        1706, 1705, 2955, 1690, 1687, 3952, 2953, 1945}], 
       Line3DBox[{1926, 2951, 1684, 1683, 2949, 1681, 1680, 2947, 1678, 1677, 
        2945, 1675, 1674, 3951, 2943, 1672, 1671, 3950, 2941, 1669, 1668, 
        3949, 2939, 1666, 3801, 2936, 1665, 3948, 2935, 1663, 1662, 3947, 
        2933, 1660, 1659, 3946, 2931, 1657, 1656, 2929, 1654, 1653, 2927, 
        1651, 1650, 2925, 1635, 1632, 3945, 2923, 1944}], 
       Line3DBox[{1927, 2921, 1629, 1628, 2919, 1626, 1625, 2917, 1623, 1622, 
        2915, 1620, 1619, 3944, 2913, 1617, 1616, 3943, 2911, 1614, 1613, 
        3942, 2909, 1611, 3785, 2906, 1610, 3941, 2905, 1608, 1607, 3940, 
        2903, 1605, 1604, 3939, 2901, 1602, 1601, 2899, 1599, 1598, 2897, 
        1596, 1595, 2895, 1580, 1577, 3938, 2893, 1943}], 
       Line3DBox[{1035, 2284, 516, 515, 2282, 513, 512, 2280, 510, 509, 2278, 
        507, 506, 3353, 2276, 504, 503, 3352, 2274, 501, 500, 3351, 2272, 498,
         3350, 2269, 497, 3349, 2268, 495, 494, 3348, 2266, 492, 491, 3347, 
        2264, 489, 488, 2262, 486, 485, 2260, 483, 482, 2258, 467, 464, 3331, 
        2256, 1089}], 
       Line3DBox[{1928, 2891, 1574, 1573, 2889, 1571, 1570, 2887, 1568, 1567, 
        2885, 1565, 1564, 3937, 2883, 1562, 1561, 3936, 2881, 1559, 1558, 
        3935, 2879, 1556, 3769, 2876, 1555, 3934, 2875, 1553, 1552, 3933, 
        2873, 1550, 1549, 3932, 2871, 1547, 1546, 2869, 1544, 1543, 2867, 
        1541, 1540, 2865, 1525, 1522, 3931, 2863, 1942}], 
       Line3DBox[{1929, 2861, 1519, 1518, 2859, 1516, 1515, 2857, 1513, 1512, 
        2855, 1510, 1509, 3930, 2853, 1507, 1506, 3929, 2851, 1504, 1503, 
        3928, 2849, 1501, 3753, 2846, 1500, 3927, 2845, 1498, 1497, 3926, 
        2843, 1495, 1494, 3925, 2841, 1492, 1491, 2839, 1489, 1488, 2837, 
        1486, 1485, 2835, 1470, 1467, 3924, 2833, 1941}], 
       Line3DBox[{1930, 2831, 1464, 1463, 2829, 1461, 1460, 2827, 1458, 1457, 
        2825, 1455, 1454, 3923, 2823, 1452, 1451, 3922, 2821, 1449, 1448, 
        3921, 2819, 1446, 3737, 2816, 1445, 3920, 2815, 1443, 1442, 3919, 
        2813, 1440, 1439, 3918, 2811, 1437, 1436, 2809, 1434, 1433, 2807, 
        1431, 1430, 2805, 1415, 1412, 3917, 2803, 1940}], 
       Line3DBox[{1931, 2801, 1409, 1408, 2799, 1406, 1405, 2797, 1403, 1402, 
        2795, 1400, 1399, 3916, 2793, 1397, 1396, 3915, 2791, 1394, 1393, 
        3914, 2789, 1391, 3721, 2786, 1390, 3913, 2785, 1388, 1387, 3912, 
        2783, 1385, 1384, 3911, 2781, 1382, 1381, 2779, 1379, 1378, 2777, 
        1376, 1375, 2775, 1360, 1357, 3910, 2773, 1939}], 
       Line3DBox[{1932, 2771, 1354, 1353, 2769, 1351, 1350, 2767, 1348, 1347, 
        2765, 1345, 1344, 3909, 2763, 1342, 1341, 3908, 2761, 1339, 1338, 
        3907, 2759, 1336, 3705, 2756, 1335, 3906, 2755, 1333, 1332, 3905, 
        2753, 1330, 1329, 3904, 2751, 1327, 1326, 2749, 1324, 1323, 2747, 
        1321, 1320, 2745, 1305, 1302, 3903, 2743, 1938}], 
       Line3DBox[{1933, 2741, 1299, 1298, 2739, 1296, 1295, 2737, 1293, 1292, 
        2735, 1290, 1289, 3902, 2733, 1287, 1286, 3901, 2731, 1284, 1283, 
        3900, 2729, 1281, 3689, 2726, 1280, 3899, 2725, 1278, 1277, 3898, 
        2723, 1275, 1274, 3897, 2721, 1272, 1271, 2719, 1269, 1268, 2717, 
        1266, 1265, 2715, 1250, 1247, 3896, 2713, 1937}], 
       Line3DBox[{1934, 2711, 1244, 1243, 2709, 1241, 1240, 2707, 1238, 1237, 
        2705, 1235, 1234, 3895, 2703, 1232, 1231, 3894, 2701, 1229, 1228, 
        3893, 2699, 1226, 3673, 2696, 1225, 3892, 2695, 1223, 1222, 3891, 
        2693, 1220, 1219, 3890, 2691, 1217, 1216, 2689, 1214, 1213, 2687, 
        1211, 1210, 2685, 1195, 1192, 3889, 2683, 1936}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1964, 2654, 1965, 2684, 2107, 2714, 2137, 2744, 2167, 2774, 
        2197, 2804, 2227, 2834, 2257, 2864, 2287, 2894, 2317, 2924, 2347, 
        2954, 2377, 2984, 2407, 3014, 2437, 3044, 2480}], 
       Line3DBox[{1967, 1968, 3995, 1969, 3996, 1970, 3997, 1971, 3998, 1972, 
        3999, 1973, 4000, 4001, 1974, 4002, 1975, 4003, 1976, 4004, 1977, 
        4005, 1978, 4006, 1979, 4007, 2625}], 
       Line3DBox[{1980, 2656, 1981, 2686, 2109, 2716, 2139, 2746, 2169, 2776, 
        2199, 2806, 2229, 2836, 2259, 2866, 2289, 2896, 2319, 2926, 2349, 
        2956, 2379, 2986, 2409, 3016, 2439, 3046, 2494}], 
       Line3DBox[{1983, 1984, 4008, 1985, 4009, 1986, 4010, 1987, 4011, 1988, 
        4012, 4013, 1989, 4014, 1990, 4015, 1991, 4016, 1992, 4017, 1993, 
        4018, 1994, 4019, 2626}], 
       Line3DBox[{1995, 2658, 1996, 2688, 2111, 2718, 2141, 2748, 2171, 2778, 
        2201, 2808, 2231, 2838, 2261, 2868, 2291, 2898, 2321, 2928, 2351, 
        2958, 2381, 2988, 2411, 3018, 2441, 3048, 2507}], 
       Line3DBox[{1998, 1999, 4020, 2000, 4021, 2001, 4022, 2002, 4023, 4024, 
        2003, 4025, 2004, 4026, 2005, 4027, 2006, 4028, 2007, 4029, 2008, 
        4030, 2627}], 
       Line3DBox[{2009, 2660, 2010, 2690, 2113, 2720, 2143, 2750, 2173, 2780, 
        2203, 2810, 2233, 2840, 2263, 2870, 2293, 2900, 2323, 2930, 2353, 
        2960, 2383, 2990, 2413, 3020, 2443, 3050, 2519}], 
       Line3DBox[{2022, 2662, 2023, 2692, 2115, 2722, 2145, 2752, 2175, 2782, 
        2205, 2812, 2235, 2842, 2265, 2872, 2295, 2902, 2325, 2932, 2355, 
        2962, 2385, 2992, 2415, 3022, 2445, 3052, 2530}], 
       Line3DBox[{2034, 2664, 2035, 2694, 2117, 2724, 2147, 2754, 2177, 2784, 
        2207, 2814, 2237, 2844, 2267, 2874, 2297, 2904, 2327, 2934, 2357, 
        2964, 2387, 2994, 2417, 3024, 2447, 3054, 2540}], 
       Line3DBox[{2054, 2668, 2056, 2698, 2121, 2728, 2151, 2758, 2181, 2788, 
        2211, 2818, 2241, 2848, 2271, 2878, 2301, 2908, 2331, 2938, 2361, 
        2968, 2391, 2998, 2421, 3028, 2451, 3058, 2557}], 
       Line3DBox[{2065, 2670, 2066, 2700, 2123, 2730, 2153, 2760, 2183, 2790, 
        2213, 2820, 2243, 2850, 2273, 2880, 2303, 2910, 2333, 2940, 2363, 
        2970, 2393, 3000, 2423, 3030, 2453, 3060, 2565}], 
       Line3DBox[{2074, 2672, 2075, 2702, 2125, 2732, 2155, 2762, 2185, 2792, 
        2215, 2822, 2245, 2852, 2275, 2882, 2305, 2912, 2335, 2942, 2365, 
        2972, 2395, 3002, 2425, 3032, 2455, 3062, 2572}], 
       Line3DBox[{2082, 2674, 2083, 2704, 2127, 2734, 2157, 2764, 2187, 2794, 
        2217, 2824, 2247, 2854, 2277, 2884, 2307, 2914, 2337, 2944, 2367, 
        2974, 2397, 3004, 2427, 3034, 2457, 3064, 2578}], 
       Line3DBox[{2085, 2086, 4087, 2087, 4088, 2088, 4089, 2635}], 
       Line3DBox[{2089, 2676, 2090, 2706, 2129, 2736, 2159, 2766, 2189, 2796, 
        2219, 2826, 2249, 2856, 2279, 2886, 2309, 2916, 2339, 2946, 2369, 
        2976, 2399, 3006, 2429, 3036, 2459, 3066, 2583}], 
       Line3DBox[{2092, 2093, 4090, 2094, 4091, 2636}], 
       Line3DBox[{2095, 2678, 2096, 2708, 2131, 2738, 2161, 2768, 2191, 2798, 
        2221, 2828, 2251, 2858, 2281, 2888, 2311, 2918, 2341, 2948, 2371, 
        2978, 2401, 3008, 2431, 3038, 2461, 3068, 2587}], 
       Line3DBox[{2098, 2099, 4092, 2637}], 
       Line3DBox[{2100, 2680, 2101, 2710, 2133, 2740, 2163, 2770, 2193, 2800, 
        2223, 2830, 2253, 2860, 2283, 2890, 2313, 2920, 2343, 2950, 2373, 
        2980, 2403, 3010, 2433, 3040, 2463, 3070, 2590}], 
       Line3DBox[{2103, 2638}], 
       Line3DBox[{2104, 2682, 2105, 2712, 2135, 2742, 2165, 2772, 2195, 2802, 
        2225, 2832, 2255, 2862, 2285, 2892, 2315, 2922, 2345, 2952, 2375, 
        2982, 2405, 3012, 2435, 3042, 2465, 3072, 2592}], 
       Line3DBox[{2466, 4093, 2467, 4094, 2468, 4095, 2469, 4096, 2470, 4097, 
        2471, 4098, 2472, 4099, 2473, 4100, 4101, 2474, 4102, 2475, 4103, 
        2476, 4104, 2477, 4105, 2478, 4106, 2479, 4107, 2595}], 
       Line3DBox[{2481, 2482, 4108, 2483, 4109, 2484, 4110, 2485, 4111, 2486, 
        4112, 2487, 4113, 4114, 2488, 4115, 2489, 4116, 2490, 4117, 2491, 
        4118, 2492, 4119, 2493, 4120, 2596}], 
       Line3DBox[{2495, 2496, 4121, 2497, 4122, 2498, 4123, 2499, 4124, 2500, 
        4125, 4126, 2501, 4127, 2502, 4128, 2503, 4129, 2504, 4130, 2505, 
        4131, 2506, 4132, 2597}], 
       Line3DBox[{2508, 2509, 4133, 2510, 4134, 2511, 4135, 2512, 4136, 4137, 
        2513, 4138, 2514, 4139, 2515, 4140, 2516, 4141, 2517, 4142, 2518, 
        4143, 2598}], 
       Line3DBox[{2520, 4144, 2521, 4145, 2522, 4146, 2523, 4147, 4148, 2524, 
        4149, 2525, 4150, 2526, 4151, 2527, 4152, 2528, 4153, 2529, 4154, 
        2599}], Line3DBox[{2531, 4155, 2532, 4156, 2533, 4157, 4158, 2534, 
        4159, 2535, 4160, 2536, 4161, 2537, 4162, 2538, 4163, 2539, 4164, 
        2600}], Line3DBox[{2541, 4165, 2542, 4166, 4167, 2544, 4170, 2546, 
        4172, 2548, 4174, 2550, 4176, 2552, 4178, 2554, 4180, 2601}], 
       Line3DBox[{2543, 4168, 4169, 2545, 4171, 2547, 4173, 2549, 4175, 2551, 
        4177, 2553, 4179, 2555, 4181, 2602}], 
       Line3DBox[{2556, 3057, 2450, 3027, 2420, 2997, 2390, 2967, 2360, 2937, 
        2330, 2907, 2300, 2877, 2270, 2847, 2240, 2817, 2210, 2787, 2180, 
        2757, 2150, 2727, 2120, 2697, 2055, 2667, 2053}], 
       Line3DBox[{2558, 4182, 2559, 4183, 2560, 4184, 2561, 4185, 2562, 4186, 
        2563, 4187, 2564, 4188, 2603}], 
       Line3DBox[{2566, 4189, 2567, 4190, 2568, 4191, 2569, 4192, 2570, 4193, 
        2571, 4194, 2604}], 
       Line3DBox[{2573, 4195, 2574, 4196, 2575, 4197, 2576, 4198, 2577, 4199, 
        2605}], Line3DBox[{2579, 2580, 4200, 2581, 4201, 2582, 4202, 2606}], 
       Line3DBox[{2584, 2585, 4203, 2586, 4204, 2607}], 
       Line3DBox[{2588, 2589, 4205, 2608}], Line3DBox[{2591, 2609}], 
       Line3DBox[{2593, 2653, 1949, 2683, 2106, 2713, 2136, 2743, 2166, 2773, 
        2196, 2803, 2226, 2833, 2256, 2863, 2286, 2893, 2316, 2923, 2346, 
        2953, 2376, 2983, 2406, 3013, 2436, 3043, 2639}], 
       Line3DBox[{2594, 3994, 1963, 3993, 1962, 3992, 1961, 3991, 1960, 3990, 
        1959, 3989, 1958, 3988, 3987, 1957, 3986, 1956, 3985, 1955, 3984, 
        1954, 3983, 1953, 3982, 1952, 3981, 1951, 3980, 1950}], 
       Line3DBox[{2615, 2673, 2076, 2703, 2126, 2733, 2156, 2763, 2186, 2793, 
        2216, 2823, 2246, 2853, 2276, 2883, 2306, 2913, 2336, 2943, 2366, 
        2973, 2396, 3003, 2426, 3033, 2456, 3063, 2649}], 
       Line3DBox[{2616, 2671, 2067, 2701, 2124, 2731, 2154, 2761, 2184, 2791, 
        2214, 2821, 2244, 2851, 2274, 2881, 2304, 2911, 2334, 2941, 2364, 
        2971, 2394, 3001, 2424, 3031, 2454, 3061, 2648}], 
       Line3DBox[{2617, 2669, 2057, 2699, 2122, 2729, 2152, 2759, 2182, 2789, 
        2212, 2819, 2242, 2849, 2272, 2879, 2302, 2909, 2332, 2939, 2362, 
        2969, 2392, 2999, 2422, 3029, 2452, 3059, 2647}], 
       Line3DBox[{2618, 2666, 2039, 2696, 2119, 2726, 2149, 2756, 2179, 2786, 
        2209, 2816, 2239, 2846, 2269, 2876, 2299, 2906, 2329, 2936, 2359, 
        2966, 2389, 2996, 2419, 3026, 2449, 3056, 2646}], 
       Line3DBox[{2619, 2665, 2036, 2695, 2118, 2725, 2148, 2755, 2178, 2785, 
        2208, 2815, 2238, 2845, 2268, 2875, 2298, 2905, 2328, 2935, 2358, 
        2965, 2388, 2995, 2418, 3025, 2448, 3055, 2645}], 
       Line3DBox[{2620, 2663, 2024, 2693, 2116, 2723, 2146, 2753, 2176, 2783, 
        2206, 2813, 2236, 2843, 2266, 2873, 2296, 2903, 2326, 2933, 2356, 
        2963, 2386, 2993, 2416, 3023, 2446, 3053, 2644}], 
       Line3DBox[{2621, 2661, 2011, 2691, 2114, 2721, 2144, 2751, 2174, 2781, 
        2204, 2811, 2234, 2841, 2264, 2871, 2294, 2901, 2324, 2931, 2354, 
        2961, 2384, 2991, 2414, 3021, 2444, 3051, 2643}], 
       Line3DBox[{2628, 4041, 2021, 4040, 2020, 4039, 2019, 4038, 2018, 4037, 
        2017, 4036, 2016, 4035, 4034, 2015, 4033, 2014, 4032, 2013, 4031, 
        2012}], Line3DBox[{2629, 4051, 2033, 4050, 2032, 4049, 2031, 4048, 
        2030, 4047, 2029, 4046, 2028, 4045, 4044, 2027, 4043, 2026, 4042, 
        2025}], Line3DBox[{2630, 4067, 2051, 4065, 2049, 4063, 2047, 4061, 
        2045, 4059, 2043, 4057, 2041, 4054, 4053, 2038, 4052, 2037}], 
       Line3DBox[{2632, 4075, 2064, 4074, 2063, 4073, 2062, 4072, 2061, 4071, 
        2060, 4070, 2059, 4069, 2058}], 
       Line3DBox[{2633, 4081, 2073, 4080, 2072, 4079, 2071, 4078, 2070, 4077, 
        2069, 4076, 2068}], 
       Line3DBox[{2634, 4086, 2081, 4085, 2080, 4084, 2079, 4083, 2078, 4082, 
        2077}], Line3DBox[{2040, 4055, 4056, 2042, 4058, 2044, 4060, 2046, 
        4062, 2048, 4064, 2050, 4066, 2052, 4068, 2631}]}, 
      {GrayLevel[0.2], Line3DBox[{3074, 3980, 3604}], 
       Line3DBox[{3075, 3642, 3076, 3658, 3217, 3674, 3240, 3690, 3263, 3706, 
        3286, 3722, 3309, 3738, 3332, 3754, 3355, 3770, 3378, 3786, 3401, 
        3802, 3424, 3818, 3447, 3834, 3470, 3850, 3492}], 
       Line3DBox[{3077, 3643, 3079, 3659, 3218, 3675, 3241, 3691, 3264, 3707, 
        3287, 3723, 3310, 3739, 3333, 3755, 3356, 3771, 3379, 3787, 3402, 
        3803, 3425, 3819, 3448, 3835, 3471, 3851, 3494}], 
       Line3DBox[{3080, 3644, 3082, 3660, 3219, 3676, 3242, 3692, 3265, 3708, 
        3288, 3724, 3311, 3740, 3334, 3756, 3357, 3772, 3380, 3788, 3403, 
        3804, 3426, 3820, 3449, 3836, 3472, 3852, 3496}], 
       Line3DBox[{3083, 3645, 3085, 3661, 3220, 3677, 3243, 3693, 3266, 3709, 
        3289, 3725, 3312, 3741, 3335, 3757, 3358, 3773, 3381, 3789, 3404, 
        3805, 3427, 3821, 3450, 3837, 3473, 3853, 3498}], 
       Line3DBox[{3086, 3646, 3088, 3662, 3221, 3678, 3244, 3694, 3267, 3710, 
        3290, 3726, 3313, 3742, 3336, 3758, 3359, 3774, 3382, 3790, 3405, 
        3806, 3428, 3822, 3451, 3838, 3474, 3854, 3500}], 
       Line3DBox[{3089, 3647, 3091, 3663, 3222, 3679, 3245, 3695, 3268, 3711, 
        3291, 3727, 3314, 3743, 3337, 3759, 3360, 3775, 3383, 3791, 3406, 
        3807, 3429, 3823, 3452, 3839, 3475, 3855, 3502}], 
       Line3DBox[{3092, 3648, 3094, 3664, 3223, 3680, 3246, 3696, 3269, 3712, 
        3292, 3728, 3315, 3744, 3338, 3760, 3361, 3776, 3384, 3792, 3407, 
        3808, 3430, 3824, 3453, 3840, 3476, 3856, 3504}], 
       Line3DBox[{3096, 3650, 3100, 3666, 3225, 3682, 3248, 3698, 3271, 3714, 
        3294, 3730, 3317, 3746, 3340, 3762, 3363, 3778, 3386, 3794, 3409, 
        3810, 3432, 3826, 3455, 3842, 3478, 3858, 3508}], 
       Line3DBox[{3101, 3651, 3103, 3667, 3226, 3683, 3249, 3699, 3272, 3715, 
        3295, 3731, 3318, 3747, 3341, 3763, 3364, 3779, 3387, 3795, 3410, 
        3811, 3433, 3827, 3456, 3843, 3479, 3859, 3510}], 
       Line3DBox[{3104, 3652, 3106, 3668, 3227, 3684, 3250, 3700, 3273, 3716, 
        3296, 3732, 3319, 3748, 3342, 3764, 3365, 3780, 3388, 3796, 3411, 
        3812, 3434, 3828, 3457, 3844, 3480, 3860, 3512}], 
       Line3DBox[{3107, 3653, 3109, 3669, 3228, 3685, 3251, 3701, 3274, 3717, 
        3297, 3733, 3320, 3749, 3343, 3765, 3366, 3781, 3389, 3797, 3412, 
        3813, 3435, 3829, 3458, 3845, 3481, 3861, 3514}], 
       Line3DBox[{3110, 3654, 3112, 3670, 3229, 3686, 3252, 3702, 3275, 3718, 
        3298, 3734, 3321, 3750, 3344, 3766, 3367, 3782, 3390, 3798, 3413, 
        3814, 3436, 3830, 3459, 3846, 3482, 3862, 3516}], 
       Line3DBox[{3113, 3655, 3115, 3671, 3230, 3687, 3253, 3703, 3276, 3719, 
        3299, 3735, 3322, 3751, 3345, 3767, 3368, 3783, 3391, 3799, 3414, 
        3815, 3437, 3831, 3460, 3847, 3483, 3863, 3518}], 
       Line3DBox[{3116, 3656, 3118, 3672, 3231, 3688, 3254, 3704, 3277, 3720, 
        3300, 3736, 3323, 3752, 3346, 3768, 3369, 3784, 3392, 3800, 3415, 
        3816, 3438, 3832, 3461, 3848, 3484, 3864, 3520}], 
       Line3DBox[{1967, 3078, 3981, 3605}], 
       Line3DBox[{1983, 3119, 3995, 3081, 3982, 3606}], 
       Line3DBox[{1998, 3132, 4008, 3120, 3996, 3084, 3983, 3607}], 
       Line3DBox[{3156, 4031, 3144, 4020, 3133, 4009, 3121, 3997, 3087, 3984, 
        3608}], Line3DBox[{3168, 4042, 3157, 4032, 3145, 4021, 3134, 4010, 
        3122, 3998, 3090, 3985, 3609}], 
       Line3DBox[{3179, 4052, 3169, 4043, 3158, 4033, 3146, 4022, 3135, 4011, 
        3123, 3999, 3093, 3986, 3610}], 
       Line3DBox[{3181, 4055, 4053, 3170, 4044, 3159, 4034, 3147, 4023, 3136, 
        4012, 3124, 4000, 3097, 3987, 3611}], 
       Line3DBox[{3190, 4069, 3182, 4056, 4054, 3171, 4045, 3160, 4035, 3148, 
        4024, 3137, 4013, 3125, 4001, 3098, 3988, 3612}], 
       Line3DBox[{3198, 4076, 3191, 4070, 3183, 4058, 4057, 3172, 4046, 3161, 
        4036, 3149, 4025, 3138, 4014, 3126, 4002, 3102, 3989, 3613}], 
       Line3DBox[{3205, 4082, 3199, 4077, 3192, 4071, 3184, 4060, 4059, 3173, 
        4047, 3162, 4037, 3150, 4026, 3139, 4015, 3127, 4003, 3105, 3990, 
        3614}], Line3DBox[{2085, 3206, 4083, 3200, 4078, 3193, 4072, 3185, 
        4062, 4061, 3174, 4048, 3163, 4038, 3151, 4027, 3140, 4016, 3128, 
        4004, 3108, 3991, 3615}], 
       Line3DBox[{2092, 3210, 4087, 3207, 4084, 3201, 4079, 3194, 4073, 3186, 
        4064, 4063, 3175, 4049, 3164, 4039, 3152, 4028, 3141, 4017, 3129, 
        4005, 3111, 3992, 3616}], 
       Line3DBox[{2098, 3213, 4090, 3211, 4088, 3208, 4085, 3202, 4080, 3195, 
        4074, 3187, 4066, 4065, 3176, 4050, 3165, 4040, 3153, 4029, 3142, 
        4018, 3130, 4006, 3114, 3993, 3617}], 
       Line3DBox[{2103, 3215, 4092, 3214, 4091, 3212, 4089, 3209, 4086, 3203, 
        4081, 3196, 4075, 3188, 4068, 4067, 3177, 4051, 3166, 4041, 3154, 
        4030, 3143, 4019, 3131, 4007, 3117, 3994, 3618}], 
       Line3DBox[{3507, 3857, 3477, 3841, 3454, 3825, 3431, 3809, 3408, 3793, 
        3385, 3777, 3362, 3761, 3339, 3745, 3316, 3729, 3293, 3713, 3270, 
        3697, 3247, 3681, 3224, 3665, 3099, 3649, 3095}], 
       Line3DBox[{2481, 3493, 4094, 3629}], 
       Line3DBox[{2495, 3521, 4108, 3495, 4095, 3630}], 
       Line3DBox[{2508, 3534, 4121, 3522, 4109, 3497, 4096, 3631}], 
       Line3DBox[{2579, 3594, 4196, 3590, 4191, 3585, 4185, 3579, 4175, 4174, 
        3572, 4161, 3563, 4151, 3553, 4140, 3542, 4129, 3530, 4117, 3513, 
        4104, 3639}], 
       Line3DBox[{2584, 3598, 4200, 3595, 4197, 3591, 4192, 3586, 4186, 3580, 
        4177, 4176, 3573, 4162, 3564, 4152, 3554, 4141, 3543, 4130, 3531, 
        4118, 3515, 4105, 3640}], 
       Line3DBox[{2588, 3601, 4203, 3599, 4201, 3596, 4198, 3592, 4193, 3587, 
        4187, 3581, 4179, 4178, 3574, 4163, 3565, 4153, 3555, 4142, 3544, 
        4131, 3532, 4119, 3517, 4106, 3641}], 
       Line3DBox[{2591, 3603, 4205, 3602, 4204, 3600, 4202, 3597, 4199, 3593, 
        4194, 3588, 4188, 3582, 4181, 4180, 3575, 4164, 3566, 4154, 3556, 
        4143, 3545, 4132, 3533, 4120, 3519, 4107, 3619}], 
       Line3DBox[{2610, 3071, 2464, 3041, 2434, 3011, 2404, 2981, 2374, 2951, 
        2344, 2921, 2314, 2891, 2284, 2861, 2254, 2831, 2224, 2801, 2194, 
        2771, 2164, 2741, 2134, 2711, 2102, 2681, 2611}], 
       Line3DBox[{2612, 2679, 2097, 2709, 2132, 2739, 2162, 2769, 2192, 2799, 
        2222, 2829, 2252, 2859, 2282, 2889, 2312, 2919, 2342, 2949, 2372, 
        2979, 2402, 3009, 2432, 3039, 2462, 3069, 2652}], 
       Line3DBox[{2613, 2677, 2091, 2707, 2130, 2737, 2160, 2767, 2190, 2797, 
        2220, 2827, 2250, 2857, 2280, 2887, 2310, 2917, 2340, 2947, 2370, 
        2977, 2400, 3007, 2430, 3037, 2460, 3067, 2651}], 
       Line3DBox[{2614, 2675, 2084, 2705, 2128, 2735, 2158, 2765, 2188, 2795, 
        2218, 2825, 2248, 2855, 2278, 2885, 2308, 2915, 2338, 2945, 2368, 
        2975, 2398, 3005, 2428, 3035, 2458, 3065, 2650}], 
       Line3DBox[{2622, 2659, 1997, 2689, 2112, 2719, 2142, 2749, 2172, 2779, 
        2202, 2809, 2232, 2839, 2262, 2869, 2292, 2899, 2322, 2929, 2352, 
        2959, 2382, 2989, 2412, 3019, 2442, 3049, 2642}], 
       Line3DBox[{2623, 2657, 1982, 2687, 2110, 2717, 2140, 2747, 2170, 2777, 
        2200, 2807, 2230, 2837, 2260, 2867, 2290, 2897, 2320, 2927, 2350, 
        2957, 2380, 2987, 2410, 3017, 2440, 3047, 2641}], 
       Line3DBox[{2624, 2655, 1966, 2685, 2108, 2715, 2138, 2745, 2168, 2775, 
        2198, 2805, 2228, 2835, 2258, 2865, 2288, 2895, 2318, 2925, 2348, 
        2955, 2378, 2985, 2408, 3015, 2438, 3045, 2640}], 
       Line3DBox[{3620, 3973, 3469, 3966, 3446, 3959, 3423, 3952, 3400, 3945, 
        3377, 3938, 3354, 3931, 3331, 3924, 3308, 3917, 3285, 3910, 3262, 
        3903, 3239, 3896, 3216, 3889, 3073, 3882, 3874}], 
       Line3DBox[{3621, 3974, 3485, 3967, 3462, 3960, 3439, 3953, 3416, 3946, 
        3393, 3939, 3370, 3932, 3347, 3925, 3324, 3918, 3301, 3911, 3278, 
        3904, 3255, 3897, 3232, 3890, 3155, 3883, 3881}], 
       Line3DBox[{3622, 3975, 3486, 3968, 3463, 3961, 3440, 3954, 3417, 3947, 
        3394, 3940, 3371, 3933, 3348, 3926, 3325, 3919, 3302, 3912, 3279, 
        3905, 3256, 3898, 3233, 3891, 3167, 3884, 3880}], 
       Line3DBox[{3623, 3976, 3487, 3969, 3464, 3962, 3441, 3955, 3418, 3948, 
        3395, 3941, 3372, 3934, 3349, 3927, 3326, 3920, 3303, 3913, 3280, 
        3906, 3257, 3899, 3234, 3892, 3178, 3885, 3879}], 
       Line3DBox[{3624, 3865, 3488, 3849, 3465, 3833, 3442, 3817, 3419, 3801, 
        3396, 3785, 3373, 3769, 3350, 3753, 3327, 3737, 3304, 3721, 3281, 
        3705, 3258, 3689, 3235, 3673, 3180, 3657, 3878}], 
       Line3DBox[{3625, 3977, 3489, 3970, 3466, 3963, 3443, 3956, 3420, 3949, 
        3397, 3942, 3374, 3935, 3351, 3928, 3328, 3921, 3305, 3914, 3282, 
        3907, 3259, 3900, 3236, 3893, 3189, 3886, 3877}], 
       Line3DBox[{3626, 3978, 3490, 3971, 3467, 3964, 3444, 3957, 3421, 3950, 
        3398, 3943, 3375, 3936, 3352, 3929, 3329, 3922, 3306, 3915, 3283, 
        3908, 3260, 3901, 3237, 3894, 3197, 3887, 3876}], 
       Line3DBox[{3627, 3979, 3491, 3972, 3468, 3965, 3445, 3958, 3422, 3951, 
        3399, 3944, 3376, 3937, 3353, 3930, 3330, 3923, 3307, 3916, 3284, 
        3909, 3261, 3902, 3238, 3895, 3204, 3888, 3875}], 
       Line3DBox[{3628, 4093, 3866}], 
       Line3DBox[{3632, 4097, 3499, 4110, 3523, 4122, 3535, 4133, 3546, 4144, 
        3867}], Line3DBox[{3633, 4098, 3501, 4111, 3524, 4123, 3536, 4134, 
        3547, 4145, 3557, 4155, 3868}], 
       Line3DBox[{3634, 4099, 3503, 4112, 3525, 4124, 3537, 4135, 3548, 4146, 
        3558, 4156, 3567, 4165, 3869}], 
       Line3DBox[{3636, 4101, 3506, 4114, 3527, 4126, 3539, 4137, 3550, 4148, 
        3560, 4158, 3569, 4167, 4169, 3576, 4182, 3871}], 
       Line3DBox[{3637, 4102, 3509, 4115, 3528, 4127, 3540, 4138, 3551, 4149, 
        3561, 4159, 3570, 4170, 4171, 3577, 4183, 3583, 4189, 3872}], 
       Line3DBox[{3638, 4103, 3511, 4116, 3529, 4128, 3541, 4139, 3552, 4150, 
        3562, 4160, 3571, 4172, 4173, 3578, 4184, 3584, 4190, 3589, 4195, 
        3873}], Line3DBox[{3870, 4168, 4166, 3568, 4157, 3559, 4147, 3549, 
        4136, 3538, 4125, 3526, 4113, 3505, 4100, 3635}]}}},
    VertexNormals->CompressedData["
1:eJztnXnsHVUVxx8tahQkmhCWsrSFsrSlUKC0Bdq+li3IHwaNG6CJoOzSFqRF
9lUSo4ArazSCkPgHUBUETEyQTQpd2GTRP4yAgoFC0CjUPwwmvjPomzefmfN9
c6fvvvfu758m3545c+a+M2fOPfcsU09Y9skTJ7RarTM+0mpNbP3vb4+DLj7p
Rz9+pf3Vhf/99/4qvPP3VruV+1tzcIf+iYP/n/6t+/N0VXym232XL/TwUXG6
b+KT+CQ+4fgQvzzOfNabPVl7cLf9WVeIh7IP44b30FX+LlPndNb/3EO7f5cp
hp93aPpd/HgPXeX603d5huHLGvluDjveQ1e5zud39Lg9eU73Opvet6fMGed1
7qGrXM9i+zBudqOHrnLdivVtVPWwh65vvcq+U18bSr3qoevbXtnzt3eJWk96
6Cqf95zC52q1zovqveihq3yur8zryL/34u7nOs3wfRZvyufqoauUf4fPdOS8
eGq3/MX44OTM1nN2I+tM8uj47ubXne2MwxC+p/E5syaf8cT911XtW9cdXLT+
vXyIfm1hnI35kP5ML9UHfq41II/3uaZI+0fmQ35R9r2bOsfHJ5N/fc3nOhfu
q8pD9MXfNeZTbMdardMBJz4PHdGhf352N/2Dhr8w28fnVLvvvjXlIXx3MV5N
eLKTdXD/dWQnCVf5rIH3mvhU2cnlNe2k+lxanI35hLJLZA+L47HMh+xYv3aS
/P/8Poj4kP05Hfxw4pPZyecC2cm8X6rKQ3hm386qad9mlL4Xsdml2HD/daH8
SfK7Jov2hPSnOP7MfLR4BfMh+UP7k3XlKY5HVa9PXXmq4iReO1kVl8jbK+Iz
CeIDhBOfqv27Vx7CQ/mTyU7Wwf3XkZ2k/R3xIfrHDX+ypj+p2smqfbf3uars
ZP67QHzITpKdIT7F+UL6c5HfGGrfrfIh+9PvvjvvTz4Q2b5bzRMjvPy9iM0u
xYb7r7P3rf14zX0c0av77qeXdOgfPaCb/gXDHzrAx2ea2bGVOTu2i+h3Ef2u
hp/j5EN2O3QcWLWTvvMy5kP0ofzJMwyf5bRLRK/aN6JX5SE8lJ0sj9vHZpdi
w/3XPRHo/aW4Gfk/xIfs5HOinSQ7RvFG4kN+o2pvm/bb1XUmO0l+L/GhuGso
O0k48aH4IcUbiQ/Rq/IQHvq8u26cczxx/3Wh9svZ/nFa7r1YCTjx2S3QeTfZ
w2wffb7TvhG9yidbn11z67BCXB+iD8VHjQPQcxFOfELtc4n+ZMP3d/Ih+rTv
HiXcf92w7LufH/J9dyi/vWrf7eXT9L77AsN3cvKh/azqv4U6D2ran5xm9m1F
2ncPEPdfF+r9pf3pzoZf4LQnT5o9fAz23Q+L++68nVTPX8j+hMqbUu1bqPgG
+Y20jyY+RE/5BsTnETtneTZ3zkL5kMSH8jAJb5oP4aHOu/dI++4auP868vdC
2cmdRDuZ+ZOrc/bwd4b/1mknq/Jn6tpJNS5B9IOKA9O+WI2T0P5djXPSOTXh
xKcqD7Pu/j3UvjtUXDH5k3Vw/3XkT9r73H7M+d5l+9wVNf23iz/WoZ+0dzf9
ZYZvt7ePzy6wLyY51eci/sMiT+bv7RzoHCdPf2Hgfbf3fJnoB8WH8FB2cmaK
T9bA/dc9BfaQ7CfxofdU9d/ITl5u+LZOO7lbhT1R45P55yL+g5JHXWeyb1lc
0btfpv21Gp9cZvZnZiT2rVk7Wf+91ej65ZPoR5u+io/3+ti+f8OCE11scsaG
E11scqb1GSxOdLHJmZ63HCe62OQcdvmJbtzkafq+Kv9g+w64znt9wjWc/j82
OUcNj0WOUcf5PJRwOn+hOCTxofikGs/M6PP5mRk95Vvmz22frODjreOm51XP
N3e0vgoXTfXhxIfy8SgvkfJ5CKd4I8VFqb+H1i9X70dHfCj+Sf0fKH9b62er
9tHi775aH5HwMpzXmewG5ZkQfdN8CDd72n4qh682/GmnfVPvS/ZzL9PbpTm9
nWX4GQt9fMjean3LW60r7Hxqm9z51NcN3zqH0zmOel/iE4p/ljebr1dS6yXV
8/Tl9t2Z4Tx/0XB1nzVouxI7Tv/P9KHr4lOfpX5w/3XaXB7mE6q/pTYPhflo
8z6Yj2pXiY9qP1V5+u1HV7dfn9a3n/loffKZj9avnvlo/eSZD+GpD3wMuP+6
UH07XzqwQ39f7vf6k+G/ctq3UP2N7X5tu/979Pca/tKBPj6x9YF/EdbzRVh/
4hO6v3HdPvCh8uFvOKpDv9msbvrrDZ8wy8cn9YEfB9x/3bj1gR+Un5z6wJfz
Gbc+8KHqNNO+uw7uvy6UP/mO6c9P2t30/zT81raPT6h9922d+7Xt/u/Rm3zt
d+b5+DS971b3ubSe2frf4lznYesD7/Xfln28Qz9jejf9UsNnTvfxaXrfHcpO
pj7wdXD/daHs5GamPzfk9OfduR38RqdehbKTdr92K2cPrzN8otNOxjYvw56n
Zz2z9b/euc5V/mRdO6nGXcmfVPsjHXN0h37xHt30hBOfNC9jHHD/daHmOVb1
2fD2tfjogg79N3L02xh+hZPPyxavuwfieN54KcUn1XOTq63/yRZzu+m/ZfiH
52rrTHMq687LCNVnKZSdVPu/vXFIh/723H1fN/xOpzxkD0P1o0t9O2PA/dcN
S9/ONC+jnD7Nyyinj21eRuoDHwPuvy5UH/hL7Xu9Xc6OZfj2Tvu2g933ogXd
9JMNP3+Bj09sfeAvg/W5RFwfolf5pD7w5XyGrQ982nf3g/uvC7Xvpnwb2/e2
/+zMw3nVzll+kYsfbjD8TmdcMdRcIaJX/dIsT+lFyFN62bk+RH+PyCdUXLGq
v3G+3x3xCTVXiOjJDhMfog+176a5MN7rs7903l0H918Xqg88nSNk5zg3OfXq
KehvHKoPvGonN8zv0N+xqJv+TcNvX+Tjs6n6wHv33ZuqD7zXTm5uv++1uTjt
BMOvd8Zvq86D6vaBD+VPhrKTad9dB/dfp9bdE59QfeDJTj5r+CNOO0nnLKH6
wIeaLxlbH3h1v0z0apzz4THrAx9q353sZB3cfx29p7QfJz5UT0310cTnrsM6
9K/u103/S8P/sp+PT9UcXu/5yxvgN75u+CqnP0n0ql9K8mR+751OPuQH9huf
zNOrc4Um2nfwOvAn8zjxoTxwNT88FB/CQ9m3FJ+sg/uvo/5FhBOfUPPOQs3L
IHkIH3Y+aryUzqNDnXer8zKWmv3ZK5L+7U3Pywg1DyjNy6iD+6+LbV7GJWYP
t0/zMiR50ryMcvrY7GR5nCQ2ezK8eFW/zbwfqNpDOndQ+3lW9e3M41X1y9Sn
NM+n6tzEmwcVqi9fKP5qfz+6r9r3j+iPM3+m3eXPUH/FhPeH99BV2okT7fc6
YEH6XerjPXSV619cnxjbc8WG99BVrvM0W+eVaZ0df9Xr+VPLm/rbgeO8nj10
leuW9UN4e944rFsPXeX6WH1d+5olddaH9nexrc+w4D10lb+jiof53YdnfYr7
pQz/cxWfrw2P/JYH0La8gE0kvy5nVg+7qpF11uU50/q9TJ9ez26r9327sA9S
OP7H2r51sbPevHg/xfRq3tFGk+dmJ/9Hjf4ZJ73aJ7PYbuv58IQ/YH0Dfn+Q
j09Wp7+l8/xd7VN3VqF9YPqZRr/MSZ/Vv9/hlIf6gBH9sYVxGKZX9Vnt99iv
Pj/tpM/6SNwbSJ+9ekJ4ps8vOPXhGug7QfRqn5zi7x3TZ/q8tGF99vZV+7zp
w6KG9LlVGJ9h+uI4A9MX76OZ3talvdFZz9W0Pn/I+H97iY/PbYX7X6ZX87sy
fd7dqZ+vFfpRTL+80M9h+sw/8fZjbNo+q/nSmX2+xcl/tdE/Jfob3n4+mT5f
ndM39TtO+G/MPv/BqT9XNexvWB5Je8+G7POGhv2N4nMfpj/J9HN/0X/2+htP
dPJN24/P99HfbfrwinM91XwGq/9vWz+A9+hVP4pwdX9xldjPSs0rU+2z2odE
rQv4l9Hf3LA+zxHts/f3yvR5jVOf7zJ9ftW5/mpezbamz5fn9FnVQ8LV75eq
z6pfpOqzWgdN/cOJfqPoP6vxjS/Z+s9z6nPW13Rzp7+3zvR5rVOfX7Hnvdv5
vGqflg+av/GdnL+xUqzPIpz6roSiV+vILC+/PcOpz6q9VfuuJH+jnD75G+X0
K0yfd2vIPqt9d1X7/DnT5yUN+RtqfOMdcT+o+hu0vyP6UHMMCVf9MbUfrOpv
TDm8Q3+es65QrUdT+xgUn78wvWqfTxD9DVWf1fjGz0yfX3Pq85aiPqv5n8SH
8H71eSun/qj+yc6mz+c79ZnqLole9U9Uf0ONP6v22fzm9g+c8j9p/sZjTn/j
IlvPHZ3rmfWb9dZ9UL2GWh8XSp4s/vwP535EPcfs19+oW5dB9BvF+Iaqz6eY
Pu/n1OcJJs913n5Noj5fYvo8yanPqv9MdUzUh5n4VMnjrfcvzidkerXOfaXp
87Sh1Ofq9U64ghNdbHIOC050sckZG050scmZ1mewONHFJmd63tHA1etjk3/Y
9Yroxk2epu8bir/Kh/mK9cWR6e2o4rxfozjbWZZft2cuv24DzP+i/FXKG6T4
j5rHTucUtB/P8jz/nsvzpHxR6ned6rU3Bd5qfdHsyUG5ONjJdF4M80+fsfjV
o7n4VRan2j4Xp6L5rVV9b/LxK+JD+cOk5+eY3u6ae7/U/jDquY+a10pzfom+
6TxtNS7XdB0N8Sd6mudO9P3maXvrDorr3Zi+uB6N6dVzzKbrwm40/i0n/4lG
f62T/mKTZ5JTnk8Y/ZFO+qb1eWuT50qnPFubvb2yoTxtVZ9vsu/Cu85zjfV2
Trp2Xx99qgsrp38p1YWV0g97Xdhx4jmmqs8nm/7s7+xfvZXRf9NJP9/04Xjn
+/KgqD9N6/OJ9rxznM9rfnO7FUld2BYmz9VOeVYd2aF/zdmfs9+8qab0eZ31
Y1/n/L2+Z/Tvd8r/fdPP9zn1+Vz7vaZGos/X2PNu4c2jMP1Z1JA+q3XoD5o8
zzu/F5OP6tCfN0vT56brHJuqo3nT6G930h9q9J91ynOm6c905/qstzztNTl9
VusNCb/C3sdtxDxt733V907V51/b+v/RKf+Woj1X87RT3UE5/bjVHQx7nWPT
dWH/tvjSD53v43qxLuwSs7eTGqoLe930eVXOPtPcc+KD8ovzu+ebfh6f6sIK
6fuNP3v9jXfNft7oXB+1bvdSk2f7mvPuif7Tps+H5+zzfTCfmvgQrs5r/oDp
/3ed+q/6G2dvorpd79xk1d84RrTPat1Bth9c69wPnmL6v6/z+6vWhX3K9POI
Q3z0R1n84eic/KNaF7bY3pdjne/Laab/s53rr9aFqfZZ1ecv2/rPjaTO8eem
z39tqC6M+h6o/RCq+DdVF6b6G5OHvC5M9TdUfVbraE41/Zzt/H0vNP9kJ+f3
OvMfDnPaZ5ovqc6FJJzmThL9cxYfeFjUZ2+8rm32+TjRPu8j+tte/6TpPnuY
JwP0E02eaxuuc9zB+fsOag5gKHluFfM31PjGcNeFtVpfMH1eGFmd4+pU51hI
n+ocy+m1/Ofe6/vDQ/FPfDYNH5V/0p/x5BNbPnbCEz5KeJqfVY6P25wsXgdt
LtKozr0a/vlQwzLvKa75TbHhVXkRdf3hhFfhNM+I5hapdSg0b4jmClGdSHl+
YzzrOao41YPQPCA1f5jqNagug+ovyuPq8aznqOJU10l1sqqe0HwcmoND50rJ
ngwWp7k2NL9GnVNDc2co75r4lJ87x7Oeo4pTHjWdv6h50ZTnTPnMdK6X9GSw
OOW/Ud6mOleF8oJIT+j7lfY7g8Vpvgnlq6vzSqhfN+GUx5XsyWDxYfnulM+z
iGc9RxWn7w75q+p8Dcojpfxn+u4kezJYnOZcUN6yOreiSk/yecX0PUrxk8Hi
ND+C5jKo8yCID/Xxo7hu0pPB4pSvSP6Jmn9IekV5g+X5gXn56TkTfTm9yqdp
ecaNPuEJT3jCE57whA8Bfn/CNwmO/hX1/R6Oft3R6fOQ44O+//jg5X2h45Fz
VPG0/oPFy/u9xCPnqOJp/QeLp/UfLF7e3zUeOUcVL++DGo+co4qX9+2MR85R
xcv7TMYj56ji5X0R45FzVPHyPn7xyDmqeHnfuXjkHFW8vL9ZPHKOKl6cVxOP
fP3hnEc6LPNhSX6qWyT+JD/hNP+xqj4xXydCcwZpniDJQ/P+aK6fWpdN9cI0
J47kDFUXTPOeaC4Yzf8iOWk+F83hot+d5KR5TzTXieSkuUs0X0mtn6U5PjSv
h+by0Dwdiquoee+h6jtC1XHQ+05zN6heieZo0PwLmnOh1iXRPAWqv6P5CDTX
gOYX0O9O/c+pXoP64VPf+1B1GSQn9T+neoGqfubeugD1d6e+1tS/mvpUU39p
6iNNdony0qlfsdpnmHDqD0zvO/XLDZXXHSZ/O7o8k4QnPOEJT3jCE57whI8n
3k54whOe8IQnPOEJT3jCB4n/B9y6WFw=
     "]], {}},
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{449.1070649675922, 396.4006172200853},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{3, 20}, {3, 20}, {3, 20}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.4238140140979305`, -2.27274951403822, 0.640105672136649},
  ViewVertical->{0.38494620126580437`, -0.21679146157845125`, 
   0.8971164274037712}]], "Output",
 CellChangeTimes->{{3.795359415594551*^9, 3.7953594407742577`*^9}, {
   3.7953594873431544`*^9, 3.795359516728651*^9}, {3.7953596027297597`*^9, 
   3.795359694081216*^9}, 3.795371306509761*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"ea801dee-1a03-4b40-8d54-db3d1c87145e"]
}, Open  ]]
},
WindowSize->{656, 669},
WindowMargins->{{-6, Automatic}, {Automatic, 5}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1053, 29, 159, "Input",ExpressionUUID->"b79d5a24-d07c-42da-ba17-ce89da84202c"],
Cell[1636, 53, 663, 18, 58, "Output",ExpressionUUID->"2f39da0e-eed9-45ac-8277-7706cdcc9dd3"]
}, Open  ]],
Cell[2314, 74, 594, 17, 63, "Input",ExpressionUUID->"52210dff-f28b-4edf-9f07-434bc4647882"],
Cell[CellGroupData[{
Cell[2933, 95, 1329, 35, 111, "Input",ExpressionUUID->"c1fa9de1-2c8c-4fa5-a96e-c5e92dd5f5d4"],
Cell[4265, 132, 1272, 38, 71, "Output",ExpressionUUID->"0bbcb7fd-0205-4a25-a040-eefc6c748de4"]
}, Open  ]],
Cell[5552, 173, 1258, 38, 83, "Input",ExpressionUUID->"c1281abd-87b1-487b-a585-f1ec9973679d"],
Cell[CellGroupData[{
Cell[6835, 215, 1458, 40, 123, "Input",ExpressionUUID->"69a9639f-2d2f-427d-ad14-fb1472eb19bf"],
Cell[8296, 257, 1686, 56, 118, "Output",ExpressionUUID->"a2fbd693-5aeb-430e-8838-a7150b3d622a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10019, 318, 2036, 69, 134, "Input",ExpressionUUID->"9547a1c7-88f0-422e-84b4-411c8274cd1f"],
Cell[12058, 389, 1986, 69, 118, "Output",ExpressionUUID->"57e16f54-e8bd-4507-ace5-b1237ac824b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14081, 463, 5340, 151, 422, "Input",ExpressionUUID->"fc208748-692c-45b4-8ce8-36429048e04d"],
Cell[19424, 616, 3105, 57, 308, "Output",ExpressionUUID->"52d45dc7-330c-4a2c-8e3e-4e634631abee"]
}, Open  ]],
Cell[22544, 676, 182, 3, 34, "Text",ExpressionUUID->"dadfb4b4-3f18-408a-be70-1cb701624321"],
Cell[CellGroupData[{
Cell[22751, 683, 1458, 40, 115, "Input",ExpressionUUID->"21612b4a-bb1a-4edd-b7ed-a4a1a1d1d8e5"],
Cell[24212, 725, 2047, 63, 158, "Output",ExpressionUUID->"2c935322-d926-41f7-934a-a2c285664da6"]
}, Open  ]],
Cell[26274, 791, 1955, 62, 111, "Input",ExpressionUUID->"01e9a9d8-1cd8-41c9-bdd7-4a01ba5852ff"],
Cell[CellGroupData[{
Cell[28254, 857, 2093, 64, 181, "Input",ExpressionUUID->"27b9a8bc-8929-4400-9575-096cee01a7b1"],
Cell[30350, 923, 2775, 93, 334, "Output",ExpressionUUID->"9bc3d546-5fe0-464e-8ab5-28c6fa6ee23d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33162, 1021, 198, 3, 44, "Input",ExpressionUUID->"2b3989e7-d60a-4bb1-8bed-95f06824532e"],
Cell[33363, 1026, 170, 2, 32, "Output",ExpressionUUID->"c26b0c04-ed29-43bc-8318-507856d2984d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33570, 1033, 715, 21, 69, "Input",ExpressionUUID->"da426355-7c1b-42b9-a05b-8c9578b1bd92"],
Cell[34288, 1056, 655, 19, 57, "Output",ExpressionUUID->"a38cd71a-d0ed-4ccd-aea4-542b15b220de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34980, 1080, 823, 24, 68, "Input",ExpressionUUID->"31373703-768f-4d0f-ab5b-c3386bde521a"],
Cell[35806, 1106, 1626, 51, 146, "Output",ExpressionUUID->"97ba2ba7-3ee2-4316-b8ea-452acf7a4aa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37469, 1162, 1478, 44, 164, "Input",ExpressionUUID->"fe232ecc-d77e-4970-9e04-e928586e1988"],
Cell[38950, 1208, 1245, 41, 80, "Output",ExpressionUUID->"d4c0d056-1233-4b9f-b70c-b1c02c0efb75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40232, 1254, 960, 27, 108, "Input",ExpressionUUID->"f02233b2-3bd0-4d48-b9c0-e2d013cb5c69"],
Cell[41195, 1283, 2010, 57, 96, "Output",ExpressionUUID->"f81049e5-30bf-4528-af5c-d85242be27e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43242, 1345, 651, 15, 47, "Input",ExpressionUUID->"0dac325e-8081-4077-b59c-2a7de99336d6"],
Cell[43896, 1362, 362, 10, 35, "Output",ExpressionUUID->"13f223bd-e49c-49ab-9c0f-4224093eee4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44295, 1377, 783, 23, 64, "Input",ExpressionUUID->"0ef7cc5b-e388-4f7c-9a91-34fbea012ed4"],
Cell[45081, 1402, 4167, 126, 188, "Output",ExpressionUUID->"ce205d57-f186-4e71-9d83-f40fa84c00f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49285, 1533, 1030, 30, 123, "Input",ExpressionUUID->"b5e6ea7f-b30b-4c36-ba5c-f4643998b4ff"],
Cell[50318, 1565, 749, 24, 70, "Output",ExpressionUUID->"8f64063f-14d1-4da9-a7ed-bb2db077182f"]
}, Open  ]],
Cell[51082, 1592, 533, 19, 68, "Input",ExpressionUUID->"74abff77-994b-43bd-a092-417aa3c880ac"],
Cell[CellGroupData[{
Cell[51640, 1615, 1465, 45, 101, "Input",ExpressionUUID->"2e31e65c-a9a0-48d0-a6e5-c5b72de32134"],
Cell[53108, 1662, 105270, 1684, 446, "Output",ExpressionUUID->"ea801dee-1a03-4b40-8d54-db3d1c87145e"]
}, Open  ]]
}
]
*)

